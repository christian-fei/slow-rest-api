[marking 0x376bbd102711 <JSFunction normalizeStringPosix (sfi = 0x376b2a95b8c1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 48/69 (69%), generic ICs: 0/69 (0%)]
[compiling method 0x376bbd102711 <JSFunction normalizeStringPosix (sfi = 0x376b2a95b8c1)> using TurboFan]
[optimizing 0x376bbd102711 <JSFunction normalizeStringPosix (sfi = 0x376b2a95b8c1)> - took 1.446, 1.463, 0.015 ms]
[completed optimizing 0x376bbd102711 <JSFunction normalizeStringPosix (sfi = 0x376b2a95b8c1)>]
[marking 0x376bea9b8df1 <JSFunction Module._nodeModulePaths (sfi = 0x376b2a93daf9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 23/23 (100%), generic ICs: 0/23 (0%)]
[compiling method 0x376bea9b8df1 <JSFunction Module._nodeModulePaths (sfi = 0x376b2a93daf9)> using TurboFan]
Candidates for inlining (size=1):
  #32:JSCall, frequency: 1
  - size:211, name: resolve
Inlining resolve into Module._nodeModulePaths
Candidates for inlining (size=1):
  #288:JSCall, frequency: 1.60788
  - size:41, name: assertPath
Inlining assertPath into Module._nodeModulePaths
[optimizing 0x376bea9b8df1 <JSFunction Module._nodeModulePaths (sfi = 0x376b2a93daf9)> - took 0.698, 2.714, 0.027 ms]
[completed optimizing 0x376bea9b8df1 <JSFunction Module._nodeModulePaths (sfi = 0x376b2a93daf9)>]
[marking 0x376bb490ca11 <JSFunction _tickCallback (sfi = 0x376b2a919871)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 29/32 (90%), generic ICs: 3/32 (9%)]
[compiling method 0x376bb490ca11 <JSFunction _tickCallback (sfi = 0x376b2a919871)> using TurboFan]
Candidates for inlining (size=5):
  #250:JSCall, frequency: 4.9447
  - size:55, name: emitAfterScript
  #149:JSCall, frequency: 4.9447
  - size:69, name: emitBeforeScript
  #106:JSCall, frequency: 4.9447
  - size:64, name: shift
  #309:JSCall, frequency: 1
  - size:184, name: emitPendingUnhandledRejections
  #289:JSCall, frequency: 1
  - size:132, name: tickDone
Inlining emitAfterScript into _tickCallback
Candidates for inlining (size=6):
  #508:JSCall, frequency: 4.9447
  - size:198, name: popAsyncIds
  #458:JSCall, frequency: 4.9447
  - size:90, name: validateAsyncId
  #149:JSCall, frequency: 4.9447
  - size:69, name: emitBeforeScript
  #106:JSCall, frequency: 4.9447
  - size:64, name: shift
  #309:JSCall, frequency: 1
  - size:184, name: emitPendingUnhandledRejections
  #289:JSCall, frequency: 1
  - size:132, name: tickDone
Inlining popAsyncIds into _tickCallback
Candidates for inlining (size=5):
  #458:JSCall, frequency: 4.9447
  - size:90, name: validateAsyncId
  #149:JSCall, frequency: 4.9447
  - size:69, name: emitBeforeScript
  #106:JSCall, frequency: 4.9447
  - size:64, name: shift
  #309:JSCall, frequency: 1
  - size:184, name: emitPendingUnhandledRejections
  #289:JSCall, frequency: 1
  - size:132, name: tickDone
Inlining validateAsyncId into _tickCallback
Candidates for inlining (size=4):
  #149:JSCall, frequency: 4.9447
  - size:69, name: emitBeforeScript
  #106:JSCall, frequency: 4.9447
  - size:64, name: shift
  #309:JSCall, frequency: 1
  - size:184, name: emitPendingUnhandledRejections
  #289:JSCall, frequency: 1
  - size:132, name: tickDone
Inlining emitBeforeScript into _tickCallback
Candidates for inlining (size=6):
  #952:JSCall, frequency: 4.9447
  - size:188, name: pushAsyncIds
  #946:JSCall, frequency: 4.9447
  - size:90, name: validateAsyncId
  #938:JSCall, frequency: 4.9447
  - size:90, name: validateAsyncId
  #106:JSCall, frequency: 4.9447
  - size:64, name: shift
  #309:JSCall, frequency: 1
  - size:184, name: emitPendingUnhandledRejections
  #289:JSCall, frequency: 1
  - size:132, name: tickDone
Inlining pushAsyncIds into _tickCallback
Candidates for inlining (size=5):
  #946:JSCall, frequency: 4.9447
  - size:90, name: validateAsyncId
  #938:JSCall, frequency: 4.9447
  - size:90, name: validateAsyncId
  #106:JSCall, frequency: 4.9447
  - size:64, name: shift
  #309:JSCall, frequency: 1
  - size:184, name: emitPendingUnhandledRejections
  #289:JSCall, frequency: 1
  - size:132, name: tickDone
Inlining validateAsyncId into _tickCallback
Candidates for inlining (size=4):
  #938:JSCall, frequency: 4.9447
  - size:90, name: validateAsyncId
  #106:JSCall, frequency: 4.9447
  - size:64, name: shift
  #309:JSCall, frequency: 1
  - size:184, name: emitPendingUnhandledRejections
  #289:JSCall, frequency: 1
  - size:132, name: tickDone
Inlining validateAsyncId into _tickCallback
Candidates for inlining (size=3):
  #106:JSCall, frequency: 4.9447
  - size:64, name: shift
  #309:JSCall, frequency: 1
  - size:184, name: emitPendingUnhandledRejections
  #289:JSCall, frequency: 1
  - size:132, name: tickDone
Inlining shift into _tickCallback
Candidates for inlining (size=2):
  #309:JSCall, frequency: 1
  - size:184, name: emitPendingUnhandledRejections
  #289:JSCall, frequency: 1
  - size:132, name: tickDone
[optimizing 0x376bb490ca11 <JSFunction _tickCallback (sfi = 0x376b2a919871)> - took 2.862, 2.828, 0.026 ms]
[completed optimizing 0x376bb490ca11 <JSFunction _tickCallback (sfi = 0x376b2a919871)>]
[marking 0x376b9eaef601 <JSFunction checkInvalidHeaderChar (sfi = 0x376bbd132ef1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 27/27 (100%), generic ICs: 1/27 (3%)]
[compiling method 0x376b9eaef601 <JSFunction checkInvalidHeaderChar (sfi = 0x376bbd132ef1)> using TurboFan]
[optimizing 0x376b9eaef601 <JSFunction checkInvalidHeaderChar (sfi = 0x376bbd132ef1)> - took 0.219, 1.270, 0.015 ms]
[completed optimizing 0x376b9eaef601 <JSFunction checkInvalidHeaderChar (sfi = 0x376bbd132ef1)>]
[marking 0x376bea99f2e9 <JSFunction push (sfi = 0x376b2a918dd1)> for optimized recompilation, reason: small function, ICs with typeinfo: 6/7 (85%), generic ICs: 0/7 (0%)]
[compiling method 0x376bea99f2e9 <JSFunction push (sfi = 0x376b2a918dd1)> using TurboFan]
[marking 0x376b166392d9 <JSFunction specify (sfi = 0x376bd587c0e9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 31/36 (86%), generic ICs: 0/36 (0%)]
[compiling method 0x376b166392d9 <JSFunction specify (sfi = 0x376bd587c0e9)> using TurboFan]
Candidates for inlining (size=1):
  #19:JSCall, frequency: 1
  - size:285, name: parseMediaType
Inlining parseMediaType into specify
[optimizing 0x376bea99f2e9 <JSFunction push (sfi = 0x376b2a918dd1)> - took 0.087, 0.371, 0.006 ms]
[completed optimizing 0x376bea99f2e9 <JSFunction push (sfi = 0x376b2a918dd1)>]
[optimizing 0x376b166392d9 <JSFunction specify (sfi = 0x376bd587c0e9)> - took 0.468, 2.808, 0.026 ms]
[completed optimizing 0x376b166392d9 <JSFunction specify (sfi = 0x376bd587c0e9)>]
[marking 0x376bea9adad1 <JSFunction nextTick (sfi = 0x376b2a919919)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 31/40 (77%), generic ICs: 0/40 (0%)]
[compiling method 0x376bea9adad1 <JSFunction nextTick (sfi = 0x376b2a919919)> using TurboFan]
Candidates for inlining (size=3):
  #279:JSCall, frequency: 1
  - size:49, name: push
  #273:JSConstruct, frequency: 1
  - size:89, name: TickObject
  #268:JSCall, frequency: 1
  - size:40, name: getDefaultTriggerAsyncId
Inlining push into nextTick
Candidates for inlining (size=2):
  #273:JSConstruct, frequency: 1
  - size:89, name: TickObject
  #268:JSCall, frequency: 1
  - size:40, name: getDefaultTriggerAsyncId
Inlining TickObject into nextTick
Candidates for inlining (size=1):
  #268:JSCall, frequency: 1
  - size:40, name: getDefaultTriggerAsyncId
Inlining getDefaultTriggerAsyncId into nextTick
[optimizing 0x376bea9adad1 <JSFunction nextTick (sfi = 0x376b2a919919)> - took 1.550, 2.430, 0.027 ms]
[completed optimizing 0x376bea9adad1 <JSFunction nextTick (sfi = 0x376b2a919919)>]
[marking 0x376b7fbbce49 <JSFunction addListener (sfi = 0x376b7fbbb901)> for optimized recompilation, reason: small function, ICs with typeinfo: 1/1 (100%), generic ICs: 0/1 (0%)]
[compiling method 0x376b7fbbce49 <JSFunction addListener (sfi = 0x376b7fbbb901)> using TurboFan]
Candidates for inlining (size=1):
  #17:JSCall, frequency: 1
  - size:445, name: _addListener
Inlining _addListener into addListener
Inlining small function(s) at call site #195:JSCall
Inlining $getMaxListeners into addListener
Inlining small function(s) at call site #279:JSCall
Inlining get into addListener
[optimizing 0x376b7fbbce49 <JSFunction addListener (sfi = 0x376b7fbbb901)> - took 0.475, 1.420, 0.022 ms]
[completed optimizing 0x376b7fbbce49 <JSFunction addListener (sfi = 0x376b7fbbb901)>]
[marking 0x376b7fbbce01 <JSFunction emit (sfi = 0x376b7fbbb859)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 16/47 (34%), generic ICs: 3/47 (6%)]
[compiling method 0x376b7fbbce01 <JSFunction emit (sfi = 0x376b7fbbb859)> using TurboFan]
[optimizing 0x376b7fbbce01 <JSFunction emit (sfi = 0x376b7fbbb859)> - took 0.248, 1.514, 0.021 ms]
[completed optimizing 0x376b7fbbce01 <JSFunction emit (sfi = 0x376b7fbbb859)>]
[marking 0x376bea9a0e09 <JSFunction remove (sfi = 0x376b2a928061)> for optimized recompilation, reason: small function, ICs with typeinfo: 10/10 (100%), generic ICs: 0/10 (0%)]
[compiling method 0x376bea9a0e09 <JSFunction remove (sfi = 0x376b2a928061)> using TurboFan]
[optimizing 0x376bea9a0e09 <JSFunction remove (sfi = 0x376b2a928061)> - took 0.167, 1.298, 0.035 ms]
[completed optimizing 0x376bea9a0e09 <JSFunction remove (sfi = 0x376b2a928061)>]
[marking 0x376bbb482a21 <JSFunction getMediaTypePriority (sfi = 0x376bd587c041)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 12/15 (80%), generic ICs: 0/15 (0%)]
[compiling method 0x376bbb482a21 <JSFunction getMediaTypePriority (sfi = 0x376bd587c041)> using TurboFan]
Candidates for inlining (size=1):
  #52:JSCall, frequency: 1
  - size:294, name: specify
Inlining specify into getMediaTypePriority
Candidates for inlining (size=1):
  #155:JSCall, frequency: 1
  - size:285, name: parseMediaType
Inlining parseMediaType into getMediaTypePriority
[optimizing 0x376bbb482a21 <JSFunction getMediaTypePriority (sfi = 0x376bd587c041)> - took 1.165, 4.549, 0.035 ms]
[completed optimizing 0x376bbb482a21 <JSFunction getMediaTypePriority (sfi = 0x376bd587c041)>]
[marking 0x376be7d83e69 <JSFunction onwrite (sfi = 0x376b2a96b441)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 10/14 (71%), generic ICs: 0/14 (0%)]
[compiling method 0x376be7d83e69 <JSFunction onwrite (sfi = 0x376b2a96b441)> using TurboFan]
Candidates for inlining (size=3):
  #95:JSCall, frequency: 1
  - size:357, name: nextTick
  #48:JSCall, frequency: 1
  - size:39, name: needFinish
  #31:JSCall, frequency: 1
  - size:35, name: onwriteStateUpdate
Inlining nextTick into onwrite
Candidates for inlining (size=5):
  #404:JSCall, frequency: 1
  - size:49, name: push
  #398:JSConstruct, frequency: 1
  - size:89, name: TickObject
  #393:JSCall, frequency: 1
  - size:40, name: getDefaultTriggerAsyncId
  #48:JSCall, frequency: 1
  - size:39, name: needFinish
  #31:JSCall, frequency: 1
  - size:35, name: onwriteStateUpdate
Inlining push into onwrite
Candidates for inlining (size=4):
  #398:JSConstruct, frequency: 1
  - size:89, name: TickObject
  #393:JSCall, frequency: 1
  - size:40, name: getDefaultTriggerAsyncId
  #48:JSCall, frequency: 1
  - size:39, name: needFinish
  #31:JSCall, frequency: 1
  - size:35, name: onwriteStateUpdate
Inlining TickObject into onwrite
Candidates for inlining (size=3):
  #393:JSCall, frequency: 1
  - size:40, name: getDefaultTriggerAsyncId
  #48:JSCall, frequency: 1
  - size:39, name: needFinish
  #31:JSCall, frequency: 1
  - size:35, name: onwriteStateUpdate
Inlining getDefaultTriggerAsyncId into onwrite
Candidates for inlining (size=2):
  #48:JSCall, frequency: 1
  - size:39, name: needFinish
  #31:JSCall, frequency: 1
  - size:35, name: onwriteStateUpdate
Inlining needFinish into onwrite
Candidates for inlining (size=1):
  #31:JSCall, frequency: 1
  - size:35, name: onwriteStateUpdate
Inlining onwriteStateUpdate into onwrite
[optimizing 0x376be7d83e69 <JSFunction onwrite (sfi = 0x376b2a96b441)> - took 1.624, 3.108, 0.092 ms]
[completed optimizing 0x376be7d83e69 <JSFunction onwrite (sfi = 0x376b2a96b441)>]
[deoptimizing (DEOPT eager): begin 0x376bbb482a21 <JSFunction getMediaTypePriority (sfi = 0x376bd587c041)> (opt #10) @1, FP to SP delta: 96, caller sp: 0x7fff5fbf5208]
            ;;; deoptimize at </Users/christian/Documents/projects/slow-rest-api/node_modules/negotiator/lib/mediaType.js:102:32>, wrong map
  reading input frame getMediaTypePriority => bytecode_offset=12, args=4, height=8; inputs:
      0: 0x376bbb482a21 ; [fp - 16] 0x376bbb482a21 <JSFunction getMediaTypePriority (sfi = 0x376bd587c041)>
      1: 0x376b90f022d1 ; [fp + 40] 0x376b90f022d1 <undefined>
      2: 0x376b623a0b49 ; r14 0x376b623a0b49 <String[16]: application/json>
      3: 0x376bd10c6ed9 ; rbx 0x376bd10c6ed9 <JSArray[1]>
      4: 0x00000000 ; r12 0
      5: 0x376bbb482991 ; [fp - 8] 0x376bbb482991 <FixedArray[16]>
      6: 0x376bd10c7261 ; [fp - 24] 0x376bd10c7261 <Object map = 0x376b00fb3ed1>
      7: 0 ; (int) [fp - 32] 
      8: 0x376b90f02569 ; (literal 3) 0x376b90f02569 <Odd Oddball: optimized_out>
      9: 0x376b90f02569 ; (literal 3) 0x376b90f02569 <Odd Oddball: optimized_out>
     10: 0x376b90f02569 ; (literal 3) 0x376b90f02569 <Odd Oddball: optimized_out>
     11: 0x376b90f02569 ; (literal 3) 0x376b90f02569 <Odd Oddball: optimized_out>
     12: 0x376b90f02569 ; (literal 3) 0x376b90f02569 <Odd Oddball: optimized_out>
     13: 0x376b90f02569 ; (literal 3) 0x376b90f02569 <Odd Oddball: optimized_out>
  translating interpreted frame getMediaTypePriority => bytecode_offset=12, height=64
    0x7fff5fbf5200: [top + 136] <- 0x376b90f022d1 ;  0x376b90f022d1 <undefined>  (input #1)
    0x7fff5fbf51f8: [top + 128] <- 0x376b623a0b49 ;  0x376b623a0b49 <String[16]: application/json>  (input #2)
    0x7fff5fbf51f0: [top + 120] <- 0x376bd10c6ed9 ;  0x376bd10c6ed9 <JSArray[1]>  (input #3)
    0x7fff5fbf51e8: [top + 112] <- 0x00000000 ;  0  (input #4)
    -------------------------
    0x7fff5fbf51e0: [top + 104] <- 0x173e474bd196 ;  caller's pc
    0x7fff5fbf51d8: [top + 96] <- 0x7fff5fbf5250 ;  caller's fp
    0x7fff5fbf51d0: [top + 88] <- 0x376bbb482991 ;  context    0x376bbb482991 <FixedArray[16]>  (input #5)
    0x7fff5fbf51c8: [top + 80] <- 0x376bbb482a21 ;  function    0x376bbb482a21 <JSFunction getMediaTypePriority (sfi = 0x376bd587c041)>  (input #0)
    0x7fff5fbf51c0: [top + 72] <- 0x376bd587e019 ;  bytecode array 0x376bd587e019 <BytecodeArray[116]>  (input #0)
    0x7fff5fbf51b8: [top + 64] <- 0x4500000000 ;  bytecode offset @ 12
  (input #0)
    -------------------------
    0x7fff5fbf51b0: [top + 56] <- 0x376bd10c7261 ;  0x376bd10c7261 <Object map = 0x376b00fb3ed1>  (input #6)
    0x7fff5fbf51a8: [top + 48] <- 0x00000000 ;  0  (input #7)
    0x7fff5fbf51a0: [top + 40] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5198: [top + 32] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5190: [top + 24] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf5188: [top + 16] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf5180: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #12)
    0x7fff5fbf5178: [top + 0] <- 0x376b90f02569 ;  accumulator 0x376b90f02569 <Odd Oddball: optimized_out>  (input #13)
[deoptimizing (eager): end 0x376bbb482a21 <JSFunction getMediaTypePriority (sfi = 0x376bd587c041)> @1 => node=12, pc=0x173e474bd9c0, caller sp=0x7fff5fbf5208, state=TOS_REGISTER, took 1.779 ms]
[removing optimized code for: 0x376bbb482a21 <JSFunction getMediaTypePriority (sfi = 0x376bd587c041)>]
[marking 0x376b55586009 <JSFunction getType (sfi = 0x376bd587cc31)> for optimized recompilation, reason: small function, ICs with typeinfo: 3/3 (100%), generic ICs: 0/3 (0%)]
[compiling method 0x376b55586009 <JSFunction getType (sfi = 0x376bd587cc31)> using TurboFan]
[optimizing 0x376b55586009 <JSFunction getType (sfi = 0x376bd587cc31)> - took 0.078, 0.469, 0.009 ms]
[completed optimizing 0x376b55586009 <JSFunction getType (sfi = 0x376bd587cc31)>]
[marking 0x376b2a969dd1 <JSFunction Readable.read (sfi = 0x376b2a9664d1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 41/67 (61%), generic ICs: 0/67 (0%)]
[compiling method 0x376b2a969dd1 <JSFunction Readable.read (sfi = 0x376b2a9664d1)> using TurboFan]
Inlining small function(s) at call site #28:JSCall
Inlining debugs.(anonymous function) into Readable.read
Inlining small function(s) at call site #132:JSCall
Inlining debugs.(anonymous function) into Readable.read
Inlining small function(s) at call site #160:JSCall
Inlining debugs.(anonymous function) into Readable.read
Candidates for inlining (size=2):
  #80:JSCall, frequency: 1
  - size:134, name: howMuchToRead
  #110:JSCall, frequency: 0.823685
  - size:46, name: endReadable
Inlining howMuchToRead into Readable.read
Candidates for inlining (size=1):
  #110:JSCall, frequency: 0.823685
  - size:46, name: endReadable
Inlining endReadable into Readable.read
Candidates for inlining (size=1):
  #604:JSCall, frequency: 0.823685
  - size:357, name: nextTick
Inlining nextTick into Readable.read
Candidates for inlining (size=3):
  #894:JSCall, frequency: 0.823685
  - size:49, name: push
  #888:JSConstruct, frequency: 0.823685
  - size:89, name: TickObject
  #883:JSCall, frequency: 0.823685
  - size:40, name: getDefaultTriggerAsyncId
Inlining push into Readable.read
Candidates for inlining (size=2):
  #888:JSConstruct, frequency: 0.823685
  - size:89, name: TickObject
  #883:JSCall, frequency: 0.823685
  - size:40, name: getDefaultTriggerAsyncId
Inlining TickObject into Readable.read
Candidates for inlining (size=1):
  #883:JSCall, frequency: 0.823685
  - size:40, name: getDefaultTriggerAsyncId
Inlining getDefaultTriggerAsyncId into Readable.read
[marking 0x376b71d39c79 <JSFunction getPriority (sfi = 0x376bd587cb89)> for optimized recompilation, reason: small function, ICs with typeinfo: 1/1 (100%), generic ICs: 0/1 (0%)]
[compiling method 0x376b71d3f799 <JSFunction getPriority (sfi = 0x376bd587cb89)> using TurboFan]
Candidates for inlining (size=1):
  #17:JSCall, frequency: 1
  - size:116, name: getMediaTypePriority
Inlining getMediaTypePriority into getPriority
Candidates for inlining (size=1):
  #71:JSCall, frequency: 1.00022
  - size:294, name: specify
Inlining specify into getPriority
Candidates for inlining (size=1):
  #173:JSCall, frequency: 1.00022
  - size:285, name: parseMediaType
Inlining parseMediaType into getPriority
[optimizing 0x376b2a969dd1 <JSFunction Readable.read (sfi = 0x376b2a9664d1)> - took 1.587, 4.299, 0.042 ms]
[completed optimizing 0x376b2a969dd1 <JSFunction Readable.read (sfi = 0x376b2a9664d1)>]
[marking 0x376be7d84569 <JSFunction emitReadable_ (sfi = 0x376b2a965709)> for optimized recompilation, reason: small function, ICs with typeinfo: 4/4 (100%), generic ICs: 0/4 (0%)]
[compiling method 0x376be7d84569 <JSFunction emitReadable_ (sfi = 0x376b2a965709)> using TurboFan]
Inlining small function(s) at call site #28:JSCall
Inlining debugs.(anonymous function) into emitReadable_
Candidates for inlining (size=2):
  #44:JSCall, frequency: 1
  - size:52, name: flow
  #38:JSCall, frequency: 1
  - size:350, name: emit
Inlining flow into emitReadable_
Inlining small function(s) at call site #99:JSCall
Inlining debugs.(anonymous function) into emitReadable_
Candidates for inlining (size=1):
  #38:JSCall, frequency: 1
  - size:350, name: emit
Inlining emit into emitReadable_
[optimizing 0x376b71d3f799 <JSFunction getPriority (sfi = 0x376bd587cb89)> - took 0.793, 4.704, 0.038 ms]
[completed optimizing 0x376b71d3f799 <JSFunction getPriority (sfi = 0x376bd587cb89)>]
[optimizing 0x376be7d84569 <JSFunction emitReadable_ (sfi = 0x376b2a965709)> - took 0.791, 1.987, 0.016 ms]
[completed optimizing 0x376be7d84569 <JSFunction emitReadable_ (sfi = 0x376b2a965709)>]
[marking 0x376b10c836e1 <JSFunction next (sfi = 0x376bd5874e41)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 43/70 (61%), generic ICs: 4/70 (5%)]
[compiling method 0x376b10c8a441 <JSFunction next (sfi = 0x376bd5874e41)> using TurboFan]
Inlining small function(s) at call site #142:JSCall
Inlining _reqClosed into next
Candidates for inlining (size=7):
  #388:JSCall, frequency: 0.5
  - size:350, name: emit
  #373:JSCall, frequency: 0.5
  - size:382, name: removeListener
  #360:JSCall, frequency: 0.5
  - size:382, name: removeListener
  #276:JSCall, frequency: 0.5
  - size:150, name: wrapper
  #269:JSCall, frequency: 0.5
  - size:146, name: startHandlerTimer
  #179:JSCall, frequency: 0.5
  - size:290, name: 
  #113:JSCall, frequency: 0.5
  - size:216, name: endHandlerTimer
Inlining emit into next
Candidates for inlining (size=6):
  #373:JSCall, frequency: 0.5
  - size:382, name: removeListener
  #360:JSCall, frequency: 0.5
  - size:382, name: removeListener
  #276:JSCall, frequency: 0.5
  - size:150, name: wrapper
  #269:JSCall, frequency: 0.5
  - size:146, name: startHandlerTimer
  #179:JSCall, frequency: 0.5
  - size:290, name: 
  #113:JSCall, frequency: 0.5
  - size:216, name: endHandlerTimer
Inlining removeListener into next
Candidates for inlining (size=5):
  #360:JSCall, frequency: 0.5
  - size:382, name: removeListener
  #276:JSCall, frequency: 0.5
  - size:150, name: wrapper
  #269:JSCall, frequency: 0.5
  - size:146, name: startHandlerTimer
  #179:JSCall, frequency: 0.5
  - size:290, name: 
  #113:JSCall, frequency: 0.5
  - size:216, name: endHandlerTimer
Inlining wrapper into next
Candidates for inlining (size=3):
  #269:JSCall, frequency: 0.5
  - size:146, name: startHandlerTimer
  #179:JSCall, frequency: 0.5
  - size:290, name: 
  #113:JSCall, frequency: 0.5
  - size:216, name: endHandlerTimer
[optimizing 0x376b10c8a441 <JSFunction next (sfi = 0x376bd5874e41)> - took 1.979, 8.470, 0.089 ms]
[completed optimizing 0x376b10c8a441 <JSFunction next (sfi = 0x376bd5874e41)>]
[deoptimizing (DEOPT eager): begin 0x376bea9a0e09 <JSFunction remove (sfi = 0x376b2a928061)> (opt #9) @1, FP to SP delta: 16, caller sp: 0x7fff5fbf5098]
            ;;; deoptimize at <internal/linkedlist.js:16:12>, wrong map
  reading input frame remove => bytecode_offset=0, args=2, height=2; inputs:
      0: 0x376bea9a0e09 ; [fp - 16] 0x376bea9a0e09 <JSFunction remove (sfi = 0x376b2a928061)>
      1: 0x376b90f022d1 ; [fp + 24] 0x376b90f022d1 <undefined>
      2: 0x376b9eaef1a1 ; rax 0x376b9eaef1a1 <JSFunction utcDate (sfi = 0x376bbd1346d9)>
      3: 0x376bea9a33c1 ; [fp - 8] 0x376bea9a33c1 <FixedArray[5]>
      4: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
      5: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
  translating interpreted frame remove => bytecode_offset=0, height=16
    0x7fff5fbf5090: [top + 72] <- 0x376b90f022d1 ;  0x376b90f022d1 <undefined>  (input #1)
    0x7fff5fbf5088: [top + 64] <- 0x376b9eaef1a1 ;  0x376b9eaef1a1 <JSFunction utcDate (sfi = 0x376bbd1346d9)>  (input #2)
    -------------------------
    0x7fff5fbf5080: [top + 56] <- 0x173e474bd196 ;  caller's pc
    0x7fff5fbf5078: [top + 48] <- 0x7fff5fbf50c0 ;  caller's fp
    0x7fff5fbf5070: [top + 40] <- 0x376bea9a33c1 ;  context    0x376bea9a33c1 <FixedArray[5]>  (input #3)
    0x7fff5fbf5068: [top + 32] <- 0x376bea9a0e09 ;  function    0x376bea9a0e09 <JSFunction remove (sfi = 0x376b2a928061)>  (input #0)
    0x7fff5fbf5060: [top + 24] <- 0x376bd5865239 ;  bytecode array 0x376bd5865239 <BytecodeArray[53]>  (input #0)
    0x7fff5fbf5058: [top + 16] <- 0x3900000000 ;  bytecode offset @ 0
  (input #0)
    -------------------------
    0x7fff5fbf5050: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #4)
    0x7fff5fbf5048: [top + 0] <- 0x376b90f02569 ;  accumulator 0x376b90f02569 <Odd Oddball: optimized_out>  (input #5)
[deoptimizing (eager): end 0x376bea9a0e09 <JSFunction remove (sfi = 0x376b2a928061)> @1 => node=0, pc=0x173e474bd9c0, caller sp=0x7fff5fbf5098, state=TOS_REGISTER, took 0.680 ms]
[removing optimized code for: 0x376bea9a0e09 <JSFunction remove (sfi = 0x376b2a928061)>]
[marking 0x376bf1637ee9 <JSFunction InsertionSort (sfi = 0x376bbd1426a1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 14/14 (100%), generic ICs: 1/14 (7%)]
[compiling method 0x376bf163dad9 <JSFunction InsertionSort (sfi = 0x376bbd1426a1)> using TurboFan]
[optimizing 0x376bf163dad9 <JSFunction InsertionSort (sfi = 0x376bbd1426a1)> - took 0.143, 1.293, 0.036 ms]
[completed optimizing 0x376bf163dad9 <JSFunction InsertionSort (sfi = 0x376bbd1426a1)>]
[marking 0x376b58f77a29 <JSFunction LazyTransform (sfi = 0x376ba411af79)> for optimized recompilation, reason: small function, ICs with typeinfo: 3/3 (100%), generic ICs: 0/3 (0%)]
[marking 0x376bb490c7c9 <JSFunction pushValueToArray (sfi = 0x376b7fbbd6e1)> for optimized recompilation, reason: small function, ICs with typeinfo: 6/6 (100%), generic ICs: 0/6 (0%)]
[compiling method 0x376b58f77a29 <JSFunction LazyTransform (sfi = 0x376ba411af79)> using TurboFan]
[compiling method 0x376bb490c7c9 <JSFunction pushValueToArray (sfi = 0x376b7fbbd6e1)> using TurboFan]
[optimizing 0x376b58f77a29 <JSFunction LazyTransform (sfi = 0x376ba411af79)> - took 0.084, 0.399, 0.024 ms]
[completed optimizing 0x376b58f77a29 <JSFunction LazyTransform (sfi = 0x376ba411af79)>]
[optimizing 0x376bb490c7c9 <JSFunction pushValueToArray (sfi = 0x376b7fbbd6e1)> - took 0.097, 0.640, 0.027 ms]
[completed optimizing 0x376bb490c7c9 <JSFunction pushValueToArray (sfi = 0x376b7fbbd6e1)>]
[marking 0x376bed8b5739 <JSFunction wrapper (sfi = 0x376be7dcf2b1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 18/20 (90%), generic ICs: 0/20 (0%)]
[compiling method 0x376bed8b5739 <JSFunction wrapper (sfi = 0x376be7dcf2b1)> using TurboFan]
[optimizing 0x376bed8b5739 <JSFunction wrapper (sfi = 0x376be7dcf2b1)> - took 0.196, 1.156, 0.015 ms]
[completed optimizing 0x376bed8b5739 <JSFunction wrapper (sfi = 0x376be7dcf2b1)>]
[marking 0x376b7fbbcf69 <JSFunction removeListener (sfi = 0x376b7fbbbba1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 31/53 (58%), generic ICs: 2/53 (3%)]
[compiling method 0x376b7fbbcf69 <JSFunction removeListener (sfi = 0x376b7fbbbba1)> using TurboFan]
Candidates for inlining (size=1):
  #225:JSCall, frequency: 0.326115
  - size:63, name: spliceOne
Inlining spliceOne into removeListener
[optimizing 0x376b7fbbcf69 <JSFunction removeListener (sfi = 0x376b7fbbbba1)> - took 0.404, 1.828, 0.021 ms]
[completed optimizing 0x376b7fbbcf69 <JSFunction removeListener (sfi = 0x376b7fbbbba1)>]
[marking 0x376b62385799 <JSFunction matchKnownFields (sfi = 0x376bbd135461)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 45/78 (57%), generic ICs: 0/78 (0%)]
[compiling method 0x376b62385799 <JSFunction matchKnownFields (sfi = 0x376bbd135461)> using TurboFan]
[optimizing 0x376b62385799 <JSFunction matchKnownFields (sfi = 0x376bbd135461)> - took 0.322, 1.579, 0.014 ms]
[completed optimizing 0x376b62385799 <JSFunction matchKnownFields (sfi = 0x376bbd135461)>]
[marking 0x376b2a968301 <JSFunction debugs.(anonymous function) (sfi = 0x376b2a93ab21)> for optimized recompilation, reason: small function, ICs with typeinfo: 0/0 (100%), generic ICs: 0/0 (0%)]
[compiling method 0x376b2a968301 <JSFunction debugs.(anonymous function) (sfi = 0x376b2a93ab21)> using TurboFan]
[optimizing 0x376b2a968301 <JSFunction debugs.(anonymous function) (sfi = 0x376b2a93ab21)> - took 0.031, 0.121, 0.003 ms]
[completed optimizing 0x376b2a968301 <JSFunction debugs.(anonymous function) (sfi = 0x376b2a93ab21)>]
[marking 0x376bb6be0171 <JSFunction (sfi = 0x376bd587a671)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 5/7 (71%), generic ICs: 0/7 (0%)]
[compiling method 0x376bb6be0171 <JSFunction (sfi = 0x376bd587a671)> using TurboFan]
Candidates for inlining (size=1):
  #22:JSCall, frequency: 1
  - size:61, name: out.(anonymous function)
Inlining out.(anonymous function) into 
[optimizing 0x376bb6be0171 <JSFunction (sfi = 0x376bd587a671)> - took 0.201, 0.446, 0.009 ms]
[completed optimizing 0x376bb6be0171 <JSFunction (sfi = 0x376bd587a671)>]
[marking 0x376bbb485039 <JSFunction parseMediaType (sfi = 0x376bd587bf99)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 14/39 (35%), generic ICs: 0/39 (0%)]
[compiling method 0x376bbb485039 <JSFunction parseMediaType (sfi = 0x376bd587bf99)> using TurboFan]
[optimizing 0x376bbb485039 <JSFunction parseMediaType (sfi = 0x376bd587bf99)> - took 0.227, 0.909, 0.012 ms]
[completed optimizing 0x376bbb485039 <JSFunction parseMediaType (sfi = 0x376bd587bf99)>]
[marking 0x376b9ea99721 <JSFunction get (sfi = 0x376b2a96e671)> for optimized recompilation, reason: small function, ICs with typeinfo: 5/9 (55%), generic ICs: 0/9 (0%)]
[compiling method 0x376b9ea99721 <JSFunction get (sfi = 0x376b2a96e671)> using TurboFan]
[optimizing 0x376b9ea99721 <JSFunction get (sfi = 0x376b2a96e671)> - took 0.071, 0.332, 0.008 ms]
[completed optimizing 0x376b9ea99721 <JSFunction get (sfi = 0x376b2a96e671)>]
[marking 0x376bbb4b3021 <JSFunction compareSpecs (sfi = 0x376bd587c239)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 12/12 (100%), generic ICs: 0/12 (0%)]
[compiling method 0x376bbb4b3021 <JSFunction compareSpecs (sfi = 0x376bd587c239)> using TurboFan]
[optimizing 0x376bbb4b3021 <JSFunction compareSpecs (sfi = 0x376bd587c239)> - took 0.099, 0.425, 0.007 ms]
[completed optimizing 0x376bbb4b3021 <JSFunction compareSpecs (sfi = 0x376bd587c239)>]
[marking 0x376bed8f60e9 <JSFunction Negotiator (sfi = 0x376be7de2091)> for optimized recompilation, reason: small function, ICs with typeinfo: 1/2 (50%), generic ICs: 0/2 (0%)]
[compiling method 0x376bed8f60e9 <JSFunction Negotiator (sfi = 0x376be7de2091)> using TurboFan]
[optimizing 0x376bed8f60e9 <JSFunction Negotiator (sfi = 0x376be7de2091)> - took 0.080, 0.462, 0.030 ms]
[completed optimizing 0x376bed8f60e9 <JSFunction Negotiator (sfi = 0x376be7de2091)>]
[marking 0x376bbb482a69 <JSFunction preferredMediaTypes (sfi = 0x376bd587c191)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 10/17 (58%), generic ICs: 0/17 (0%)]
[compiling method 0x376bbb482a69 <JSFunction preferredMediaTypes (sfi = 0x376bd587c191)> using TurboFan]
Candidates for inlining (size=1):
  #34:JSCall, frequency: 1
  - size:94, name: parseAccept
Inlining parseAccept into preferredMediaTypes
Candidates for inlining (size=2):
  #172:JSCall, frequency: 1
  - size:285, name: parseMediaType
  #127:JSCall, frequency: 1
  - size:125, name: splitMediaTypes
Inlining parseMediaType into preferredMediaTypes
Candidates for inlining (size=1):
  #127:JSCall, frequency: 1
  - size:125, name: splitMediaTypes
Inlining splitMediaTypes into preferredMediaTypes
[optimizing 0x376bbb482a69 <JSFunction preferredMediaTypes (sfi = 0x376bd587c191)> - took 0.716, 2.578, 0.052 ms]
[completed optimizing 0x376bbb482a69 <JSFunction preferredMediaTypes (sfi = 0x376bd587c191)>]
[marking 0x376b9eaf5c39 <JSFunction _addHeaderLines (sfi = 0x376bbd1353b9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 11/13 (84%), generic ICs: 0/13 (0%)]
[compiling method 0x376b9eaf5c39 <JSFunction _addHeaderLines (sfi = 0x376bbd1353b9)> using TurboFan]
Candidates for inlining (size=1):
  #84:JSCall, frequency: 1.0004
  - size:185, name: _addHeaderLine
Inlining _addHeaderLine into _addHeaderLines
[marking 0x376bb2c962b9 <JSFunction __send (sfi = 0x376bb2c94931)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 61/112 (54%), generic ICs: 6/112 (5%)]
[compiling method 0x376bb2c962b9 <JSFunction __send (sfi = 0x376bb2c94931)> using TurboFan]
Inlining small function(s) at call site #194:JSCall
Inlining out into __send
Candidates for inlining (size=6):
  #604:JSCall, frequency: 1
  - size:64, name: formatJSON
  #590:JSCall, frequency: 1
  - size:170, name: setHeader
  #466:JSCall, frequency: 1
  - size:75, name: accepts
  #428:JSCall, frequency: 1
  - size:75, name: accepts
  #397:JSCall, frequency: 1
  - size:87, name: getHeader
  #299:JSCall, frequency: 1
  - size:290, name: 
Inlining formatJSON into __send
Candidates for inlining (size=6):
  #867:JSCall, frequency: 1
  - size:170, name: setHeader
  #590:JSCall, frequency: 1
  - size:170, name: setHeader
  #466:JSCall, frequency: 1
  - size:75, name: accepts
  #428:JSCall, frequency: 1
  - size:75, name: accepts
  #397:JSCall, frequency: 1
  - size:87, name: getHeader
  #299:JSCall, frequency: 1
  - size:290, name: 
Inlining setHeader into __send
Candidates for inlining (size=6):
  #892:JSCall, frequency: 1
  - size:180, name: validateHeader
  #590:JSCall, frequency: 1
  - size:170, name: setHeader
  #466:JSCall, frequency: 1
  - size:75, name: accepts
  #428:JSCall, frequency: 1
  - size:75, name: accepts
  #397:JSCall, frequency: 1
  - size:87, name: getHeader
  #299:JSCall, frequency: 1
  - size:290, name: 
Inlining validateHeader into __send
Inlining small function(s) at call site #1085:JSCall
Inlining checkIsHttpToken into __send
Candidates for inlining (size=6):
  #1156:JSCall, frequency: 1
  - size:221, name: checkInvalidHeaderChar
  #590:JSCall, frequency: 1
  - size:170, name: setHeader
  #466:JSCall, frequency: 1
  - size:75, name: accepts
  #428:JSCall, frequency: 1
  - size:75, name: accepts
  #397:JSCall, frequency: 1
  - size:87, name: getHeader
  #299:JSCall, frequency: 1
  - size:290, name: 
Inlining checkInvalidHeaderChar into __send
Candidates for inlining (size=5):
  #590:JSCall, frequency: 1
  - size:170, name: setHeader
  #466:JSCall, frequency: 1
  - size:75, name: accepts
  #428:JSCall, frequency: 1
  - size:75, name: accepts
  #397:JSCall, frequency: 1
  - size:87, name: getHeader
  #299:JSCall, frequency: 1
  - size:290, name: 
Inlining setHeader into __send
Candidates for inlining (size=5):
  #1487:JSCall, frequency: 1
  - size:180, name: validateHeader
  #466:JSCall, frequency: 1
  - size:75, name: accepts
  #428:JSCall, frequency: 1
  - size:75, name: accepts
  #397:JSCall, frequency: 1
  - size:87, name: getHeader
  #299:JSCall, frequency: 1
  - size:290, name: 
Inlining accepts into __send
Inlining small function(s) at call site #1687:JSCall
Inlining mediaType into __send
Candidates for inlining (size=5):
  #1720:JSCall, frequency: 1
  - size:48, name: mediaTypes
  #1673:JSCall, frequency: 1
  - size:76, name: negotiator
  #428:JSCall, frequency: 1
  - size:75, name: accepts
  #397:JSCall, frequency: 1
  - size:87, name: getHeader
  #299:JSCall, frequency: 1
  - size:290, name: 
[optimizing 0x376b9eaf5c39 <JSFunction _addHeaderLines (sfi = 0x376bbd1353b9)> - took 0.305, 1.179, 0.029 ms]
[completed optimizing 0x376b9eaf5c39 <JSFunction _addHeaderLines (sfi = 0x376bbd1353b9)>]
[marking 0x376bea9a0e09 <JSFunction remove (sfi = 0x376b2a928061)> for optimized recompilation, reason: small function, ICs with typeinfo: 10/10 (100%), generic ICs: 2/10 (20%)]
[compiling method 0x376bea9a0e09 <JSFunction remove (sfi = 0x376b2a928061)> using TurboFan]
[optimizing 0x376bea9a0e09 <JSFunction remove (sfi = 0x376b2a928061)> - took 0.121, 1.103, 0.011 ms]
[completed optimizing 0x376bea9a0e09 <JSFunction remove (sfi = 0x376b2a928061)>]
[marking 0x376b2a969ef1 <JSFunction Readable.on (sfi = 0x376b2a966771)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 12/23 (52%), generic ICs: 1/23 (4%)]
[compiling method 0x376b2a969ef1 <JSFunction Readable.on (sfi = 0x376b2a966771)> using TurboFan]
Inlining small function(s) at call site #43:JSCall
Inlining addListener into Readable.on
Candidates for inlining (size=1):
  #113:JSCall, frequency: 1
  - size:445, name: _addListener
Inlining _addListener into Readable.on
Inlining small function(s) at call site #298:JSCall
Inlining $getMaxListeners into Readable.on
Inlining small function(s) at call site #382:JSCall
Inlining get into Readable.on
[optimizing 0x376bb2c962b9 <JSFunction __send (sfi = 0x376bb2c94931)> - took 3.079, 8.925, 0.072 ms]
[completed optimizing 0x376bb2c962b9 <JSFunction __send (sfi = 0x376bb2c94931)>]
[optimizing 0x376b2a969ef1 <JSFunction Readable.on (sfi = 0x376b2a966771)> - took 0.433, 1.449, 0.019 ms]
[completed optimizing 0x376b2a969ef1 <JSFunction Readable.on (sfi = 0x376b2a966771)>]
[marking 0x376bbd13a881 <JSFunction setHeader (sfi = 0x376bbd1384a1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 14/18 (77%), generic ICs: 4/18 (22%)]
[compiling method 0x376bbd13a881 <JSFunction setHeader (sfi = 0x376bbd1384a1)> using TurboFan]
Candidates for inlining (size=1):
  #16:JSCall, frequency: 1
  - size:180, name: validateHeader
Inlining validateHeader into setHeader
Inlining small function(s) at call site #212:JSCall
Inlining checkIsHttpToken into setHeader
Candidates for inlining (size=1):
  #283:JSCall, frequency: 1
  - size:221, name: checkInvalidHeaderChar
Inlining checkInvalidHeaderChar into setHeader
[optimizing 0x376bbd13a881 <JSFunction setHeader (sfi = 0x376bbd1384a1)> - took 0.649, 2.634, 0.022 ms]
[completed optimizing 0x376bbd13a881 <JSFunction setHeader (sfi = 0x376bbd1384a1)>]
[marking 0x376bea9a6711 <JSFunction insert (sfi = 0x376b2a9353a9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 27/32 (84%), generic ICs: 5/32 (15%)]
[compiling method 0x376bea9a6711 <JSFunction insert (sfi = 0x376b2a9353a9)> using TurboFan]
Inlining small function(s) at call site #326:JSCall
Inlining isEmpty into insert
Candidates for inlining (size=2):
  #334:JSCall, frequency: 1
  - size:33, name: ok
  #298:JSCall, frequency: 1
  - size:55, name: append
Inlining ok into insert
Candidates for inlining (size=1):
  #298:JSCall, frequency: 1
  - size:55, name: append
Inlining append into insert
Candidates for inlining (size=1):
  #534:JSCall, frequency: 0.999651
  - size:53, name: remove
Inlining remove into insert
[optimizing 0x376bea9a6711 <JSFunction insert (sfi = 0x376b2a9353a9)> - took 0.803, 2.807, 0.062 ms]
[completed optimizing 0x376bea9a6711 <JSFunction insert (sfi = 0x376b2a9353a9)>]
[marking 0x376b9eaf5bf1 <JSFunction _storeHeader (sfi = 0x376bbd1378d1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 37/125 (29%), generic ICs: 3/125 (2%)]
[compiling method 0x376b9eaf5bf1 <JSFunction _storeHeader (sfi = 0x376bbd1378d1)> using TurboFan]
Candidates for inlining (size=2):
  #134:JSCall, frequency: 3.64453
  - size:227, name: storeHeader
  #224:JSCall, frequency: 1
  - size:96, name: utcDate
Inlining storeHeader into _storeHeader
Candidates for inlining (size=3):
  #623:JSCall, frequency: 3.64453
  - size:201, name: matchHeader
  #591:JSCall, frequency: 3.64453
  - size:47, name: escapeHeaderValue
  #224:JSCall, frequency: 1
  - size:96, name: utcDate
Inlining matchHeader into _storeHeader
Candidates for inlining (size=2):
  #591:JSCall, frequency: 3.64453
  - size:47, name: escapeHeaderValue
  #224:JSCall, frequency: 1
  - size:96, name: utcDate
Inlining escapeHeaderValue into _storeHeader
Candidates for inlining (size=1):
  #224:JSCall, frequency: 1
  - size:96, name: utcDate
Inlining utcDate into _storeHeader
[optimizing 0x376b9eaf5bf1 <JSFunction _storeHeader (sfi = 0x376bbd1378d1)> - took 1.172, 4.889, 0.029 ms]
[completed optimizing 0x376b9eaf5bf1 <JSFunction _storeHeader (sfi = 0x376bbd1378d1)>]
[marking 0x376bbb4b30b1 <JSFunction isQuality (sfi = 0x376bd587c389)> for optimized recompilation, reason: small function, ICs with typeinfo: 2/2 (100%), generic ICs: 0/2 (0%)]
[compiling method 0x376bbb4b30b1 <JSFunction isQuality (sfi = 0x376bd587c389)> using TurboFan]
[marking 0x376be7de3511 <JSFunction mediaTypes (sfi = 0x376be7de2679)> for optimized recompilation, reason: small function, ICs with typeinfo: 6/6 (100%), generic ICs: 0/6 (0%)]
[compiling method 0x376be7de3511 <JSFunction mediaTypes (sfi = 0x376be7de2679)> using TurboFan]
Candidates for inlining (size=2):
  #41:JSCall, frequency: 1
  - size:184, name: preferredMediaTypes
  #16:JSCall, frequency: 1
  - size:159, name: loadModule
Inlining preferredMediaTypes into mediaTypes
Candidates for inlining (size=2):
  #89:JSCall, frequency: 1
  - size:94, name: parseAccept
  #16:JSCall, frequency: 1
  - size:159, name: loadModule
Inlining parseAccept into mediaTypes
Candidates for inlining (size=3):
  #226:JSCall, frequency: 1
  - size:285, name: parseMediaType
  #181:JSCall, frequency: 1
  - size:125, name: splitMediaTypes
  #16:JSCall, frequency: 1
  - size:159, name: loadModule
Inlining parseMediaType into mediaTypes
Candidates for inlining (size=2):
  #181:JSCall, frequency: 1
  - size:125, name: splitMediaTypes
  #16:JSCall, frequency: 1
  - size:159, name: loadModule
Inlining splitMediaTypes into mediaTypes
Candidates for inlining (size=1):
  #16:JSCall, frequency: 1
  - size:159, name: loadModule
Inlining loadModule into mediaTypes
[optimizing 0x376bbb4b30b1 <JSFunction isQuality (sfi = 0x376bd587c389)> - took 0.049, 0.175, 0.005 ms]
[completed optimizing 0x376bbb4b30b1 <JSFunction isQuality (sfi = 0x376bd587c389)>]
[optimizing 0x376be7de3511 <JSFunction mediaTypes (sfi = 0x376be7de2679)> - took 1.115, 3.038, 0.027 ms]
[completed optimizing 0x376be7de3511 <JSFunction mediaTypes (sfi = 0x376be7de2679)>]
[marking 0x376b58f63629 <JSFunction ReadableState (sfi = 0x376b2a965079)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 39/48 (81%), generic ICs: 2/48 (4%)]
[compiling method 0x376b58f63629 <JSFunction ReadableState (sfi = 0x376b2a965079)> using TurboFan]
Inlining small function(s) at call site #189:JSConstruct
Inlining BufferList into ReadableState
[marking 0x376bea9db609 <JSFunction _unrefTimer (sfi = 0x376bea9c64d1)> for optimized recompilation, reason: small function, ICs with typeinfo: 3/4 (75%), generic ICs: 0/4 (0%)]
[optimizing 0x376b58f63629 <JSFunction ReadableState (sfi = 0x376b2a965079)> - took 0.422, 1.811, 0.060 ms]
[completed optimizing 0x376b58f63629 <JSFunction ReadableState (sfi = 0x376b2a965079)>]
[compiling method 0x376bea9db609 <JSFunction _unrefTimer (sfi = 0x376bea9c64d1)> using TurboFan]
Inlining small function(s) at call site #49:JSCall
Inlining exports._unrefActive into _unrefTimer
Candidates for inlining (size=1):
  #75:JSCall, frequency: 1
  - size:281, name: insert
Inlining insert into _unrefTimer
Inlining small function(s) at call site #405:JSCall
Inlining isEmpty into _unrefTimer
Candidates for inlining (size=2):
  #413:JSCall, frequency: 1
  - size:33, name: ok
  #377:JSCall, frequency: 1
  - size:55, name: append
Inlining ok into _unrefTimer
Candidates for inlining (size=1):
  #377:JSCall, frequency: 1
  - size:55, name: append
Inlining append into _unrefTimer
Candidates for inlining (size=1):
  #613:JSCall, frequency: 0.999654
  - size:53, name: remove
Inlining remove into _unrefTimer
[optimizing 0x376bea9db609 <JSFunction _unrefTimer (sfi = 0x376bea9c64d1)> - took 0.953, 4.152, 0.066 ms]
[completed optimizing 0x376bea9db609 <JSFunction _unrefTimer (sfi = 0x376bea9c64d1)>]
[marking 0x376b2a921c11 <JSFunction hrtime (sfi = 0x376b2a921801)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 24/32 (75%), generic ICs: 0/32 (0%)]
[compiling method 0x376b2a921c11 <JSFunction hrtime (sfi = 0x376b2a921801)> using TurboFan]
[optimizing 0x376b2a921c11 <JSFunction hrtime (sfi = 0x376b2a921801)> - took 0.273, 1.145, 0.016 ms]
[completed optimizing 0x376b2a921c11 <JSFunction hrtime (sfi = 0x376b2a921801)>]
[marking 0x376b9e789a21 <JSFunction once (sfi = 0x376be7dce951)> for optimized recompilation, reason: small function, ICs with typeinfo: 1/1 (100%), generic ICs: 0/1 (0%)]
[compiling method 0x376b9e789a21 <JSFunction once (sfi = 0x376be7dce951)> using TurboFan]
[optimizing 0x376b9e789a21 <JSFunction once (sfi = 0x376be7dce951)> - took 0.085, 0.551, 0.011 ms]
[completed optimizing 0x376b9e789a21 <JSFunction once (sfi = 0x376be7dce951)>]
[marking 0x376b7fb84451 <JSFunction Object (sfi = 0x376b90f09cf9)> for optimized recompilation, reason: small function, ICs with typeinfo: 1/4 (25%), generic ICs: 1/4 (25%)]
[compiling method 0x376b7fb84451 <JSFunction Object (sfi = 0x376b90f09cf9)> using TurboFan]
[optimizing 0x376b7fb84451 <JSFunction Object (sfi = 0x376b90f09cf9)> - took 0.069, 0.424, 0.008 ms]
[completed optimizing 0x376b7fb84451 <JSFunction Object (sfi = 0x376b90f09cf9)>]
[marking 0x376be7de34c9 <JSFunction mediaType (sfi = 0x376be7de25d1)> for optimized recompilation, reason: small function, ICs with typeinfo: 3/3 (100%), generic ICs: 0/3 (0%)]
[compiling method 0x376be7de34c9 <JSFunction mediaType (sfi = 0x376be7de25d1)> using TurboFan]
Candidates for inlining (size=1):
  #19:JSCall, frequency: 1
  - size:48, name: mediaTypes
Inlining mediaTypes into mediaType
Candidates for inlining (size=2):
  #90:JSCall, frequency: 1
  - size:184, name: preferredMediaTypes
  #64:JSCall, frequency: 1
  - size:159, name: loadModule
Inlining preferredMediaTypes into mediaType
Candidates for inlining (size=2):
  #137:JSCall, frequency: 1
  - size:94, name: parseAccept
  #64:JSCall, frequency: 1
  - size:159, name: loadModule
Inlining parseAccept into mediaType
Candidates for inlining (size=3):
  #274:JSCall, frequency: 1
  - size:285, name: parseMediaType
  #229:JSCall, frequency: 1
  - size:125, name: splitMediaTypes
  #64:JSCall, frequency: 1
  - size:159, name: loadModule
Inlining parseMediaType into mediaType
Candidates for inlining (size=2):
  #229:JSCall, frequency: 1
  - size:125, name: splitMediaTypes
  #64:JSCall, frequency: 1
  - size:159, name: loadModule
Inlining splitMediaTypes into mediaType
Candidates for inlining (size=1):
  #64:JSCall, frequency: 1
  - size:159, name: loadModule
Inlining loadModule into mediaType
[marking 0x376b9eaf5039 <JSFunction parserOnHeadersComplete (sfi = 0x376bbd132a59)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 33/46 (71%), generic ICs: 1/46 (2%)]
[compiling method 0x376b9eaf5039 <JSFunction parserOnHeadersComplete (sfi = 0x376bbd132a59)> using TurboFan]
Candidates for inlining (size=2):
  #179:JSCall, frequency: 1
  - size:100, name: _addHeaderLines
  #55:JSConstruct, frequency: 1
  - size:138, name: IncomingMessage
Inlining _addHeaderLines into parserOnHeadersComplete
Candidates for inlining (size=2):
  #425:JSCall, frequency: 1.0004
  - size:185, name: _addHeaderLine
  #55:JSConstruct, frequency: 1
  - size:138, name: IncomingMessage
Inlining _addHeaderLine into parserOnHeadersComplete
Candidates for inlining (size=1):
  #55:JSConstruct, frequency: 1
  - size:138, name: IncomingMessage
Inlining IncomingMessage into parserOnHeadersComplete
Candidates for inlining (size=1):
  #610:JSCall, frequency: 1
  - size:100, name: Readable
Inlining Readable into parserOnHeadersComplete
Inlining small function(s) at call site #924:JSCall
Inlining Stream into parserOnHeadersComplete
Inlining small function(s) at call site #980:JSCall
Inlining EventEmitter into parserOnHeadersComplete
Candidates for inlining (size=2):
  #1009:JSCall, frequency: 1
  - size:151, name: EventEmitter.init
  #869:JSConstruct, frequency: 1
  - size:331, name: ReadableState
Inlining EventEmitter.init into parserOnHeadersComplete
Not considering call site #1050:JSCall, because inlining depth 6 exceeds maximum allowed level 5
Candidates for inlining (size=1):
  #869:JSConstruct, frequency: 1
  - size:331, name: ReadableState
[optimizing 0x376be7de34c9 <JSFunction mediaType (sfi = 0x376be7de25d1)> - took 1.251, 2.795, 0.038 ms]
[completed optimizing 0x376be7de34c9 <JSFunction mediaType (sfi = 0x376be7de25d1)>]
[marking 0x376b7fb872a9 <JSFunction InnerArraySort (sfi = 0x376b90f0c921)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 3/9 (33%), generic ICs: 1/9 (11%)]
[compiling method 0x376b7fb872a9 <JSFunction InnerArraySort (sfi = 0x376b90f0c921)> using TurboFan]
[optimizing 0x376b7fb872a9 <JSFunction InnerArraySort (sfi = 0x376b90f0c921)> - took 0.125, 0.888, 0.013 ms]
[completed optimizing 0x376b7fb872a9 <JSFunction InnerArraySort (sfi = 0x376b90f0c921)>]
[optimizing 0x376b9eaf5039 <JSFunction parserOnHeadersComplete (sfi = 0x376bbd132a59)> - took 1.541, 4.947, 0.214 ms]
[completed optimizing 0x376b9eaf5039 <JSFunction parserOnHeadersComplete (sfi = 0x376bbd132a59)>]
[marking 0x376bb2c96229 <JSFunction send (sfi = 0x376bb2c947e1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 10/10 (100%), generic ICs: 0/10 (0%)]
[marking 0x376be7d848c9 <JSFunction endReadableNT (sfi = 0x376b2a965f91)> for optimized recompilation, reason: small function, ICs with typeinfo: 7/7 (100%), generic ICs: 0/7 (0%)]
[compiling method 0x376bb2c96229 <JSFunction send (sfi = 0x376bb2c947e1)> using TurboFan]
[compiling method 0x376be7d848c9 <JSFunction endReadableNT (sfi = 0x376b2a965f91)> using TurboFan]
Candidates for inlining (size=1):
  #51:JSCall, frequency: 0.25
  - size:350, name: emit
Inlining emit into endReadableNT
[optimizing 0x376bb2c96229 <JSFunction send (sfi = 0x376bb2c947e1)> - took 0.122, 0.659, 0.014 ms]
[completed optimizing 0x376bb2c96229 <JSFunction send (sfi = 0x376bb2c947e1)>]
[optimizing 0x376be7d848c9 <JSFunction endReadableNT (sfi = 0x376b2a965f91)> - took 0.340, 1.559, 0.019 ms]
[completed optimizing 0x376be7d848c9 <JSFunction endReadableNT (sfi = 0x376b2a965f91)>]
[marking 0x376be7d84761 <JSFunction flow (sfi = 0x376b2a965ba1)> for optimized recompilation, reason: small function, ICs with typeinfo: 6/7 (85%), generic ICs: 3/7 (42%)]
[compiling method 0x376be7d84761 <JSFunction flow (sfi = 0x376b2a965ba1)> using TurboFan]
Inlining small function(s) at call site #36:JSCall
Inlining debugs.(anonymous function) into flow
[optimizing 0x376be7d84761 <JSFunction flow (sfi = 0x376b2a965ba1)> - took 0.111, 0.768, 0.010 ms]
[completed optimizing 0x376be7d84761 <JSFunction flow (sfi = 0x376b2a965ba1)>]
[marking 0x376bb2c96d11 <JSFunction _run (sfi = 0x376be7df2421)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 21/33 (63%), generic ICs: 1/33 (3%)]
[compiling method 0x376bb2c96d11 <JSFunction _run (sfi = 0x376be7df2421)> using TurboFan]
Inlining small function(s) at call site #41:JSCall
Inlining nextId into _run
Inlining small function(s) at call site #132:JSCall
Inlining addListener into _run
Candidates for inlining (size=5):
  #302:JSCall, frequency: 1
  - size:445, name: _addListener
  #139:JSCall, frequency: 1
  - size:150, name: wrapper
  #119:JSCall, frequency: 1
  - size:80, name: once
  #106:JSCall, frequency: 1
  - size:80, name: once
  #91:JSCall, frequency: 1
  - size:150, name: wrapper
Inlining _addListener into _run
Inlining small function(s) at call site #500:JSCall
Inlining $getMaxListeners into _run
Inlining small function(s) at call site #588:JSCall
Inlining get into _run
Candidates for inlining (size=4):
  #139:JSCall, frequency: 1
  - size:150, name: wrapper
  #119:JSCall, frequency: 1
  - size:80, name: once
  #106:JSCall, frequency: 1
  - size:80, name: once
  #91:JSCall, frequency: 1
  - size:150, name: wrapper
Inlining wrapper into _run
Candidates for inlining (size=3):
  #119:JSCall, frequency: 1
  - size:80, name: once
  #106:JSCall, frequency: 1
  - size:80, name: once
  #91:JSCall, frequency: 1
  - size:150, name: wrapper
Inlining once into _run
Candidates for inlining (size=4):
  #798:JSCall, frequency: 1
  - size:163, name: Readable.on
  #792:JSCall, frequency: 1
  - size:62, name: _onceWrap
  #106:JSCall, frequency: 1
  - size:80, name: once
  #91:JSCall, frequency: 1
  - size:150, name: wrapper
Inlining Readable.on into _run
Inlining small function(s) at call site #847:JSCall
Inlining addListener into _run
Candidates for inlining (size=4):
  #912:JSCall, frequency: 1
  - size:445, name: _addListener
  #792:JSCall, frequency: 1
  - size:62, name: _onceWrap
  #106:JSCall, frequency: 1
  - size:80, name: once
  #91:JSCall, frequency: 1
  - size:150, name: wrapper
[optimizing 0x376bb2c96d11 <JSFunction _run (sfi = 0x376be7df2421)> - took 1.757, 5.679, 0.088 ms]
[completed optimizing 0x376bb2c96d11 <JSFunction _run (sfi = 0x376be7df2421)>]
[marking 0x376b2a969f39 <JSFunction Readable.resume (sfi = 0x376b2a966819)> for optimized recompilation, reason: small function, ICs with typeinfo: 5/5 (100%), generic ICs: 0/5 (0%)]
[compiling method 0x376b2a969f39 <JSFunction Readable.resume (sfi = 0x376b2a966819)> using TurboFan]
Inlining small function(s) at call site #39:JSCall
Inlining debugs.(anonymous function) into Readable.resume
Candidates for inlining (size=1):
  #50:JSCall, frequency: 0.531407
  - size:40, name: resume
Inlining resume into Readable.resume
Candidates for inlining (size=1):
  #126:JSCall, frequency: 0.531407
  - size:357, name: nextTick
Inlining nextTick into Readable.resume
Candidates for inlining (size=3):
  #415:JSCall, frequency: 0.531407
  - size:49, name: push
  #409:JSConstruct, frequency: 0.531407
  - size:89, name: TickObject
  #404:JSCall, frequency: 0.531407
  - size:40, name: getDefaultTriggerAsyncId
Inlining push into Readable.resume
Candidates for inlining (size=2):
  #409:JSConstruct, frequency: 0.531407
  - size:89, name: TickObject
  #404:JSCall, frequency: 0.531407
  - size:40, name: getDefaultTriggerAsyncId
Inlining TickObject into Readable.resume
Candidates for inlining (size=1):
  #404:JSCall, frequency: 0.531407
  - size:40, name: getDefaultTriggerAsyncId
Inlining getDefaultTriggerAsyncId into Readable.resume
[optimizing 0x376b2a969f39 <JSFunction Readable.resume (sfi = 0x376b2a966819)> - took 1.175, 2.581, 0.031 ms]
[completed optimizing 0x376b2a969f39 <JSFunction Readable.resume (sfi = 0x376b2a966819)>]
[marking 0x376bea9db699 <JSFunction Socket.setTimeout (sfi = 0x376bea9c6621)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 7/11 (63%), generic ICs: 0/11 (0%)]
[compiling method 0x376bea9db699 <JSFunction Socket.setTimeout (sfi = 0x376bea9c6621)> using TurboFan]
Inlining small function(s) at call site #86:JSCall
Inlining exports._unrefActive into Socket.setTimeout
Candidates for inlining (size=3):
  #116:JSCall, frequency: 0.666716
  - size:281, name: insert
  #68:JSCall, frequency: 0.666716
  - size:220, name: exports.enroll
  #41:JSCall, frequency: 0.333284
  - size:111, name: exports.unenroll
Inlining insert into Socket.setTimeout
Inlining small function(s) at call site #442:JSCall
Inlining isEmpty into Socket.setTimeout
Candidates for inlining (size=4):
  #450:JSCall, frequency: 0.666716
  - size:33, name: ok
  #414:JSCall, frequency: 0.666716
  - size:55, name: append
  #68:JSCall, frequency: 0.666716
  - size:220, name: exports.enroll
  #41:JSCall, frequency: 0.333284
  - size:111, name: exports.unenroll
Inlining ok into Socket.setTimeout
Candidates for inlining (size=3):
  #414:JSCall, frequency: 0.666716
  - size:55, name: append
  #68:JSCall, frequency: 0.666716
  - size:220, name: exports.enroll
  #41:JSCall, frequency: 0.333284
  - size:111, name: exports.unenroll
Inlining append into Socket.setTimeout
Candidates for inlining (size=3):
  #68:JSCall, frequency: 0.666716
  - size:220, name: exports.enroll
  #650:JSCall, frequency: 0.666485
  - size:53, name: remove
  #41:JSCall, frequency: 0.333284
  - size:111, name: exports.unenroll
Inlining exports.enroll into Socket.setTimeout
Inlining small function(s) at call site #884:JSCall
Inlining init into Socket.setTimeout
Candidates for inlining (size=3):
  #650:JSCall, frequency: 0.666485
  - size:53, name: remove
  #41:JSCall, frequency: 0.333284
  - size:111, name: exports.unenroll
  #839:JSCall, frequency: 0.288886
  - size:111, name: exports.unenroll
Inlining remove into Socket.setTimeout
Candidates for inlining (size=2):
  #41:JSCall, frequency: 0.333284
  - size:111, name: exports.unenroll
  #839:JSCall, frequency: 0.288886
  - size:111, name: exports.unenroll
Inlining exports.unenroll into Socket.setTimeout
Candidates for inlining (size=2):
  #1266:JSCall, frequency: 0.333284
  - size:103, name: reuse
  #839:JSCall, frequency: 0.288886
  - size:111, name: exports.unenroll
Inlining reuse into Socket.setTimeout
Candidates for inlining (size=2):
  #1329:JSCall, frequency: 0.333284
  - size:53, name: remove
  #839:JSCall, frequency: 0.288886
  - size:111, name: exports.unenroll
Inlining remove into Socket.setTimeout
Candidates for inlining (size=1):
  #839:JSCall, frequency: 0.288886
  - size:111, name: exports.unenroll
[optimizing 0x376bea9db699 <JSFunction Socket.setTimeout (sfi = 0x376bea9c6621)> - took 2.230, 6.463, 0.081 ms]
[completed optimizing 0x376bea9db699 <JSFunction Socket.setTimeout (sfi = 0x376bea9c6621)>]
[marking 0x376bb2c93469 <JSFunction endHandlerTimer (sfi = 0x376bb2c91961)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 21/25 (84%), generic ICs: 3/25 (12%)]
[compiling method 0x376bb2c93469 <JSFunction endHandlerTimer (sfi = 0x376bb2c91961)> using TurboFan]
Candidates for inlining (size=1):
  #89:JSCall, frequency: 1
  - size:330, name: hrtime
Inlining hrtime into endHandlerTimer
[optimizing 0x376bb2c93469 <JSFunction endHandlerTimer (sfi = 0x376bb2c91961)> - took 0.521, 2.644, 0.022 ms]
[completed optimizing 0x376bb2c93469 <JSFunction endHandlerTimer (sfi = 0x376bb2c91961)>]
[marking 0x376bcc739409 <JSFunction resOnFinish (sfi = 0x376bbd13f3b9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 29/41 (70%), generic ICs: 0/41 (0%)]
[compiling method 0x376bcc739409 <JSFunction resOnFinish (sfi = 0x376bbd13f3b9)> using TurboFan]
Candidates for inlining (size=5):
  #188:JSCall, frequency: 1
  - size:104, name: Socket.setTimeout
  #174:JSCall, frequency: 1
  - size:104, name: Socket.setTimeout
  #120:JSCall, frequency: 1
  - size:63, name: detachSocket
  #111:JSCall, frequency: 1
  - size:42, name: _dump
  #65:JSCall, frequency: 1
  - size:33, name: ok
Inlining Socket.setTimeout into resOnFinish
Inlining small function(s) at call site #346:JSCall
Inlining exports._unrefActive into resOnFinish
Candidates for inlining (size=7):
  #174:JSCall, frequency: 1
  - size:104, name: Socket.setTimeout
  #120:JSCall, frequency: 1
  - size:63, name: detachSocket
  #111:JSCall, frequency: 1
  - size:42, name: _dump
  #65:JSCall, frequency: 1
  - size:33, name: ok
  #379:JSCall, frequency: 0.666618
  - size:281, name: insert
  #328:JSCall, frequency: 0.666618
  - size:220, name: exports.enroll
  #301:JSCall, frequency: 0.333382
  - size:111, name: exports.unenroll
Inlining Socket.setTimeout into resOnFinish
Inlining small function(s) at call site #464:JSCall
Inlining exports._unrefActive into resOnFinish
Candidates for inlining (size=9):
  #120:JSCall, frequency: 1
  - size:63, name: detachSocket
  #111:JSCall, frequency: 1
  - size:42, name: _dump
  #65:JSCall, frequency: 1
  - size:33, name: ok
  #492:JSCall, frequency: 0.666618
  - size:281, name: insert
  #446:JSCall, frequency: 0.666618
  - size:220, name: exports.enroll
  #379:JSCall, frequency: 0.666618
  - size:281, name: insert
  #328:JSCall, frequency: 0.666618
  - size:220, name: exports.enroll
  #419:JSCall, frequency: 0.333382
  - size:111, name: exports.unenroll
  #301:JSCall, frequency: 0.333382
  - size:111, name: exports.unenroll
Inlining detachSocket into resOnFinish
Candidates for inlining (size=10):
  #537:JSCall, frequency: 1
  - size:382, name: removeListener
  #526:JSCall, frequency: 1
  - size:33, name: ok
  #111:JSCall, frequency: 1
  - size:42, name: _dump
  #65:JSCall, frequency: 1
  - size:33, name: ok
  #492:JSCall, frequency: 0.666618
  - size:281, name: insert
  #446:JSCall, frequency: 0.666618
  - size:220, name: exports.enroll
  #379:JSCall, frequency: 0.666618
  - size:281, name: insert
  #328:JSCall, frequency: 0.666618
  - size:220, name: exports.enroll
  #419:JSCall, frequency: 0.333382
  - size:111, name: exports.unenroll
  #301:JSCall, frequency: 0.333382
  - size:111, name: exports.unenroll
Inlining removeListener into resOnFinish
Candidates for inlining (size=10):
  #526:JSCall, frequency: 1
  - size:33, name: ok
  #111:JSCall, frequency: 1
  - size:42, name: _dump
  #65:JSCall, frequency: 1
  - size:33, name: ok
  #492:JSCall, frequency: 0.666618
  - size:281, name: insert
  #446:JSCall, frequency: 0.666618
  - size:220, name: exports.enroll
  #379:JSCall, frequency: 0.666618
  - size:281, name: insert
  #328:JSCall, frequency: 0.666618
  - size:220, name: exports.enroll
  #419:JSCall, frequency: 0.333382
  - size:111, name: exports.unenroll
  #301:JSCall, frequency: 0.333382
  - size:111, name: exports.unenroll
  #796:JSCall, frequency: 0.327226
  - size:63, name: spliceOne
Inlining ok into resOnFinish
Candidates for inlining (size=9):
  #111:JSCall, frequency: 1
  - size:42, name: _dump
  #65:JSCall, frequency: 1
  - size:33, name: ok
  #492:JSCall, frequency: 0.666618
  - size:281, name: insert
  #446:JSCall, frequency: 0.666618
  - size:220, name: exports.enroll
  #379:JSCall, frequency: 0.666618
  - size:281, name: insert
  #328:JSCall, frequency: 0.666618
  - size:220, name: exports.enroll
  #419:JSCall, frequency: 0.333382
  - size:111, name: exports.unenroll
  #301:JSCall, frequency: 0.333382
  - size:111, name: exports.unenroll
  #796:JSCall, frequency: 0.327226
  - size:63, name: spliceOne
Inlining _dump into resOnFinish
Candidates for inlining (size=10):
  #965:JSCall, frequency: 1
  - size:44, name: Readable.resume
  #956:JSCall, frequency: 1
  - size:324, name: removeAllListeners
  #65:JSCall, frequency: 1
  - size:33, name: ok
  #492:JSCall, frequency: 0.666618
  - size:281, name: insert
  #446:JSCall, frequency: 0.666618
  - size:220, name: exports.enroll
  #379:JSCall, frequency: 0.666618
  - size:281, name: insert
  #328:JSCall, frequency: 0.666618
  - size:220, name: exports.enroll
  #419:JSCall, frequency: 0.333382
  - size:111, name: exports.unenroll
  #301:JSCall, frequency: 0.333382
  - size:111, name: exports.unenroll
  #796:JSCall, frequency: 0.327226
  - size:63, name: spliceOne
Inlining Readable.resume into resOnFinish
Inlining small function(s) at call site #1019:JSCall
Inlining debugs.(anonymous function) into resOnFinish
Candidates for inlining (size=10):
  #956:JSCall, frequency: 1
  - size:324, name: removeAllListeners
  #65:JSCall, frequency: 1
  - size:33, name: ok
  #492:JSCall, frequency: 0.666618
  - size:281, name: insert
  #446:JSCall, frequency: 0.666618
  - size:220, name: exports.enroll
  #379:JSCall, frequency: 0.666618
  - size:281, name: insert
  #328:JSCall, frequency: 0.666618
  - size:220, name: exports.enroll
  #1029:JSCall, frequency: 0.531237
  - size:40, name: resume
  #419:JSCall, frequency: 0.333382
  - size:111, name: exports.unenroll
  #301:JSCall, frequency: 0.333382
  - size:111, name: exports.unenroll
  #796:JSCall, frequency: 0.327226
  - size:63, name: spliceOne
Inlining ok into resOnFinish
Candidates for inlining (size=8):
  #492:JSCall, frequency: 0.666618
  - size:281, name: insert
  #446:JSCall, frequency: 0.666618
  - size:220, name: exports.enroll
  #379:JSCall, frequency: 0.666618
  - size:281, name: insert
  #328:JSCall, frequency: 0.666618
  - size:220, name: exports.enroll
  #1029:JSCall, frequency: 0.531237
  - size:40, name: resume
  #419:JSCall, frequency: 0.333382
  - size:111, name: exports.unenroll
  #301:JSCall, frequency: 0.333382
  - size:111, name: exports.unenroll
  #796:JSCall, frequency: 0.327226
  - size:63, name: spliceOne
Inlining resume into resOnFinish
Candidates for inlining (size=4):
  #1120:JSCall, frequency: 0.531237
  - size:357, name: nextTick
  #419:JSCall, frequency: 0.333382
  - size:111, name: exports.unenroll
  #301:JSCall, frequency: 0.333382
  - size:111, name: exports.unenroll
  #796:JSCall, frequency: 0.327226
  - size:63, name: spliceOne
Inlining spliceOne into resOnFinish
[marking 0x376b9eaf5b19 <JSFunction writeHead (sfi = 0x376bbd13ea89)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 28/49 (57%), generic ICs: 2/49 (4%)]
[compiling method 0x376b9eaf5b19 <JSFunction writeHead (sfi = 0x376bbd13ea89)> using TurboFan]
Candidates for inlining (size=1):
  #192:JSCall, frequency: 1
  - size:221, name: checkInvalidHeaderChar
Inlining checkInvalidHeaderChar into writeHead
[optimizing 0x376bcc739409 <JSFunction resOnFinish (sfi = 0x376bbd13f3b9)> - took 4.289, 4.121, 0.057 ms]
[completed optimizing 0x376bcc739409 <JSFunction resOnFinish (sfi = 0x376bbd13f3b9)>]
[optimizing 0x376b9eaf5b19 <JSFunction writeHead (sfi = 0x376bbd13ea89)> - took 0.557, 2.937, 0.050 ms]
[completed optimizing 0x376b9eaf5b19 <JSFunction writeHead (sfi = 0x376bbd13ea89)>]
[marking 0x376bbd13c331 <JSFunction end (sfi = 0x376bbd138b31)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 20/51 (39%), generic ICs: 0/51 (0%)]
[marking 0x376bea9dbdc1 <JSFunction Socket._writeGeneric (sfi = 0x376bea9c7341)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 21/63 (33%), generic ICs: 1/63 (1%)]
[compiling method 0x376bbd13c331 <JSFunction end (sfi = 0x376bbd138b31)> using TurboFan]
Inlining small function(s) at call site #178:JSCall
Inlining debugs.(anonymous function) into end
Candidates for inlining (size=2):
  #225:JSCall, frequency: 1
  - size:50, name: _finish
  #150:JSCall, frequency: 1
  - size:233, name: _send
Inlining _finish into end
Candidates for inlining (size=2):
  #347:JSCall, frequency: 1
  - size:37, name: _finish
  #150:JSCall, frequency: 1
  - size:233, name: _send
Inlining _finish into end
Candidates for inlining (size=3):
  #404:JSCall, frequency: 1
  - size:350, name: emit
  #394:JSCall, frequency: 1
  - size:33, name: ok
  #150:JSCall, frequency: 1
  - size:233, name: _send
Inlining emit into end
Candidates for inlining (size=2):
  #394:JSCall, frequency: 1
  - size:33, name: ok
  #150:JSCall, frequency: 1
  - size:233, name: _send
Inlining ok into end
Candidates for inlining (size=1):
  #150:JSCall, frequency: 1
  - size:233, name: _send
Inlining _send into end
Candidates for inlining (size=1):
  #704:JSCall, frequency: 1
  - size:239, name: _writeRaw
Inlining _writeRaw into end
Candidates for inlining (size=4):
  #873:JSCall, frequency: 0.5001
  - size:218, name: Writable.write
  #862:JSCall, frequency: 0.4999
  - size:364, name: internalNextTick
  #905:JSCall, frequency: unknown
  - size:38, name: get
  #893:JSCall, frequency: unknown
  - size:38, name: get
Inlining get into end
Candidates for inlining (size=1):
  #893:JSCall, frequency: unknown
  - size:38, name: get
[compiling method 0x376bea9dbdc1 <JSFunction Socket._writeGeneric (sfi = 0x376bea9c7341)> using TurboFan]
Candidates for inlining (size=2):
  #144:JSCall, frequency: 1
  - size:177, name: createWriteReq
  #50:JSCall, frequency: 1
  - size:42, name: _unrefTimer
Inlining createWriteReq into Socket._writeGeneric
Candidates for inlining (size=1):
  #50:JSCall, frequency: 1
  - size:42, name: _unrefTimer
Inlining _unrefTimer into Socket._writeGeneric
Inlining small function(s) at call site #420:JSCall
Inlining exports._unrefActive into Socket._writeGeneric
Candidates for inlining (size=1):
  #445:JSCall, frequency: 1
  - size:281, name: insert
Inlining insert into Socket._writeGeneric
Inlining small function(s) at call site #774:JSCall
Inlining isEmpty into Socket._writeGeneric
Candidates for inlining (size=2):
  #782:JSCall, frequency: 1
  - size:33, name: ok
  #746:JSCall, frequency: 1
  - size:55, name: append
Inlining ok into Socket._writeGeneric
Candidates for inlining (size=1):
  #746:JSCall, frequency: 1
  - size:55, name: append
Inlining append into Socket._writeGeneric
Candidates for inlining (size=1):
  #981:JSCall, frequency: 0.999654
  - size:53, name: remove
Inlining remove into Socket._writeGeneric
[marking 0x376be7d84ce9 <JSFunction etag (sfi = 0x376bea9fda59)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 25/30 (83%), generic ICs: 1/30 (3%)]
[compiling method 0x376be7d84ce9 <JSFunction etag (sfi = 0x376bea9fda59)> using TurboFan]
Inlining small function(s) at call site #114:JSCall
Inlining createHash into etag (inside try-block)
Inlinee contains 2 calls without local exception handler; linking to surrounding exception handler
Candidates for inlining (size=3):
  #424:JSConstruct, frequency: 1
  - size:129, name: Hash
  #191:JSCall, frequency: 0.652723
  - size:157, name: digest
  #136:JSCall, frequency: 0.652723
  - size:163, name: update
Inlining Hash into etag (inside try-block)
Inlinee contains 14 calls without local exception handler; linking to surrounding exception handler
Inlining small function(s) at call site #601:JSCall
Inlining LazyTransform into etag (inside try-block)
Inlinee contains 3 calls without local exception handler; linking to surrounding exception handler
Candidates for inlining (size=2):
  #191:JSCall, frequency: 0.652723
  - size:157, name: digest
  #136:JSCall, frequency: 0.652723
  - size:163, name: update
Inlining digest into etag (inside try-block)
Inlinee contains 17 calls without local exception handler; linking to surrounding exception handler
Candidates for inlining (size=2):
  #850:JSCall, frequency: 0.652723
  - size:143, name: normalizeEncoding
  #136:JSCall, frequency: 0.652723
  - size:163, name: update
Inlining normalizeEncoding into etag (inside try-block)
Inlinee contains 2 calls without local exception handler; linking to surrounding exception handler
Candidates for inlining (size=1):
  #136:JSCall, frequency: 0.652723
  - size:163, name: update
Inlining update into etag (inside try-block)
Inlinee contains 11 calls without local exception handler; linking to surrounding exception handler
[optimizing 0x376bbd13c331 <JSFunction end (sfi = 0x376bbd138b31)> - took 1.886, 9.709, 0.052 ms]
[completed optimizing 0x376bbd13c331 <JSFunction end (sfi = 0x376bbd138b31)>]
[optimizing 0x376bea9dbdc1 <JSFunction Socket._writeGeneric (sfi = 0x376bea9c7341)> - took 1.529, 8.283, 0.090 ms]
[completed optimizing 0x376bea9dbdc1 <JSFunction Socket._writeGeneric (sfi = 0x376bea9c7341)>]
[marking 0x376bcc739451 <JSFunction parserOnIncoming (sfi = 0x376bbd13f461)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 29/63 (46%), generic ICs: 0/63 (0%)]
[compiling method 0x376bcc739451 <JSFunction parserOnIncoming (sfi = 0x376bbd13f461)> using TurboFan]
Inlining small function(s) at call site #218:JSCall
Inlining get into parserOnIncoming
Inlining small function(s) at call site #157:JSCall
Inlining addListener into parserOnIncoming
Candidates for inlining (size=5):
  #296:JSCall, frequency: 1
  - size:445, name: _addListener
  #184:JSCall, frequency: 1
  - size:350, name: emit
  #134:JSCall, frequency: 1
  - size:87, name: assignSocket
  #84:JSConstruct, frequency: 1
  - size:117, name: ServerResponse
  #19:JSCall, frequency: 1
  - size:39, name: resetSocketTimeout
Inlining _addListener into parserOnIncoming
Inlining small function(s) at call site #480:JSCall
Inlining $getMaxListeners into parserOnIncoming
Inlining small function(s) at call site #564:JSCall
Inlining get into parserOnIncoming
Candidates for inlining (size=4):
  #184:JSCall, frequency: 1
  - size:350, name: emit
  #134:JSCall, frequency: 1
  - size:87, name: assignSocket
  #84:JSConstruct, frequency: 1
  - size:117, name: ServerResponse
  #19:JSCall, frequency: 1
  - size:39, name: resetSocketTimeout
Inlining emit into parserOnIncoming
Candidates for inlining (size=3):
  #134:JSCall, frequency: 1
  - size:87, name: assignSocket
  #84:JSConstruct, frequency: 1
  - size:117, name: ServerResponse
  #19:JSCall, frequency: 1
  - size:39, name: resetSocketTimeout
Inlining assignSocket into parserOnIncoming
Candidates for inlining (size=6):
  #836:JSCall, frequency: 1
  - size:70, name: _flush
  #827:JSCall, frequency: 1
  - size:350, name: emit
  #809:JSCall, frequency: 1
  - size:114, name: socketOnWrap
  #794:JSCall, frequency: 1
  - size:33, name: ok
  #84:JSConstruct, frequency: 1
  - size:117, name: ServerResponse
  #19:JSCall, frequency: 1
  - size:39, name: resetSocketTimeout
Inlining ok into parserOnIncoming
Candidates for inlining (size=2):
  #84:JSConstruct, frequency: 1
  - size:117, name: ServerResponse
  #19:JSCall, frequency: 1
  - size:39, name: resetSocketTimeout
[optimizing 0x376be7d84ce9 <JSFunction etag (sfi = 0x376bea9fda59)> - took 3.052, 4.811, 0.135 ms]
[completed optimizing 0x376be7d84ce9 <JSFunction etag (sfi = 0x376bea9fda59)>]
[optimizing 0x376bcc739451 <JSFunction parserOnIncoming (sfi = 0x376bbd13f461)> - took 2.107, 6.028, 0.096 ms]
[completed optimizing 0x376bcc739451 <JSFunction parserOnIncoming (sfi = 0x376bbd13f461)>]
[marking 0x376bcc739d81 <JSFunction write_ (sfi = 0x376bbd137c19)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 21/49 (42%), generic ICs: 3/49 (6%)]
[compiling method 0x376bcc739d81 <JSFunction write_ (sfi = 0x376bbd137c19)> using TurboFan]
Inlining small function(s) at call site #175:JSCall
Inlining Writable.cork into write_
Inlining small function(s) at call site #267:JSCall
Inlining debugs.(anonymous function) into write_
Candidates for inlining (size=2):
  #246:JSCall, frequency: 1
  - size:233, name: _send
  #208:JSCall, frequency: 1
  - size:357, name: nextTick
Inlining _send into write_
Candidates for inlining (size=2):
  #454:JSCall, frequency: 1
  - size:239, name: _writeRaw
  #208:JSCall, frequency: 1
  - size:357, name: nextTick
Inlining _writeRaw into write_
Candidates for inlining (size=5):
  #208:JSCall, frequency: 1
  - size:357, name: nextTick
  #624:JSCall, frequency: 0.505368
  - size:218, name: Writable.write
  #613:JSCall, frequency: 0.494632
  - size:364, name: internalNextTick
  #656:JSCall, frequency: unknown
  - size:38, name: get
  #644:JSCall, frequency: unknown
  - size:38, name: get
Inlining nextTick into write_
Candidates for inlining (size=7):
  #944:JSCall, frequency: 1
  - size:49, name: push
  #938:JSConstruct, frequency: 1
  - size:89, name: TickObject
  #933:JSCall, frequency: 1
  - size:40, name: getDefaultTriggerAsyncId
  #624:JSCall, frequency: 0.505368
  - size:218, name: Writable.write
  #613:JSCall, frequency: 0.494632
  - size:364, name: internalNextTick
  #656:JSCall, frequency: unknown
  - size:38, name: get
  #644:JSCall, frequency: unknown
  - size:38, name: get
Inlining push into write_
Candidates for inlining (size=6):
  #938:JSConstruct, frequency: 1
  - size:89, name: TickObject
  #933:JSCall, frequency: 1
  - size:40, name: getDefaultTriggerAsyncId
  #624:JSCall, frequency: 0.505368
  - size:218, name: Writable.write
  #613:JSCall, frequency: 0.494632
  - size:364, name: internalNextTick
  #656:JSCall, frequency: unknown
  - size:38, name: get
  #644:JSCall, frequency: unknown
  - size:38, name: get
Inlining getDefaultTriggerAsyncId into write_
Candidates for inlining (size=4):
  #624:JSCall, frequency: 0.505368
  - size:218, name: Writable.write
  #613:JSCall, frequency: 0.494632
  - size:364, name: internalNextTick
  #656:JSCall, frequency: unknown
  - size:38, name: get
  #644:JSCall, frequency: unknown
  - size:38, name: get
Inlining get into write_
Candidates for inlining (size=1):
  #644:JSCall, frequency: unknown
  - size:38, name: get
[optimizing 0x376bcc739d81 <JSFunction write_ (sfi = 0x376bbd137c19)> - took 2.543, 5.373, 0.033 ms]
[completed optimizing 0x376bcc739d81 <JSFunction write_ (sfi = 0x376bbd137c19)>]
[marking 0x376be7d83c29 <JSFunction nop (sfi = 0x376b2a96adb1)> for optimized recompilation, reason: small function, ICs with typeinfo: 0/0 (100%), generic ICs: 0/0 (0%)]
[compiling method 0x376be7d83c29 <JSFunction nop (sfi = 0x376b2a96adb1)> using TurboFan]
[optimizing 0x376be7d83c29 <JSFunction nop (sfi = 0x376b2a96adb1)> - took 0.036, 0.125, 0.009 ms]
[completed optimizing 0x376be7d83c29 <JSFunction nop (sfi = 0x376b2a96adb1)>]
[marking 0x376b28a1e471 <JSFunction (sfi = 0x376bd5870309)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 11/11 (100%), generic ICs: 1/11 (9%)]
[marking 0x376bcc7392e1 <JSFunction onParserExecute (sfi = 0x376bbd13f1c1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 5/5 (100%), generic ICs: 0/5 (0%)]
[compiling method 0x376b28a253e9 <JSFunction (sfi = 0x376bd5870309)> using TurboFan]
Candidates for inlining (size=2):
  #95:JSCall, frequency: 1
  - size:380, name: _run
  #28:JSCall, frequency: 1
  - size:350, name: emit
Inlining _run into 
Inlining small function(s) at call site #202:JSCall
Inlining nextId into 
Inlining small function(s) at call site #292:JSCall
Inlining addListener into 
Candidates for inlining (size=6):
  #460:JSCall, frequency: 1
  - size:445, name: _addListener
  #299:JSCall, frequency: 1
  - size:150, name: wrapper
  #279:JSCall, frequency: 1
  - size:80, name: once
  #266:JSCall, frequency: 1
  - size:80, name: once
  #251:JSCall, frequency: 1
  - size:150, name: wrapper
  #28:JSCall, frequency: 1
  - size:350, name: emit
Inlining _addListener into 
Inlining small function(s) at call site #658:JSCall
Inlining $getMaxListeners into 
Inlining small function(s) at call site #745:JSCall
Inlining get into 
Candidates for inlining (size=5):
  #299:JSCall, frequency: 1
  - size:150, name: wrapper
  #279:JSCall, frequency: 1
  - size:80, name: once
  #266:JSCall, frequency: 1
  - size:80, name: once
  #251:JSCall, frequency: 1
  - size:150, name: wrapper
  #28:JSCall, frequency: 1
  - size:350, name: emit
Inlining once into 
Candidates for inlining (size=5):
  #790:JSCall, frequency: 1
  - size:163, name: Readable.on
  #784:JSCall, frequency: 1
  - size:62, name: _onceWrap
  #266:JSCall, frequency: 1
  - size:80, name: once
  #251:JSCall, frequency: 1
  - size:150, name: wrapper
  #28:JSCall, frequency: 1
  - size:350, name: emit
[compiling method 0x376bcc7392e1 <JSFunction onParserExecute (sfi = 0x376bbd13f1c1)> using TurboFan]
Inlining small function(s) at call site #39:JSCall
Inlining debugs.(anonymous function) into onParserExecute
Candidates for inlining (size=2):
  #45:JSCall, frequency: 1
  - size:458, name: onParserExecuteCommon
  #23:JSCall, frequency: 1
  - size:42, name: _unrefTimer
Inlining onParserExecuteCommon into onParserExecute
Candidates for inlining (size=2):
  #86:JSCall, frequency: 1
  - size:39, name: resetSocketTimeout
  #23:JSCall, frequency: 1
  - size:42, name: _unrefTimer
Inlining resetSocketTimeout into onParserExecute
Candidates for inlining (size=2):
  #23:JSCall, frequency: 1
  - size:42, name: _unrefTimer
  #219:JSCall, frequency: 0.444175
  - size:104, name: Socket.setTimeout
Inlining _unrefTimer into onParserExecute
Inlining small function(s) at call site #284:JSCall
Inlining exports._unrefActive into onParserExecute
Candidates for inlining (size=2):
  #309:JSCall, frequency: 1
  - size:281, name: insert
  #219:JSCall, frequency: 0.444175
  - size:104, name: Socket.setTimeout
Inlining insert into onParserExecute
Inlining small function(s) at call site #637:JSCall
Inlining isEmpty into onParserExecute
Candidates for inlining (size=3):
  #645:JSCall, frequency: 1
  - size:33, name: ok
  #609:JSCall, frequency: 1
  - size:55, name: append
  #219:JSCall, frequency: 0.444175
  - size:104, name: Socket.setTimeout
Inlining ok into onParserExecute
Candidates for inlining (size=2):
  #609:JSCall, frequency: 1
  - size:55, name: append
  #219:JSCall, frequency: 0.444175
  - size:104, name: Socket.setTimeout
Inlining append into onParserExecute
Candidates for inlining (size=2):
  #845:JSCall, frequency: 0.999654
  - size:53, name: remove
  #219:JSCall, frequency: 0.444175
  - size:104, name: Socket.setTimeout
[optimizing 0x376b28a253e9 <JSFunction (sfi = 0x376bd5870309)> - took 1.556, 5.403, 0.069 ms]
[completed optimizing 0x376b28a253e9 <JSFunction (sfi = 0x376bd5870309)>]
[marking 0x376be7ddab81 <JSFunction LRUCache.get (sfi = 0x376be7dd56f1)> for optimized recompilation, reason: small function, ICs with typeinfo: 1/1 (100%), generic ICs: 0/1 (0%)]
[optimizing 0x376bcc7392e1 <JSFunction onParserExecute (sfi = 0x376bbd13f1c1)> - took 1.523, 4.032, 0.046 ms]
[completed optimizing 0x376bcc7392e1 <JSFunction onParserExecute (sfi = 0x376bbd13f1c1)>]
[compiling method 0x376be7ddab81 <JSFunction LRUCache.get (sfi = 0x376be7dd56f1)> using TurboFan]
Candidates for inlining (size=1):
  #16:JSCall, frequency: 1
  - size:96, name: get
Inlining get into LRUCache.get
Candidates for inlining (size=2):
  #95:JSCall, frequency: 0.99889
  - size:91, name: Yallist.unshiftNode
  #64:JSCall, frequency: 0.99889
  - size:86, name: isStale
Inlining Yallist.unshiftNode into LRUCache.get
Candidates for inlining (size=2):
  #64:JSCall, frequency: 0.99889
  - size:86, name: isStale
  #182:JSCall, frequency: 0.570847
  - size:126, name: Yallist.removeNode
Inlining isStale into LRUCache.get
Candidates for inlining (size=1):
  #182:JSCall, frequency: 0.570847
  - size:126, name: Yallist.removeNode
Inlining Yallist.removeNode into LRUCache.get
[optimizing 0x376be7ddab81 <JSFunction LRUCache.get (sfi = 0x376be7dd56f1)> - took 0.738, 1.418, 0.020 ms]
[completed optimizing 0x376be7ddab81 <JSFunction LRUCache.get (sfi = 0x376be7dd56f1)>]
[marking 0x376b9eaef3c1 <JSFunction OutgoingMessage (sfi = 0x376bbd137781)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 27/27 (100%), generic ICs: 2/27 (7%)]
[compiling method 0x376b9eaef3c1 <JSFunction OutgoingMessage (sfi = 0x376bbd137781)> using TurboFan]
Inlining small function(s) at call site #31:JSCall
Inlining Stream into OutgoingMessage
Inlining small function(s) at call site #195:JSCall
Inlining EventEmitter into OutgoingMessage
Candidates for inlining (size=1):
  #224:JSCall, frequency: 1
  - size:151, name: EventEmitter.init
Inlining EventEmitter.init into OutgoingMessage
[optimizing 0x376b9eaef3c1 <JSFunction OutgoingMessage (sfi = 0x376bbd137781)> - took 0.610, 2.402, 0.111 ms]
[completed optimizing 0x376b9eaef3c1 <JSFunction OutgoingMessage (sfi = 0x376bbd137781)>]
[marking dependent code 0x173e4758b221 (opt #1) for deoptimization, reason: allocation-site-tenuring-changed]
[deoptimize marked code in all contexts]
[deoptimizer unlinked: Module._nodeModulePaths / 376bea9b8df1]
[marking 0x376bb2c96d59 <JSFunction _setupRequest (sfi = 0x376be7df24c9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 30/30 (100%), generic ICs: 1/30 (3%)]
[compiling method 0x376bb2c96d59 <JSFunction _setupRequest (sfi = 0x376be7df24c9)> using TurboFan]
Candidates for inlining (size=1):
  #110:JSCall, frequency: 1
  - size:249, name: header
Inlining header into _setupRequest
Candidates for inlining (size=3):
  #517:JSCall, frequency: 1
  - size:170, name: setHeader
  #475:JSCall, frequency: 1
  - size:87, name: getHeader
  #421:JSCall, frequency: 1
  - size:61, name: out.(anonymous function)
Inlining setHeader into _setupRequest
Candidates for inlining (size=3):
  #557:JSCall, frequency: 1
  - size:180, name: validateHeader
  #475:JSCall, frequency: 1
  - size:87, name: getHeader
  #421:JSCall, frequency: 1
  - size:61, name: out.(anonymous function)
Inlining validateHeader into _setupRequest
Inlining small function(s) at call site #748:JSCall
Inlining checkIsHttpToken into _setupRequest
Candidates for inlining (size=3):
  #819:JSCall, frequency: 1
  - size:221, name: checkInvalidHeaderChar
  #475:JSCall, frequency: 1
  - size:87, name: getHeader
  #421:JSCall, frequency: 1
  - size:61, name: out.(anonymous function)
Inlining checkInvalidHeaderChar into _setupRequest
Candidates for inlining (size=2):
  #475:JSCall, frequency: 1
  - size:87, name: getHeader
  #421:JSCall, frequency: 1
  - size:61, name: out.(anonymous function)
Inlining getHeader into _setupRequest
Candidates for inlining (size=1):
  #421:JSCall, frequency: 1
  - size:61, name: out.(anonymous function)
Inlining out.(anonymous function) into _setupRequest
[optimizing 0x376bb2c96d59 <JSFunction _setupRequest (sfi = 0x376be7df24c9)> - took 1.637, 6.065, 0.110 ms]
[completed optimizing 0x376bb2c96d59 <JSFunction _setupRequest (sfi = 0x376be7df24c9)>]
[marking 0x376bb2c96c81 <JSFunction _handle (sfi = 0x376be7df22d1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 9/12 (75%), generic ICs: 1/12 (8%)]
[compiling method 0x376bb2c96c81 <JSFunction _handle (sfi = 0x376be7df22d1)> using TurboFan]
Candidates for inlining (size=1):
  #45:JSCall, frequency: 1
  - size:350, name: emit
Inlining emit into _handle
[optimizing 0x376bb2c96c81 <JSFunction _handle (sfi = 0x376be7df22d1)> - took 0.373, 1.685, 0.021 ms]
[completed optimizing 0x376bb2c96c81 <JSFunction _handle (sfi = 0x376be7df22d1)>]
[marking 0x376be7defeb1 <JSFunction find (sfi = 0x376be7de07a1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 63/137 (45%), generic ICs: 5/137 (3%)]
[compiling method 0x376be7defeb1 <JSFunction find (sfi = 0x376be7de07a1)> using TurboFan]
Inlining small function(s) at call site #123:JSCall
Inlining LRUCache.get into find
Candidates for inlining (size=3):
  #595:JSCall, frequency: 1
  - size:96, name: get
  #69:JSCall, frequency: 1
  - size:53, name: getVersion
  #176:JSCall, frequency: 0.999023
  - size:61, name: shallowCopy
Inlining get into find
Candidates for inlining (size=4):
  #69:JSCall, frequency: 1
  - size:53, name: getVersion
  #176:JSCall, frequency: 0.999023
  - size:61, name: shallowCopy
  #864:JSCall, frequency: 0.998893
  - size:91, name: Yallist.unshiftNode
  #833:JSCall, frequency: 0.998893
  - size:86, name: isStale
Inlining getVersion into find
Candidates for inlining (size=3):
  #176:JSCall, frequency: 0.999023
  - size:61, name: shallowCopy
  #864:JSCall, frequency: 0.998893
  - size:91, name: Yallist.unshiftNode
  #833:JSCall, frequency: 0.998893
  - size:86, name: isStale
Inlining shallowCopy into find
Candidates for inlining (size=2):
  #864:JSCall, frequency: 0.998893
  - size:91, name: Yallist.unshiftNode
  #833:JSCall, frequency: 0.998893
  - size:86, name: isStale
Inlining Yallist.unshiftNode into find
Candidates for inlining (size=2):
  #833:JSCall, frequency: 0.998893
  - size:86, name: isStale
  #1111:JSCall, frequency: 0.572114
  - size:126, name: Yallist.removeNode
Inlining isStale into find
Candidates for inlining (size=1):
  #1111:JSCall, frequency: 0.572114
  - size:126, name: Yallist.removeNode
Inlining Yallist.removeNode into find
[marking 0x376bb2c930c1 <JSFunction getVersion (sfi = 0x376bb2c910d9)> for optimized recompilation, reason: small function, ICs with typeinfo: 9/10 (90%), generic ICs: 0/10 (0%)]
[compiling method 0x376bb2c930c1 <JSFunction getVersion (sfi = 0x376bb2c910d9)> using TurboFan]
[marking 0x376ba7e0aa41 <JSFunction f (sfi = 0x376be7dcf8b9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 5/6 (83%), generic ICs: 0/6 (0%)]
[compiling method 0x376ba7e11a21 <JSFunction f (sfi = 0x376be7dcf8b9)> using TurboFan]
[optimizing 0x376bb2c930c1 <JSFunction getVersion (sfi = 0x376bb2c910d9)> - took 0.098, 0.461, 0.008 ms]
[completed optimizing 0x376bb2c930c1 <JSFunction getVersion (sfi = 0x376bb2c910d9)>]
[optimizing 0x376ba7e11a21 <JSFunction f (sfi = 0x376be7dcf8b9)> - took 0.079, 0.559, 0.010 ms]
[completed optimizing 0x376ba7e11a21 <JSFunction f (sfi = 0x376be7dcf8b9)>]
[marking 0x376b2a96dc11 <JSFunction Writable.write (sfi = 0x376b2a96be19)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 12/21 (57%), generic ICs: 0/21 (0%)]
[compiling method 0x376b2a96dc11 <JSFunction Writable.write (sfi = 0x376b2a96be19)> using TurboFan]
Inlining small function(s) at call site #49:JSCall
Inlining isUint8Array into Writable.write
Candidates for inlining (size=3):
  #188:JSCall, frequency: 1
  - size:34, name: args
  #149:JSCall, frequency: 1
  - size:218, name: writeOrBuffer
  #126:JSCall, frequency: 1
  - size:128, name: validChunk
Inlining args into Writable.write
Candidates for inlining (size=2):
  #149:JSCall, frequency: 1
  - size:218, name: writeOrBuffer
  #126:JSCall, frequency: 1
  - size:128, name: validChunk
Inlining writeOrBuffer into Writable.write
Candidates for inlining (size=2):
  #275:JSCall, frequency: 1
  - size:48, name: decodeChunk
  #126:JSCall, frequency: 1
  - size:128, name: validChunk
Inlining decodeChunk into Writable.write
Candidates for inlining (size=1):
  #126:JSCall, frequency: 1
  - size:128, name: validChunk
Inlining validChunk into Writable.write
[optimizing 0x376be7defeb1 <JSFunction find (sfi = 0x376be7de07a1)> - took 1.895, 6.150, 0.110 ms]
[completed optimizing 0x376be7defeb1 <JSFunction find (sfi = 0x376be7de07a1)>]
[optimizing 0x376b2a96dc11 <JSFunction Writable.write (sfi = 0x376b2a96be19)> - took 0.895, 2.158, 0.054 ms]
[completed optimizing 0x376b2a96dc11 <JSFunction Writable.write (sfi = 0x376b2a96be19)>]
[marking 0x376b9eaf50c9 <JSFunction parserOnMessageComplete (sfi = 0x376bbd132ba9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 13/13 (100%), generic ICs: 0/13 (0%)]
[compiling method 0x376b9eaf50c9 <JSFunction parserOnMessageComplete (sfi = 0x376bbd132ba9)> using TurboFan]
Inlining small function(s) at call site #97:JSCall
Inlining readStart into parserOnMessageComplete
Candidates for inlining (size=3):
  #180:JSCall, frequency: 1
  - size:44, name: Readable.resume
  #75:JSCall, frequency: 1
  - size:95, name: Readable.push
  #54:JSCall, frequency: 1
  - size:100, name: _addHeaderLines
Inlining Readable.resume into parserOnMessageComplete
Inlining small function(s) at call site #231:JSCall
Inlining debugs.(anonymous function) into parserOnMessageComplete
Candidates for inlining (size=3):
  #75:JSCall, frequency: 1
  - size:95, name: Readable.push
  #54:JSCall, frequency: 1
  - size:100, name: _addHeaderLines
  #241:JSCall, frequency: 0.531237
  - size:40, name: resume
Inlining Readable.push into parserOnMessageComplete
Candidates for inlining (size=3):
  #318:JSCall, frequency: 1
  - size:402, name: readableAddChunk
  #54:JSCall, frequency: 1
  - size:100, name: _addHeaderLines
  #241:JSCall, frequency: 0.531237
  - size:40, name: resume
Inlining readableAddChunk into parserOnMessageComplete
Candidates for inlining (size=4):
  #394:JSCall, frequency: 1
  - size:40, name: needMoreData
  #365:JSCall, frequency: 1
  - size:103, name: onEofChunk
  #54:JSCall, frequency: 1
  - size:100, name: _addHeaderLines
  #241:JSCall, frequency: 0.531237
  - size:40, name: resume
Inlining needMoreData into parserOnMessageComplete
Candidates for inlining (size=3):
  #365:JSCall, frequency: 1
  - size:103, name: onEofChunk
  #54:JSCall, frequency: 1
  - size:100, name: _addHeaderLines
  #241:JSCall, frequency: 0.531237
  - size:40, name: resume
Inlining onEofChunk into parserOnMessageComplete
Candidates for inlining (size=3):
  #477:JSCall, frequency: 1
  - size:83, name: emitReadable
  #54:JSCall, frequency: 1
  - size:100, name: _addHeaderLines
  #241:JSCall, frequency: 0.531237
  - size:40, name: resume
Inlining emitReadable into parserOnMessageComplete
Inlining small function(s) at call site #536:JSCall
Inlining debugs.(anonymous function) into parserOnMessageComplete
Candidates for inlining (size=3):
  #564:JSCall, frequency: 1
  - size:357, name: nextTick
  #54:JSCall, frequency: 1
  - size:100, name: _addHeaderLines
  #241:JSCall, frequency: 0.531237
  - size:40, name: resume
Inlining _addHeaderLines into parserOnMessageComplete
Candidates for inlining (size=2):
  #687:JSCall, frequency: 1.0004
  - size:185, name: _addHeaderLine
  #241:JSCall, frequency: 0.531237
  - size:40, name: resume
Inlining resume into parserOnMessageComplete
Candidates for inlining (size=1):
  #765:JSCall, frequency: 0.531237
  - size:357, name: nextTick
[optimizing 0x376b9eaf50c9 <JSFunction parserOnMessageComplete (sfi = 0x376bbd132ba9)> - took 1.871, 2.360, 0.019 ms]
[completed optimizing 0x376b9eaf50c9 <JSFunction parserOnMessageComplete (sfi = 0x376bbd132ba9)>]
[marking 0x376bea9a9ea1 <JSFunction _onceWrap (sfi = 0x376b7fbbb1c9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 9/9 (100%), generic ICs: 0/9 (0%)]
[compiling method 0x376bea9a9ea1 <JSFunction _onceWrap (sfi = 0x376b7fbbb1c9)> using TurboFan]
[optimizing 0x376bea9a9ea1 <JSFunction _onceWrap (sfi = 0x376b7fbbb1c9)> - took 0.122, 0.637, 0.012 ms]
[completed optimizing 0x376bea9a9ea1 <JSFunction _onceWrap (sfi = 0x376b7fbbb1c9)>]
[marking 0x376bea9a31a1 <JSFunction internalNextTick (sfi = 0x376b2a9199c1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 17/41 (41%), generic ICs: 0/41 (0%)]
[compiling method 0x376bea9a31a1 <JSFunction internalNextTick (sfi = 0x376b2a9199c1)> using TurboFan]
Candidates for inlining (size=2):
  #228:JSCall, frequency: 1
  - size:49, name: push
  #222:JSConstruct, frequency: 1
  - size:89, name: TickObject
Inlining push into internalNextTick
Candidates for inlining (size=1):
  #222:JSConstruct, frequency: 1
  - size:89, name: TickObject
Inlining TickObject into internalNextTick
[marking 0x376bb2c96de9 <JSFunction _finishReqResCycle (sfi = 0x376be7df2619)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 10/17 (58%), generic ICs: 2/17 (11%)]
[compiling method 0x376bb2c96de9 <JSFunction _finishReqResCycle (sfi = 0x376be7df2619)> using TurboFan]
Candidates for inlining (size=1):
  #96:JSCall, frequency: 1
  - size:350, name: emit
Inlining emit into _finishReqResCycle
[optimizing 0x376bea9a31a1 <JSFunction internalNextTick (sfi = 0x376b2a9199c1)> - took 0.594, 1.584, 0.022 ms]
[completed optimizing 0x376bea9a31a1 <JSFunction internalNextTick (sfi = 0x376b2a9199c1)>]
[marking 0x376b7fb86231 <JSFunction sort (sfi = 0x376b90f0c9b9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 2/4 (50%), generic ICs: 0/4 (0%)]
[compiling method 0x376b7fb86231 <JSFunction sort (sfi = 0x376b90f0c9b9)> using TurboFan]
[optimizing 0x376b7fb86231 <JSFunction sort (sfi = 0x376b90f0c9b9)> - took 0.080, 0.515, 0.012 ms]
[completed optimizing 0x376b7fb86231 <JSFunction sort (sfi = 0x376b90f0c9b9)>]
[optimizing 0x376bb2c96de9 <JSFunction _finishReqResCycle (sfi = 0x376be7df2619)> - took 0.383, 1.901, 0.015 ms]
[completed optimizing 0x376bb2c96de9 <JSFunction _finishReqResCycle (sfi = 0x376be7df2619)>]
[marking 0x376b28a343b9 <JSFunction done (sfi = 0x376bd58747e1)> for optimized recompilation, reason: small function, ICs with typeinfo: 2/2 (100%), generic ICs: 0/2 (0%)]
[compiling method 0x376b28a3b0b1 <JSFunction done (sfi = 0x376bd58747e1)> using TurboFan]
Candidates for inlining (size=1):
  #24:JSCall, frequency: 1
  - size:212, name: _finishReqResCycle
Inlining _finishReqResCycle into done
Candidates for inlining (size=1):
  #124:JSCall, frequency: 1
  - size:350, name: emit
Inlining emit into done
[optimizing 0x376b28a3b0b1 <JSFunction done (sfi = 0x376bd58747e1)> - took 0.537, 2.354, 0.023 ms]
[completed optimizing 0x376b28a3b0b1 <JSFunction done (sfi = 0x376bd58747e1)>]
[marking 0x376bb2c93421 <JSFunction startHandlerTimer (sfi = 0x376bb2c918b9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 13/16 (81%), generic ICs: 1/16 (6%)]
[compiling method 0x376bb2c93421 <JSFunction startHandlerTimer (sfi = 0x376bb2c918b9)> using TurboFan]
Candidates for inlining (size=1):
  #78:JSCall, frequency: 1
  - size:330, name: hrtime
Inlining hrtime into startHandlerTimer
[optimizing 0x376bb2c93421 <JSFunction startHandlerTimer (sfi = 0x376bb2c918b9)> - took 0.466, 1.237, 0.048 ms]
[completed optimizing 0x376bb2c93421 <JSFunction startHandlerTimer (sfi = 0x376bb2c918b9)>]
[marking 0x376bb495c779 <JSFunction init (sfi = 0x376b2a927f11)> for optimized recompilation, reason: small function, ICs with typeinfo: 2/2 (100%), generic ICs: 0/2 (0%)]
[compiling method 0x376bb495c779 <JSFunction init (sfi = 0x376b2a927f11)> using TurboFan]
[optimizing 0x376bb495c779 <JSFunction init (sfi = 0x376b2a927f11)> - took 0.097, 0.520, 0.014 ms]
[completed optimizing 0x376bb495c779 <JSFunction init (sfi = 0x376b2a927f11)>]
[marking 0x376bcc739499 <JSFunction resetSocketTimeout (sfi = 0x376bbd13f509)> for optimized recompilation, reason: small function, ICs with typeinfo: 5/5 (100%), generic ICs: 0/5 (0%)]
[compiling method 0x376bcc739499 <JSFunction resetSocketTimeout (sfi = 0x376bbd13f509)> using TurboFan]
Candidates for inlining (size=1):
  #43:JSCall, frequency: 0.527012
  - size:104, name: Socket.setTimeout
Inlining Socket.setTimeout into resetSocketTimeout
Inlining small function(s) at call site #148:JSCall
Inlining exports._unrefActive into resetSocketTimeout
Candidates for inlining (size=3):
  #181:JSCall, frequency: 0.351316
  - size:281, name: insert
  #130:JSCall, frequency: 0.351316
  - size:220, name: exports.enroll
  #103:JSCall, frequency: 0.175696
  - size:111, name: exports.unenroll
Inlining insert into resetSocketTimeout
Inlining small function(s) at call site #507:JSCall
Inlining isEmpty into resetSocketTimeout
Candidates for inlining (size=4):
  #515:JSCall, frequency: 0.351316
  - size:33, name: ok
  #479:JSCall, frequency: 0.351316
  - size:55, name: append
  #130:JSCall, frequency: 0.351316
  - size:220, name: exports.enroll
  #103:JSCall, frequency: 0.175696
  - size:111, name: exports.unenroll
Inlining ok into resetSocketTimeout
Candidates for inlining (size=3):
  #479:JSCall, frequency: 0.351316
  - size:55, name: append
  #130:JSCall, frequency: 0.351316
  - size:220, name: exports.enroll
  #103:JSCall, frequency: 0.175696
  - size:111, name: exports.unenroll
Inlining append into resetSocketTimeout
Candidates for inlining (size=3):
  #130:JSCall, frequency: 0.351316
  - size:220, name: exports.enroll
  #683:JSCall, frequency: 0.351194
  - size:53, name: remove
  #103:JSCall, frequency: 0.175696
  - size:111, name: exports.unenroll
Inlining exports.enroll into resetSocketTimeout
Inlining small function(s) at call site #917:JSCall
Inlining init into resetSocketTimeout
Candidates for inlining (size=2):
  #683:JSCall, frequency: 0.351194
  - size:53, name: remove
  #103:JSCall, frequency: 0.175696
  - size:111, name: exports.unenroll
Inlining remove into resetSocketTimeout
Candidates for inlining (size=1):
  #103:JSCall, frequency: 0.175696
  - size:111, name: exports.unenroll
Inlining exports.unenroll into resetSocketTimeout
Candidates for inlining (size=1):
  #1284:JSCall, frequency: 0.175696
  - size:103, name: reuse
[marking 0x376bea9924f9 <JSFunction TickObject (sfi = 0x376b2a919a69)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 7/8 (87%), generic ICs: 2/8 (25%)]
[compiling method 0x376bea9924f9 <JSFunction TickObject (sfi = 0x376b2a919a69)> using TurboFan]
[optimizing 0x376bea9924f9 <JSFunction TickObject (sfi = 0x376b2a919a69)> - took 0.115, 0.576, 0.033 ms]
[completed optimizing 0x376bea9924f9 <JSFunction TickObject (sfi = 0x376b2a919a69)>]
[optimizing 0x376bcc739499 <JSFunction resetSocketTimeout (sfi = 0x376bbd13f509)> - took 1.861, 4.438, 0.088 ms]
[completed optimizing 0x376bcc739499 <JSFunction resetSocketTimeout (sfi = 0x376bbd13f509)>]
[marking 0x376be7d83eb1 <JSFunction afterWrite (sfi = 0x376b2a96b4e9)> for optimized recompilation, reason: small function, ICs with typeinfo: 6/6 (100%), generic ICs: 0/6 (0%)]
[compiling method 0x376be7d83eb1 <JSFunction afterWrite (sfi = 0x376b2a96b4e9)> using TurboFan]
Inlining small function(s) at call site #38:JSCall
Inlining nop into afterWrite
Candidates for inlining (size=2):
  #44:JSCall, frequency: 1
  - size:57, name: finishMaybe
  #23:JSCall, frequency: 1
  - size:41, name: onwriteDrain
Inlining finishMaybe into afterWrite
Candidates for inlining (size=2):
  #84:JSCall, frequency: 1
  - size:39, name: needFinish
  #23:JSCall, frequency: 1
  - size:41, name: onwriteDrain
Inlining needFinish into afterWrite
Candidates for inlining (size=1):
  #23:JSCall, frequency: 1
  - size:41, name: onwriteDrain
Inlining onwriteDrain into afterWrite
[optimizing 0x376be7d83eb1 <JSFunction afterWrite (sfi = 0x376b2a96b4e9)> - took 0.490, 0.641, 0.011 ms]
[completed optimizing 0x376be7d83eb1 <JSFunction afterWrite (sfi = 0x376b2a96b4e9)>]
[marking 0x376bbb482d89 <JSFunction onRequest (sfi = 0x376b3c6767c1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 7/10 (70%), generic ICs: 0/10 (0%)]
[compiling method 0x376bbb482d89 <JSFunction onRequest (sfi = 0x376b3c6767c1)> using TurboFan]
Candidates for inlining (size=3):
  #62:JSCall, frequency: 1
  - size:142, name: _handle
  #51:JSCall, frequency: 1
  - size:155, name: _setupRequest
  #23:JSCall, frequency: 1
  - size:350, name: emit
Inlining _handle into onRequest
Candidates for inlining (size=3):
  #114:JSCall, frequency: 1
  - size:350, name: emit
  #51:JSCall, frequency: 1
  - size:155, name: _setupRequest
  #23:JSCall, frequency: 1
  - size:350, name: emit
Inlining emit into onRequest
Candidates for inlining (size=2):
  #51:JSCall, frequency: 1
  - size:155, name: _setupRequest
  #23:JSCall, frequency: 1
  - size:350, name: emit
Inlining _setupRequest into onRequest
Candidates for inlining (size=2):
  #457:JSCall, frequency: 1
  - size:249, name: header
  #23:JSCall, frequency: 1
  - size:350, name: emit
Inlining header into onRequest
Candidates for inlining (size=4):
  #846:JSCall, frequency: 1
  - size:170, name: setHeader
  #804:JSCall, frequency: 1
  - size:87, name: getHeader
  #750:JSCall, frequency: 1
  - size:61, name: out.(anonymous function)
  #23:JSCall, frequency: 1
  - size:350, name: emit
Inlining getHeader into onRequest
Candidates for inlining (size=2):
  #750:JSCall, frequency: 1
  - size:61, name: out.(anonymous function)
  #23:JSCall, frequency: 1
  - size:350, name: emit
[marking 0x376bb2c92d61 <JSFunction accepts (sfi = 0x376bb2c908f9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 6/8 (75%), generic ICs: 0/8 (0%)]
[compiling method 0x376bb2c92d61 <JSFunction accepts (sfi = 0x376bb2c908f9)> using TurboFan]
Inlining small function(s) at call site #57:JSCall
Inlining mediaType into accepts
Candidates for inlining (size=2):
  #90:JSCall, frequency: 1
  - size:48, name: mediaTypes
  #43:JSCall, frequency: 1
  - size:76, name: negotiator
Inlining mediaTypes into accepts
Candidates for inlining (size=3):
  #159:JSCall, frequency: 1
  - size:184, name: preferredMediaTypes
  #133:JSCall, frequency: 1
  - size:159, name: loadModule
  #43:JSCall, frequency: 1
  - size:76, name: negotiator
Inlining preferredMediaTypes into accepts
Candidates for inlining (size=3):
  #206:JSCall, frequency: 1
  - size:94, name: parseAccept
  #133:JSCall, frequency: 1
  - size:159, name: loadModule
  #43:JSCall, frequency: 1
  - size:76, name: negotiator
Inlining parseAccept into accepts
Candidates for inlining (size=4):
  #340:JSCall, frequency: 1
  - size:285, name: parseMediaType
  #297:JSCall, frequency: 1
  - size:125, name: splitMediaTypes
  #133:JSCall, frequency: 1
  - size:159, name: loadModule
  #43:JSCall, frequency: 1
  - size:76, name: negotiator
Inlining parseMediaType into accepts
Candidates for inlining (size=3):
  #297:JSCall, frequency: 1
  - size:125, name: splitMediaTypes
  #133:JSCall, frequency: 1
  - size:159, name: loadModule
  #43:JSCall, frequency: 1
  - size:76, name: negotiator
Inlining splitMediaTypes into accepts
Candidates for inlining (size=2):
  #133:JSCall, frequency: 1
  - size:159, name: loadModule
  #43:JSCall, frequency: 1
  - size:76, name: negotiator
Inlining loadModule into accepts
Candidates for inlining (size=1):
  #43:JSCall, frequency: 1
  - size:76, name: negotiator
[optimizing 0x376bbb482d89 <JSFunction onRequest (sfi = 0x376b3c6767c1)> - took 1.608, 4.722, 0.077 ms]
[completed optimizing 0x376bbb482d89 <JSFunction onRequest (sfi = 0x376b3c6767c1)>]
[optimizing 0x376bb2c92d61 <JSFunction accepts (sfi = 0x376bb2c908f9)> - took 1.589, 3.867, 0.042 ms]
[completed optimizing 0x376bb2c92d61 <JSFunction accepts (sfi = 0x376bb2c908f9)>]
[marking 0x376be7d83f41 <JSFunction clearBuffer (sfi = 0x376b2a96b639)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 20/47 (42%), generic ICs: 0/47 (0%)]
[compiling method 0x376be7d83f41 <JSFunction clearBuffer (sfi = 0x376b2a96b639)> using TurboFan]
Candidates for inlining (size=1):
  #102:JSCall, frequency: 1
  - size:80, name: doWrite
Inlining doWrite into clearBuffer
Inlining small function(s) at call site #258:JSCall
Inlining Socket._write into clearBuffer
[optimizing 0x376be7d83f41 <JSFunction clearBuffer (sfi = 0x376b2a96b639)> - took 0.342, 2.569, 0.082 ms]
[completed optimizing 0x376be7d83f41 <JSFunction clearBuffer (sfi = 0x376b2a96b639)>]
[marking 0x376bea99f631 <JSFunction tickDone (sfi = 0x376b2a919679)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 9/14 (64%), generic ICs: 0/14 (0%)]
[compiling method 0x376bea99f631 <JSFunction tickDone (sfi = 0x376b2a919679)> using TurboFan]
Inlining small function(s) at call site #93:JSCall
Inlining clear into tickDone
[optimizing 0x376bea99f631 <JSFunction tickDone (sfi = 0x376b2a919679)> - took 0.162, 0.360, 0.009 ms]
[completed optimizing 0x376bea99f631 <JSFunction tickDone (sfi = 0x376b2a919679)>]
[marking 0x376b9eaef649 <JSFunction checkIsHttpToken (sfi = 0x376bbd132e49)> for optimized recompilation, reason: small function, ICs with typeinfo: 2/2 (100%), generic ICs: 0/2 (0%)]
[compiling method 0x376b9eaef649 <JSFunction checkIsHttpToken (sfi = 0x376bbd132e49)> using TurboFan]
[optimizing 0x376b9eaef649 <JSFunction checkIsHttpToken (sfi = 0x376bbd132e49)> - took 0.065, 0.216, 0.008 ms]
[completed optimizing 0x376b9eaef649 <JSFunction checkIsHttpToken (sfi = 0x376bbd132e49)>]
[marking 0x376bcc7395b9 <JSFunction socketOnWrap (sfi = 0x376bbd13f7a9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 8/14 (57%), generic ICs: 0/14 (0%)]
[compiling method 0x376bcc7395b9 <JSFunction socketOnWrap (sfi = 0x376bbd13f7a9)> using TurboFan]
Candidates for inlining (size=1):
  #48:JSCall, frequency: 1
  - size:163, name: Readable.on
Inlining Readable.on into socketOnWrap
Inlining small function(s) at call site #150:JSCall
Inlining addListener into socketOnWrap
Candidates for inlining (size=1):
  #213:JSCall, frequency: 1
  - size:445, name: _addListener
Inlining _addListener into socketOnWrap
Inlining small function(s) at call site #398:JSCall
Inlining $getMaxListeners into socketOnWrap
Inlining small function(s) at call site #482:JSCall
Inlining get into socketOnWrap
[optimizing 0x376bcc7395b9 <JSFunction socketOnWrap (sfi = 0x376bbd13f7a9)> - took 0.599, 1.936, 0.024 ms]
[completed optimizing 0x376bcc7395b9 <JSFunction socketOnWrap (sfi = 0x376bbd13f7a9)>]
[marking 0x376bcc739e11 <JSFunction connectionCorkNT (sfi = 0x376bbd137d69)> for optimized recompilation, reason: small function, ICs with typeinfo: 3/3 (100%), generic ICs: 1/3 (33%)]
[compiling method 0x376bcc739e11 <JSFunction connectionCorkNT (sfi = 0x376bbd137d69)> using TurboFan]
Candidates for inlining (size=1):
  #38:JSCall, frequency: 1
  - size:64, name: Writable.uncork
Inlining Writable.uncork into connectionCorkNT
Candidates for inlining (size=1):
  #126:JSCall, frequency: 1
  - size:353, name: clearBuffer
Inlining clearBuffer into connectionCorkNT
Candidates for inlining (size=1):
  #257:JSCall, frequency: 1
  - size:80, name: doWrite
Inlining doWrite into connectionCorkNT
Inlining small function(s) at call site #411:JSCall
Inlining Socket._write into connectionCorkNT
[optimizing 0x376bcc739e11 <JSFunction connectionCorkNT (sfi = 0x376bbd137d69)> - took 0.602, 2.343, 0.073 ms]
[completed optimizing 0x376bcc739e11 <JSFunction connectionCorkNT (sfi = 0x376bbd137d69)>]
[marking 0x376bbefa87a9 <JSFunction _flush (sfi = 0x376bd5879299)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 12/15 (80%), generic ICs: 0/15 (0%)]
[compiling method 0x376bbefaf651 <JSFunction _flush (sfi = 0x376bd5879299)> using TurboFan]
Inlining small function(s) at call site #62:JSCall
Inlining write into _flush
Candidates for inlining (size=4):
  #214:JSCall, frequency: 1
  - size:474, name: write_
  #85:JSCall, frequency: 1
  - size:290, name: 
  #74:JSCall, frequency: 1
  - size:428, name: end
  #33:JSCall, frequency: 1
  - size:132, name: restifyWriteHead
Inlining write_ into _flush
Inlining small function(s) at call site #400:JSCall
Inlining Writable.cork into _flush
Inlining small function(s) at call site #492:JSCall
Inlining debugs.(anonymous function) into _flush
Candidates for inlining (size=5):
  #471:JSCall, frequency: 1
  - size:233, name: _send
  #433:JSCall, frequency: 1
  - size:357, name: nextTick
  #85:JSCall, frequency: 1
  - size:290, name: 
  #74:JSCall, frequency: 1
  - size:428, name: end
  #33:JSCall, frequency: 1
  - size:132, name: restifyWriteHead
Inlining _send into _flush
Candidates for inlining (size=5):
  #678:JSCall, frequency: 1
  - size:239, name: _writeRaw
  #433:JSCall, frequency: 1
  - size:357, name: nextTick
  #85:JSCall, frequency: 1
  - size:290, name: 
  #74:JSCall, frequency: 1
  - size:428, name: end
  #33:JSCall, frequency: 1
  - size:132, name: restifyWriteHead
Inlining restifyWriteHead into _flush
Candidates for inlining (size=2):
  #760:JSCall, frequency: 1
  - size:422, name: writeHead
  #718:JSCall, frequency: 1
  - size:350, name: emit
[optimizing 0x376bbefaf651 <JSFunction _flush (sfi = 0x376bd5879299)> - took 1.321, 3.636, 0.059 ms]
[completed optimizing 0x376bbefaf651 <JSFunction _flush (sfi = 0x376bd5879299)>]
[marking 0x376be7d84719 <JSFunction resume_ (sfi = 0x376b2a965af9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 13/13 (100%), generic ICs: 0/13 (0%)]
[compiling method 0x376be7d84719 <JSFunction resume_ (sfi = 0x376b2a965af9)> using TurboFan]
Inlining small function(s) at call site #36:JSCall
Inlining debugs.(anonymous function) into resume_
Candidates for inlining (size=2):
  #72:JSCall, frequency: 1
  - size:52, name: flow
  #66:JSCall, frequency: 1
  - size:350, name: emit
Inlining flow into resume_
Inlining small function(s) at call site #174:JSCall
Inlining debugs.(anonymous function) into resume_
Candidates for inlining (size=1):
  #66:JSCall, frequency: 1
  - size:350, name: emit
Inlining emit into resume_
[optimizing 0x376be7d84719 <JSFunction resume_ (sfi = 0x376b2a965af9)> - took 0.574, 2.462, 0.029 ms]
[completed optimizing 0x376be7d84719 <JSFunction resume_ (sfi = 0x376b2a965af9)>]
[marking 0x376b2a93b109 <JSFunction exports.enroll (sfi = 0x376b2a9360c9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 10/22 (45%), generic ICs: 0/22 (0%)]
[compiling method 0x376b2a93b109 <JSFunction exports.enroll (sfi = 0x376b2a9360c9)> using TurboFan]
Inlining small function(s) at call site #136:JSCall
Inlining init into exports.enroll
Candidates for inlining (size=1):
  #90:JSCall, frequency: 0.298668
  - size:111, name: exports.unenroll
Inlining exports.unenroll into exports.enroll
Candidates for inlining (size=1):
  #353:JSCall, frequency: 0.298668
  - size:103, name: reuse
Inlining reuse into exports.enroll
Candidates for inlining (size=1):
  #425:JSCall, frequency: 0.298668
  - size:53, name: remove
Inlining remove into exports.enroll
[optimizing 0x376b2a93b109 <JSFunction exports.enroll (sfi = 0x376b2a9360c9)> - took 0.688, 2.499, 0.038 ms]
[completed optimizing 0x376b2a93b109 <JSFunction exports.enroll (sfi = 0x376b2a9360c9)>]
[marking 0x376bea9a6831 <JSFunction reuse (sfi = 0x376b2a935649)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 5/15 (33%), generic ICs: 1/15 (6%)]
[compiling method 0x376bea9a6831 <JSFunction reuse (sfi = 0x376b2a935649)> using TurboFan]
Candidates for inlining (size=1):
  #32:JSCall, frequency: 1
  - size:53, name: remove
Inlining remove into reuse
[optimizing 0x376bea9a6831 <JSFunction reuse (sfi = 0x376b2a935649)> - took 0.317, 1.345, 0.013 ms]
[completed optimizing 0x376bea9a6831 <JSFunction reuse (sfi = 0x376b2a935649)>]
[marking 0x376b24b76af9 <JSFunction routeAndRun (sfi = 0x376bd586fea1)> for optimized recompilation, reason: small function, ICs with typeinfo: 2/2 (100%), generic ICs: 0/2 (0%)]
[compiling method 0x376b24b7d961 <JSFunction routeAndRun (sfi = 0x376bd586fea1)> using TurboFan]
Candidates for inlining (size=1):
  #23:JSCall, frequency: 1
  - size:108, name: _route
Inlining _route into routeAndRun
[optimizing 0x376b24b7d961 <JSFunction routeAndRun (sfi = 0x376bd586fea1)> - took 0.206, 0.604, 0.017 ms]
[completed optimizing 0x376b24b7d961 <JSFunction routeAndRun (sfi = 0x376bd586fea1)>]
[marking 0x376b79408509 <JSFunction negotiator (sfi = 0x376bb2c907a9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 10/10 (100%), generic ICs: 0/10 (0%)]
[compiling method 0x376b79408509 <JSFunction negotiator (sfi = 0x376bb2c907a9)> using TurboFan]
Inlining small function(s) at call site #73:JSConstruct
Inlining Negotiator into negotiator
[optimizing 0x376b79408509 <JSFunction negotiator (sfi = 0x376bb2c907a9)> - took 0.198, 0.781, 0.030 ms]
[completed optimizing 0x376b79408509 <JSFunction negotiator (sfi = 0x376bb2c907a9)>]
[marking 0x376bea99ab01 <JSFunction byteLength (sfi = 0x376b7fbff661)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 19/69 (27%), generic ICs: 1/69 (1%)]
[compiling method 0x376bea99ab01 <JSFunction byteLength (sfi = 0x376b7fbff661)> using TurboFan]
[optimizing 0x376bea99ab01 <JSFunction byteLength (sfi = 0x376b7fbff661)> - took 0.263, 1.225, 0.012 ms]
[completed optimizing 0x376bea99ab01 <JSFunction byteLength (sfi = 0x376b7fbff661)>]
[marking 0x376b2a93b0b1 <JSFunction exports.unenroll (sfi = 0x376b2a936021)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 4/14 (28%), generic ICs: 0/14 (0%)]
[compiling method 0x376b2a93b0b1 <JSFunction exports.unenroll (sfi = 0x376b2a936021)> using TurboFan]
Candidates for inlining (size=1):
  #69:JSCall, frequency: 1
  - size:103, name: reuse
Inlining reuse into exports.unenroll
Candidates for inlining (size=1):
  #143:JSCall, frequency: 1
  - size:53, name: remove
Inlining remove into exports.unenroll
[optimizing 0x376b2a93b0b1 <JSFunction exports.unenroll (sfi = 0x376b2a936021)> - took 0.411, 1.539, 0.021 ms]
[completed optimizing 0x376b2a93b0b1 <JSFunction exports.unenroll (sfi = 0x376b2a936021)>]
[marking 0x376b1dee3df9 <JSFunction QuickSort (sfi = 0x376bbd1427f1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 56/57 (98%), generic ICs: 1/57 (1%)]
[compiling method 0x376b1dee5001 <JSFunction QuickSort (sfi = 0x376bbd1427f1)> using TurboFan]
[optimizing 0x376bfd61af11 <JSFunction QuickSort (sfi = 0x376bbd1427f1)> - took 0.349, 2.392, 0.126 ms]
[completed optimizing 0x376bfd61af11 <JSFunction QuickSort (sfi = 0x376bbd1427f1)>]
[marking 0x376b3e09f959 <JSFunction onRoute (sfi = 0x376bd5870651)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 4/14 (28%), generic ICs: 2/14 (14%)]
[compiling method 0x376b3e0a6709 <JSFunction onRoute (sfi = 0x376bd5870651)> using TurboFan]
[optimizing 0x376b3e0a6709 <JSFunction onRoute (sfi = 0x376bd5870651)> - took 0.105, 0.791, 0.007 ms]
[completed optimizing 0x376b3e0a6709 <JSFunction onRoute (sfi = 0x376bd5870651)>]
[marking 0x376bcc739ce9 <JSFunction validateHeader (sfi = 0x376bbd137b71)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 4/15 (26%), generic ICs: 0/15 (0%)]
[compiling method 0x376bcc739ce9 <JSFunction validateHeader (sfi = 0x376bbd137b71)> using TurboFan]
Inlining small function(s) at call site #40:JSCall
Inlining checkIsHttpToken into validateHeader
Candidates for inlining (size=1):
  #111:JSCall, frequency: 1
  - size:221, name: checkInvalidHeaderChar
Inlining checkInvalidHeaderChar into validateHeader
[optimizing 0x376bcc739ce9 <JSFunction validateHeader (sfi = 0x376bbd137b71)> - took 0.434, 1.986, 0.017 ms]
[completed optimizing 0x376bcc739ce9 <JSFunction validateHeader (sfi = 0x376bbd137b71)>]
[marking 0x376b9eaef451 <JSFunction ServerResponse (sfi = 0x376bbd13e939)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 11/18 (61%), generic ICs: 0/18 (0%)]
[compiling method 0x376b9eaef451 <JSFunction ServerResponse (sfi = 0x376bbd13e939)> using TurboFan]
Candidates for inlining (size=1):
  #32:JSCall, frequency: 1
  - size:162, name: OutgoingMessage
Inlining OutgoingMessage into ServerResponse
Inlining small function(s) at call site #210:JSCall
Inlining Stream into ServerResponse
Inlining small function(s) at call site #369:JSCall
Inlining EventEmitter into ServerResponse
Candidates for inlining (size=1):
  #398:JSCall, frequency: 1
  - size:151, name: EventEmitter.init
Inlining EventEmitter.init into ServerResponse
[optimizing 0x376b9eaef451 <JSFunction ServerResponse (sfi = 0x376bbd13e939)> - took 0.799, 4.104, 0.081 ms]
[completed optimizing 0x376b9eaef451 <JSFunction ServerResponse (sfi = 0x376bbd13e939)>]
[marking 0x376bbb482a21 <JSFunction getMediaTypePriority (sfi = 0x376bd587c041)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 12/15 (80%), generic ICs: 0/15 (0%)]
[compiling method 0x376bbb482a21 <JSFunction getMediaTypePriority (sfi = 0x376bd587c041)> using TurboFan]
Candidates for inlining (size=1):
  #52:JSCall, frequency: 1.00013
  - size:294, name: specify
Inlining specify into getMediaTypePriority
Candidates for inlining (size=1):
  #155:JSCall, frequency: 1.00013
  - size:285, name: parseMediaType
Inlining parseMediaType into getMediaTypePriority
[optimizing 0x376bbb482a21 <JSFunction getMediaTypePriority (sfi = 0x376bd587c041)> - took 0.627, 4.242, 0.028 ms]
[completed optimizing 0x376bbb482a21 <JSFunction getMediaTypePriority (sfi = 0x376bd587c041)>]
[marking 0x376bb494a489 <JSFunction _addListener (sfi = 0x376b7fbbb079)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 23/59 (38%), generic ICs: 6/59 (10%)]
[compiling method 0x376bb494a489 <JSFunction _addListener (sfi = 0x376b7fbbb079)> using TurboFan]
[optimizing 0x376bb494a489 <JSFunction _addListener (sfi = 0x376b7fbbb079)> - took 0.218, 1.575, 0.017 ms]
[completed optimizing 0x376bb494a489 <JSFunction _addListener (sfi = 0x376b7fbbb079)>]
[marking 0x376b94d72a01 <JSFunction next (sfi = 0x376bd5874e41)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 43/70 (61%), generic ICs: 4/70 (5%)]
[compiling method 0x376b94d798b9 <JSFunction next (sfi = 0x376bd5874e41)> using TurboFan]
Inlining small function(s) at call site #142:JSCall
Inlining _reqClosed into next
Candidates for inlining (size=7):
  #388:JSCall, frequency: 0.5
  - size:350, name: emit
  #373:JSCall, frequency: 0.5
  - size:382, name: removeListener
  #360:JSCall, frequency: 0.5
  - size:382, name: removeListener
  #276:JSCall, frequency: 0.5
  - size:150, name: wrapper
  #269:JSCall, frequency: 0.5
  - size:146, name: startHandlerTimer
  #179:JSCall, frequency: 0.5
  - size:290, name: 
  #113:JSCall, frequency: 0.5
  - size:216, name: endHandlerTimer
Inlining emit into next
Candidates for inlining (size=6):
  #373:JSCall, frequency: 0.5
  - size:382, name: removeListener
  #360:JSCall, frequency: 0.5
  - size:382, name: removeListener
  #276:JSCall, frequency: 0.5
  - size:150, name: wrapper
  #269:JSCall, frequency: 0.5
  - size:146, name: startHandlerTimer
  #179:JSCall, frequency: 0.5
  - size:290, name: 
  #113:JSCall, frequency: 0.5
  - size:216, name: endHandlerTimer
Inlining removeListener into next
Candidates for inlining (size=6):
  #360:JSCall, frequency: 0.5
  - size:382, name: removeListener
  #276:JSCall, frequency: 0.5
  - size:150, name: wrapper
  #269:JSCall, frequency: 0.5
  - size:146, name: startHandlerTimer
  #179:JSCall, frequency: 0.5
  - size:290, name: 
  #113:JSCall, frequency: 0.5
  - size:216, name: endHandlerTimer
  #1015:JSCall, frequency: 0.163613
  - size:63, name: spliceOne
Inlining wrapper into next
Candidates for inlining (size=4):
  #269:JSCall, frequency: 0.5
  - size:146, name: startHandlerTimer
  #179:JSCall, frequency: 0.5
  - size:290, name: 
  #113:JSCall, frequency: 0.5
  - size:216, name: endHandlerTimer
  #1015:JSCall, frequency: 0.163613
  - size:63, name: spliceOne
Inlining spliceOne into next
[marking 0x376b94d7c039 <JSFunction getPriority (sfi = 0x376bd587cb89)> for optimized recompilation, reason: small function, ICs with typeinfo: 1/1 (100%), generic ICs: 0/1 (0%)]
[compiling method 0x376b2e803e09 <JSFunction getPriority (sfi = 0x376bd587cb89)> using TurboFan]
Candidates for inlining (size=1):
  #17:JSCall, frequency: 1
  - size:116, name: getMediaTypePriority
Inlining getMediaTypePriority into getPriority
Candidates for inlining (size=1):
  #71:JSCall, frequency: 1.00012
  - size:294, name: specify
Inlining specify into getPriority
Candidates for inlining (size=1):
  #173:JSCall, frequency: 1.00012
  - size:285, name: parseMediaType
Inlining parseMediaType into getPriority
[optimizing 0x376b2e803e09 <JSFunction getPriority (sfi = 0x376bd587cb89)> - took 0.723, 5.263, 0.035 ms]
[completed optimizing 0x376b2e803e09 <JSFunction getPriority (sfi = 0x376bd587cb89)>]
[optimizing 0x376b94d798b9 <JSFunction next (sfi = 0x376bd5874e41)> - took 2.341, 8.841, 0.064 ms]
[completed optimizing 0x376b94d798b9 <JSFunction next (sfi = 0x376bd5874e41)>]
[marking 0x376bbd13c2a1 <JSFunction write (sfi = 0x376bbd1389e1)> for optimized recompilation, reason: small function, ICs with typeinfo: 1/1 (100%), generic ICs: 0/1 (0%)]
[compiling method 0x376bbd13c2a1 <JSFunction write (sfi = 0x376bbd1389e1)> using TurboFan]
Candidates for inlining (size=1):
  #18:JSCall, frequency: 1
  - size:474, name: write_
Inlining write_ into write
Inlining small function(s) at call site #196:JSCall
Inlining Writable.cork into write
Inlining small function(s) at call site #288:JSCall
Inlining debugs.(anonymous function) into write
Candidates for inlining (size=2):
  #267:JSCall, frequency: 1
  - size:233, name: _send
  #229:JSCall, frequency: 1
  - size:357, name: nextTick
Inlining _send into write
Candidates for inlining (size=2):
  #476:JSCall, frequency: 1
  - size:239, name: _writeRaw
  #229:JSCall, frequency: 1
  - size:357, name: nextTick
[optimizing 0x376bbd13c2a1 <JSFunction write (sfi = 0x376bbd1389e1)> - took 0.790, 2.195, 0.021 ms]
[completed optimizing 0x376bbd13c2a1 <JSFunction write (sfi = 0x376bbd1389e1)>]
[marking 0x376ba4127139 <JSFunction out.(anonymous function) (sfi = 0x376ba4126e31)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 2/5 (40%), generic ICs: 1/5 (20%)]
[compiling method 0x376ba4127139 <JSFunction out.(anonymous function) (sfi = 0x376ba4126e31)> using TurboFan]
[optimizing 0x376ba4127139 <JSFunction out.(anonymous function) (sfi = 0x376ba4126e31)> - took 0.079, 0.434, 0.008 ms]
[completed optimizing 0x376ba4127139 <JSFunction out.(anonymous function) (sfi = 0x376ba4126e31)>]
[marking 0x376b147e14d9 <JSFunction (sfi = 0x376bd587a671)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 5/7 (71%), generic ICs: 0/7 (0%)]
[compiling method 0x376b147e14d9 <JSFunction (sfi = 0x376bd587a671)> using TurboFan]
Candidates for inlining (size=1):
  #22:JSCall, frequency: 1
  - size:61, name: out.(anonymous function)
Inlining out.(anonymous function) into 
[optimizing 0x376b147e14d9 <JSFunction (sfi = 0x376bd587a671)> - took 0.206, 0.483, 0.013 ms]
[completed optimizing 0x376b147e14d9 <JSFunction (sfi = 0x376bd587a671)>]
[marking 0x376bbd13c3c1 <JSFunction _flush (sfi = 0x376bbd138c81)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 5/9 (55%), generic ICs: 0/9 (0%)]
[compiling method 0x376bbd13c3c1 <JSFunction _flush (sfi = 0x376bbd138c81)> using TurboFan]
Candidates for inlining (size=1):
  #37:JSCall, frequency: 1
  - size:166, name: _flushOutput
Inlining _flushOutput into _flush
[optimizing 0x376bbd13c3c1 <JSFunction _flush (sfi = 0x376bbd138c81)> - took 0.235, 0.609, 0.013 ms]
[completed optimizing 0x376bbd13c3c1 <JSFunction _flush (sfi = 0x376bbd138c81)>]
[marking 0x376bb2c96cc9 <JSFunction _route (sfi = 0x376be7df2379)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 3/7 (42%), generic ICs: 0/7 (0%)]
[compiling method 0x376bb2c96cc9 <JSFunction _route (sfi = 0x376be7df2379)> using TurboFan]
[optimizing 0x376bb2c96cc9 <JSFunction _route (sfi = 0x376be7df2379)> - took 0.088, 0.634, 0.013 ms]
[completed optimizing 0x376bb2c96cc9 <JSFunction _route (sfi = 0x376be7df2379)>]
[marking 0x376bcc739ea1 <JSFunction onFinish (sfi = 0x376bbd137eb9)> for optimized recompilation, reason: small function, ICs with typeinfo: 2/2 (100%), generic ICs: 0/2 (0%)]
[compiling method 0x376bcc739ea1 <JSFunction onFinish (sfi = 0x376bbd137eb9)> using TurboFan]
Candidates for inlining (size=1):
  #20:JSCall, frequency: 1
  - size:350, name: emit
Inlining emit into onFinish
[optimizing 0x376bcc739ea1 <JSFunction onFinish (sfi = 0x376bbd137eb9)> - took 0.422, 1.459, 0.014 ms]
[completed optimizing 0x376bcc739ea1 <JSFunction onFinish (sfi = 0x376bbd137eb9)>]
[marking 0x376bbd136031 <JSFunction read (sfi = 0x376bbd135659)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 10/10 (100%), generic ICs: 0/10 (0%)]
[compiling method 0x376bbd136031 <JSFunction read (sfi = 0x376bbd135659)> using TurboFan]
[optimizing 0x376bbd136031 <JSFunction read (sfi = 0x376bbd135659)> - took 0.111, 0.413, 0.010 ms]
[completed optimizing 0x376bbd136031 <JSFunction read (sfi = 0x376bbd135659)>]
[marking 0x376bb76c5751 <JSFunction getType (sfi = 0x376bd587cc31)> for optimized recompilation, reason: small function, ICs with typeinfo: 3/3 (100%), generic ICs: 0/3 (0%)]
[compiling method 0x376bb76c5751 <JSFunction getType (sfi = 0x376bd587cc31)> using TurboFan]
[optimizing 0x376bb76c5751 <JSFunction getType (sfi = 0x376bd587cc31)> - took 0.068, 0.397, 0.009 ms]
[completed optimizing 0x376bb76c5751 <JSFunction getType (sfi = 0x376bd587cc31)>]
[marking 0x376b7fbbced9 <JSFunction once (sfi = 0x376b7fbbba51)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 3/7 (42%), generic ICs: 0/7 (0%)]
[compiling method 0x376b7fbbced9 <JSFunction once (sfi = 0x376b7fbbba51)> using TurboFan]
Candidates for inlining (size=2):
  #38:JSCall, frequency: 1
  - size:163, name: Readable.on
  #32:JSCall, frequency: 1
  - size:62, name: _onceWrap
Inlining Readable.on into once
Inlining small function(s) at call site #89:JSCall
Inlining addListener into once
Candidates for inlining (size=2):
  #156:JSCall, frequency: 1
  - size:445, name: _addListener
  #32:JSCall, frequency: 1
  - size:62, name: _onceWrap
Inlining _addListener into once
Candidates for inlining (size=1):
  #32:JSCall, frequency: 1
  - size:62, name: _onceWrap
Inlining _onceWrap into once
[optimizing 0x376b7fbbced9 <JSFunction once (sfi = 0x376b7fbbba51)> - took 0.756, 2.086, 0.027 ms]
[completed optimizing 0x376b7fbbced9 <JSFunction once (sfi = 0x376b7fbbba51)>]
[marking 0x376bb2c963e9 <JSFunction restifyWriteHead (sfi = 0x376bb2c94bd1)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 9/17 (52%), generic ICs: 0/17 (0%)]
[compiling method 0x376bb2c963e9 <JSFunction restifyWriteHead (sfi = 0x376bb2c94bd1)> using TurboFan]
Candidates for inlining (size=1):
  #22:JSCall, frequency: 1
  - size:350, name: emit
Inlining emit into restifyWriteHead
[optimizing 0x376bb2c963e9 <JSFunction restifyWriteHead (sfi = 0x376bb2c94bd1)> - took 0.358, 1.549, 0.018 ms]
[completed optimizing 0x376bb2c963e9 <JSFunction restifyWriteHead (sfi = 0x376bb2c94bd1)>]
[marking 0x376b9eaf5b61 <JSFunction _writeRaw (sfi = 0x376bbd137829)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 14/37 (37%), generic ICs: 0/37 (0%)]
[compiling method 0x376b9eaf5b61 <JSFunction _writeRaw (sfi = 0x376bbd137829)> using TurboFan]
Candidates for inlining (size=4):
  #157:JSCall, frequency: 0.670267
  - size:218, name: Writable.write
  #146:JSCall, frequency: 0.329733
  - size:364, name: internalNextTick
  #190:JSCall, frequency: unknown
  - size:38, name: get
  #178:JSCall, frequency: unknown
  - size:38, name: get
Inlining Writable.write into _writeRaw
Inlining small function(s) at call site #253:JSCall
Inlining isUint8Array into _writeRaw
Candidates for inlining (size=6):
  #390:JSCall, frequency: 0.670267
  - size:34, name: args
  #352:JSCall, frequency: 0.670267
  - size:218, name: writeOrBuffer
  #329:JSCall, frequency: 0.670267
  - size:128, name: validChunk
  #146:JSCall, frequency: 0.329733
  - size:364, name: internalNextTick
  #190:JSCall, frequency: unknown
  - size:38, name: get
  #178:JSCall, frequency: unknown
  - size:38, name: get
Inlining args into _writeRaw
Candidates for inlining (size=5):
  #352:JSCall, frequency: 0.670267
  - size:218, name: writeOrBuffer
  #329:JSCall, frequency: 0.670267
  - size:128, name: validChunk
  #146:JSCall, frequency: 0.329733
  - size:364, name: internalNextTick
  #190:JSCall, frequency: unknown
  - size:38, name: get
  #178:JSCall, frequency: unknown
  - size:38, name: get
Inlining writeOrBuffer into _writeRaw
Candidates for inlining (size=5):
  #476:JSCall, frequency: 0.670267
  - size:48, name: decodeChunk
  #329:JSCall, frequency: 0.670267
  - size:128, name: validChunk
  #146:JSCall, frequency: 0.329733
  - size:364, name: internalNextTick
  #190:JSCall, frequency: unknown
  - size:38, name: get
  #178:JSCall, frequency: unknown
  - size:38, name: get
Inlining decodeChunk into _writeRaw
Candidates for inlining (size=4):
  #329:JSCall, frequency: 0.670267
  - size:128, name: validChunk
  #146:JSCall, frequency: 0.329733
  - size:364, name: internalNextTick
  #190:JSCall, frequency: unknown
  - size:38, name: get
  #178:JSCall, frequency: unknown
  - size:38, name: get
Inlining validChunk into _writeRaw
Candidates for inlining (size=3):
  #146:JSCall, frequency: 0.329733
  - size:364, name: internalNextTick
  #190:JSCall, frequency: unknown
  - size:38, name: get
  #178:JSCall, frequency: unknown
  - size:38, name: get
Inlining get into _writeRaw
Candidates for inlining (size=1):
  #178:JSCall, frequency: unknown
  - size:38, name: get
Inlining get into _writeRaw
[optimizing 0x376b9eaf5b61 <JSFunction _writeRaw (sfi = 0x376bbd137829)> - took 2.062, 3.392, 0.057 ms]
[completed optimizing 0x376b9eaf5b61 <JSFunction _writeRaw (sfi = 0x376bbd137829)>]
[marking 0x376bbd13a8c9 <JSFunction getHeader (sfi = 0x376bbd138549)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 5/9 (55%), generic ICs: 3/9 (33%)]
[compiling method 0x376bbd13a8c9 <JSFunction getHeader (sfi = 0x376bbd138549)> using TurboFan]
[optimizing 0x376bbd13a8c9 <JSFunction getHeader (sfi = 0x376bbd138549)> - took 0.106, 0.579, 0.013 ms]
[completed optimizing 0x376bbd13a8c9 <JSFunction getHeader (sfi = 0x376bbd138549)>]
[marking 0x376bac8e8659 <JSFunction (sfi = 0x376bd5870309)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 11/11 (100%), generic ICs: 1/11 (9%)]
[compiling method 0x376bac8ef4c9 <JSFunction (sfi = 0x376bd5870309)> using TurboFan]
Candidates for inlining (size=2):
  #95:JSCall, frequency: 1
  - size:380, name: _run
  #28:JSCall, frequency: 1
  - size:350, name: emit
Inlining _run into 
Inlining small function(s) at call site #202:JSCall
Inlining nextId into 
Inlining small function(s) at call site #292:JSCall
Inlining addListener into 
Candidates for inlining (size=6):
  #460:JSCall, frequency: 1
  - size:445, name: _addListener
  #299:JSCall, frequency: 1
  - size:150, name: wrapper
  #279:JSCall, frequency: 1
  - size:80, name: once
  #266:JSCall, frequency: 1
  - size:80, name: once
  #251:JSCall, frequency: 1
  - size:150, name: wrapper
  #28:JSCall, frequency: 1
  - size:350, name: emit
Inlining _addListener into 
Candidates for inlining (size=5):
  #299:JSCall, frequency: 1
  - size:150, name: wrapper
  #279:JSCall, frequency: 1
  - size:80, name: once
  #266:JSCall, frequency: 1
  - size:80, name: once
  #251:JSCall, frequency: 1
  - size:150, name: wrapper
  #28:JSCall, frequency: 1
  - size:350, name: emit
Inlining once into 
Candidates for inlining (size=5):
  #745:JSCall, frequency: 1
  - size:163, name: Readable.on
  #739:JSCall, frequency: 1
  - size:62, name: _onceWrap
  #266:JSCall, frequency: 1
  - size:80, name: once
  #251:JSCall, frequency: 1
  - size:150, name: wrapper
  #28:JSCall, frequency: 1
  - size:350, name: emit
[optimizing 0x376bac8ef4c9 <JSFunction (sfi = 0x376bd5870309)> - took 1.503, 5.049, 0.045 ms]
[completed optimizing 0x376bac8ef4c9 <JSFunction (sfi = 0x376bd5870309)>]
[marking 0x376b625ae551 <JSFunction f (sfi = 0x376be7dcf8b9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 5/6 (83%), generic ICs: 0/6 (0%)]
[compiling method 0x376b625b4fb1 <JSFunction f (sfi = 0x376be7dcf8b9)> using TurboFan]
[optimizing 0x376b625b4fb1 <JSFunction f (sfi = 0x376be7dcf8b9)> - took 0.112, 0.544, 0.014 ms]
[completed optimizing 0x376b625b4fb1 <JSFunction f (sfi = 0x376be7dcf8b9)>]
[marking 0x376b24b52cb9 <JSFunction done (sfi = 0x376bd58747e1)> for optimized recompilation, reason: small function, ICs with typeinfo: 2/2 (100%), generic ICs: 0/2 (0%)]
[compiling method 0x376b24b59a81 <JSFunction done (sfi = 0x376bd58747e1)> using TurboFan]
Candidates for inlining (size=1):
  #24:JSCall, frequency: 1
  - size:212, name: _finishReqResCycle
Inlining _finishReqResCycle into done
Candidates for inlining (size=1):
  #124:JSCall, frequency: 1
  - size:350, name: emit
Inlining emit into done
[optimizing 0x376b24b59a81 <JSFunction done (sfi = 0x376bd58747e1)> - took 0.708, 2.237, 0.034 ms]
[completed optimizing 0x376b24b59a81 <JSFunction done (sfi = 0x376bd58747e1)>]
[marking 0x376ba7e581a9 <JSFunction _flush (sfi = 0x376bd5879299)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 12/15 (80%), generic ICs: 0/15 (0%)]
[compiling method 0x376ba7e5efb9 <JSFunction _flush (sfi = 0x376bd5879299)> using TurboFan]
Inlining small function(s) at call site #62:JSCall
Inlining write into _flush
Candidates for inlining (size=4):
  #214:JSCall, frequency: 1
  - size:474, name: write_
  #85:JSCall, frequency: 1
  - size:290, name: 
  #74:JSCall, frequency: 1
  - size:428, name: end
  #33:JSCall, frequency: 1
  - size:132, name: restifyWriteHead
Inlining write_ into _flush
Inlining small function(s) at call site #400:JSCall
Inlining Writable.cork into _flush
Inlining small function(s) at call site #492:JSCall
Inlining debugs.(anonymous function) into _flush
Candidates for inlining (size=5):
  #471:JSCall, frequency: 1
  - size:233, name: _send
  #433:JSCall, frequency: 1
  - size:357, name: nextTick
  #85:JSCall, frequency: 1
  - size:290, name: 
  #74:JSCall, frequency: 1
  - size:428, name: end
  #33:JSCall, frequency: 1
  - size:132, name: restifyWriteHead
Inlining _send into _flush
Candidates for inlining (size=5):
  #678:JSCall, frequency: 1
  - size:239, name: _writeRaw
  #433:JSCall, frequency: 1
  - size:357, name: nextTick
  #85:JSCall, frequency: 1
  - size:290, name: 
  #74:JSCall, frequency: 1
  - size:428, name: end
  #33:JSCall, frequency: 1
  - size:132, name: restifyWriteHead
Inlining restifyWriteHead into _flush
Candidates for inlining (size=2):
  #760:JSCall, frequency: 1
  - size:422, name: writeHead
  #718:JSCall, frequency: 1
  - size:350, name: emit
[optimizing 0x376ba7e5efb9 <JSFunction _flush (sfi = 0x376bd5879299)> - took 1.336, 3.612, 0.029 ms]
[completed optimizing 0x376ba7e5efb9 <JSFunction _flush (sfi = 0x376bd5879299)>]
[marking 0x376bf02a7871 <JSFunction routeAndRun (sfi = 0x376bd586fea1)> for optimized recompilation, reason: small function, ICs with typeinfo: 2/2 (100%), generic ICs: 0/2 (0%)]
[compiling method 0x376bf02ae4b1 <JSFunction routeAndRun (sfi = 0x376bd586fea1)> using TurboFan]
Candidates for inlining (size=1):
  #23:JSCall, frequency: 1
  - size:108, name: _route
Inlining _route into routeAndRun
[optimizing 0x376bf02ae4b1 <JSFunction routeAndRun (sfi = 0x376bd586fea1)> - took 0.216, 0.611, 0.014 ms]
[completed optimizing 0x376bf02ae4b1 <JSFunction routeAndRun (sfi = 0x376bd586fea1)>]
[deoptimizing (DEOPT eager): begin 0x376b7fbbce01 <JSFunction emit (sfi = 0x376b7fbbb859)> (opt #8) @7, FP to SP delta: 56, caller sp: 0x7fff5fbf60d8]
            ;;; deoptimize at <events.js:160:13>, wrong map
  reading input frame emit => bytecode_offset=264, args=2, height=20; inputs:
      0: 0x376b7fbbce01 ; [fp - 16] 0x376b7fbbce01 <JSFunction emit (sfi = 0x376b7fbbb859)>
      1: 0x376bb4909f79 ; r8 0x376bb4909f79 <process map = 0x376b6a38a341>
      2: 0x376b7fbe3fe9 ; [fp + 16] 0x376b7fbe3fe9 <String[8]: SIGWINCH>
      3: 0x376bb4916681 ; [fp - 8] 0x376bb4916681 <FixedArray[19]>
      4: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
      5: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
      6: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
      7: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
      8: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
      9: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     10: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     11: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     12: 0x376b90f02201 ; rbx 0x376b90f02201 <null>
     13: 0x376b9eabe441 ; rax 0x376b9eabe441 <JSFunction process.on (sfi = 0x376bea9c1579)>
     14: 0x376b90f023e1 ; (literal 4) 0x376b90f023e1 <false>
     15: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     16: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     17: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     18: captured object #0 (length = 4)
           0x376b6a382991 ; (literal 2) 0x376b6a382991 <Map(PACKED_ELEMENTS)>
           0x376b90f02241 ; (literal 3) 0x376b90f02241 <FixedArray[0]>
           arguments elements object #1 (is_rest = 1, length = 2)
           arguments length field (is_rest = 1, length = 2)
     19: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     20: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     21: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     22: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     23: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
  translating interpreted frame emit => bytecode_offset=264, height=160
    0x7fff5fbf60d0: [top + 216] <- 0x376bb4909f79 ;  0x376bb4909f79 <process map = 0x376b6a38a341>  (input #1)
    0x7fff5fbf60c8: [top + 208] <- 0x376b7fbe3fe9 ;  0x376b7fbe3fe9 <String[8]: SIGWINCH>  (input #2)
    -------------------------
    0x7fff5fbf60c0: [top + 200] <- 0x173e4740535f ;  caller's pc
    0x7fff5fbf60b8: [top + 192] <- 0x7fff5fbf60f0 ;  caller's fp
    0x7fff5fbf60b0: [top + 184] <- 0x376bb4916681 ;  context    0x376bb4916681 <FixedArray[19]>  (input #3)
    0x7fff5fbf60a8: [top + 176] <- 0x376b7fbbce01 ;  function    0x376b7fbbce01 <JSFunction emit (sfi = 0x376b7fbbb859)>  (input #0)
    0x7fff5fbf60a0: [top + 168] <- 0x376b2a915cf9 ;  bytecode array 0x376b2a915cf9 <BytecodeArray[350]>  (input #0)
    0x7fff5fbf6098: [top + 160] <- 0x14100000000 ;  bytecode offset @ 264
  (input #0)
    -------------------------
    0x7fff5fbf6090: [top + 152] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #4)
    0x7fff5fbf6088: [top + 144] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf6080: [top + 136] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf6078: [top + 128] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf6070: [top + 120] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf6068: [top + 112] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf6060: [top + 104] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf6058: [top + 96] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf6050: [top + 88] <- 0x376b90f02201 ;  0x376b90f02201 <null>  (input #12)
    0x7fff5fbf6048: [top + 80] <- 0x376b9eabe441 ;  0x376b9eabe441 <JSFunction process.on (sfi = 0x376bea9c1579)>  (input #13)
    0x7fff5fbf6040: [top + 72] <- 0x376b90f023e1 ;  0x376b90f023e1 <false>  (input #14)
    0x7fff5fbf6038: [top + 64] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #15)
    0x7fff5fbf6030: [top + 56] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #16)
    0x7fff5fbf6028: [top + 48] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #17)
    0x7fff5fbf6020: [top + 40] <- 0x376b90f02459 ;  0x376b90f02459 <Odd Oddball: arguments_marker>  (input #18)
    0x7fff5fbf6018: [top + 32] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #19)
    0x7fff5fbf6010: [top + 24] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #20)
    0x7fff5fbf6008: [top + 16] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #21)
    0x7fff5fbf6000: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #22)
    0x7fff5fbf5ff8: [top + 0] <- 0x376b90f02569 ;  accumulator 0x376b90f02569 <Odd Oddball: optimized_out>  (input #23)
[deoptimizing (eager): end 0x376b7fbbce01 <JSFunction emit (sfi = 0x376b7fbbb859)> @7 => node=264, pc=0x173e474bd9c0, caller sp=0x7fff5fbf60d8, state=TOS_REGISTER, took 2.365 ms]
Materialization [0x7fff5fbf6020] <- 0x376bb00c1679 ;  0x376bb00c1679 <JSArray[2]>
[removing optimized code for: 0x376b7fbbce01 <JSFunction emit (sfi = 0x376b7fbbb859)>]
[marking 0x376b7fbbce01 <JSFunction emit (sfi = 0x376b7fbbb859)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 16/47 (34%), generic ICs: 3/47 (6%)]
[compiling method 0x376b7fbbce01 <JSFunction emit (sfi = 0x376b7fbbb859)> using TurboFan]
[optimizing 0x376b7fbbce01 <JSFunction emit (sfi = 0x376b7fbbb859)> - took 0.227, 1.443, 0.020 ms]
[completed optimizing 0x376b7fbbce01 <JSFunction emit (sfi = 0x376b7fbbb859)>]
[marking 0x376bbb482ad1 <JSFunction (sfi = 0x376bea9fa8e9)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 10/10 (100%), generic ICs: 2/10 (20%)]
[compiling method 0x376bbb482ad1 <JSFunction (sfi = 0x376bea9fa8e9)> using TurboFan]
Candidates for inlining (size=3):
  #75:JSCall, frequency: 1
  - size:73, name: send
  #64:JSCall, frequency: 1
  - size:170, name: setHeader
  #39:JSCall, frequency: 1
  - size:313, name: etag
Inlining send into 
Candidates for inlining (size=2):
  #64:JSCall, frequency: 1
  - size:170, name: setHeader
  #39:JSCall, frequency: 1
  - size:313, name: etag
Inlining setHeader into 
Candidates for inlining (size=2):
  #216:JSCall, frequency: 1
  - size:180, name: validateHeader
  #39:JSCall, frequency: 1
  - size:313, name: etag
Inlining validateHeader into 
Inlining small function(s) at call site #409:JSCall
Inlining checkIsHttpToken into 
Candidates for inlining (size=2):
  #480:JSCall, frequency: 1
  - size:221, name: checkInvalidHeaderChar
  #39:JSCall, frequency: 1
  - size:313, name: etag
Inlining checkInvalidHeaderChar into 
Candidates for inlining (size=1):
  #39:JSCall, frequency: 1
  - size:313, name: etag
[optimizing 0x376bbb482ad1 <JSFunction (sfi = 0x376bea9fa8e9)> - took 1.255, 4.076, 0.051 ms]
[completed optimizing 0x376bbb482ad1 <JSFunction (sfi = 0x376bea9fa8e9)>]
[marking 0x376bbb4ba0b9 <JSFunction (sfi = 0x376bea9fa841)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 9/9 (100%), generic ICs: 2/9 (22%)]
[compiling method 0x376bbb4ba0b9 <JSFunction (sfi = 0x376bea9fa841)> using TurboFan]
Candidates for inlining (size=3):
  #67:JSCall, frequency: 1
  - size:73, name: send
  #56:JSCall, frequency: 1
  - size:170, name: setHeader
  #31:JSCall, frequency: 1
  - size:313, name: etag
Inlining send into 
Candidates for inlining (size=2):
  #56:JSCall, frequency: 1
  - size:170, name: setHeader
  #31:JSCall, frequency: 1
  - size:313, name: etag
Inlining setHeader into 
Candidates for inlining (size=2):
  #205:JSCall, frequency: 1
  - size:180, name: validateHeader
  #31:JSCall, frequency: 1
  - size:313, name: etag
Inlining validateHeader into 
Inlining small function(s) at call site #398:JSCall
Inlining checkIsHttpToken into 
Candidates for inlining (size=2):
  #469:JSCall, frequency: 1
  - size:221, name: checkInvalidHeaderChar
  #31:JSCall, frequency: 1
  - size:313, name: etag
Inlining checkInvalidHeaderChar into 
Candidates for inlining (size=1):
  #31:JSCall, frequency: 1
  - size:313, name: etag
[optimizing 0x376bbb4ba0b9 <JSFunction (sfi = 0x376bea9fa841)> - took 1.273, 3.979, 0.035 ms]
[completed optimizing 0x376bbb4ba0b9 <JSFunction (sfi = 0x376bea9fa841)>]
[marking 0x376bbb4ab2c9 <JSFunction (sfi = 0x376bea9fa991)> for optimized recompilation, reason: hot and stable, ICs with typeinfo: 7/9 (77%), generic ICs: 2/9 (22%)]
[compiling method 0x376bbb4ab2c9 <JSFunction (sfi = 0x376bea9fa991)> using TurboFan]
Candidates for inlining (size=2):
  #62:JSCall, frequency: 1
  - size:73, name: send
  #34:JSCall, frequency: 1
  - size:313, name: etag
Inlining send into 
Candidates for inlining (size=1):
  #34:JSCall, frequency: 1
  - size:313, name: etag
Inlining etag into 
Inlining small function(s) at call site #293:JSCall
Inlining createHash into  (inside try-block)
Inlinee contains 2 calls without local exception handler; linking to surrounding exception handler
Candidates for inlining (size=3):
  #602:JSConstruct, frequency: 1
  - size:129, name: Hash
  #369:JSCall, frequency: 0.652516
  - size:157, name: digest
  #315:JSCall, frequency: 0.652516
  - size:163, name: update
Inlining Hash into  (inside try-block)
Inlinee contains 14 calls without local exception handler; linking to surrounding exception handler
Inlining small function(s) at call site #778:JSCall
Inlining LazyTransform into  (inside try-block)
Inlinee contains 3 calls without local exception handler; linking to surrounding exception handler
Candidates for inlining (size=2):
  #369:JSCall, frequency: 0.652516
  - size:157, name: digest
  #315:JSCall, frequency: 0.652516
  - size:163, name: update
Inlining digest into  (inside try-block)
Inlinee contains 17 calls without local exception handler; linking to surrounding exception handler
Candidates for inlining (size=2):
  #1023:JSCall, frequency: 0.652516
  - size:143, name: normalizeEncoding
  #315:JSCall, frequency: 0.652516
  - size:163, name: update
Inlining normalizeEncoding into  (inside try-block)
Inlinee contains 2 calls without local exception handler; linking to surrounding exception handler
Candidates for inlining (size=1):
  #315:JSCall, frequency: 0.652516
  - size:163, name: update
[optimizing 0x376bbb4ab2c9 <JSFunction (sfi = 0x376bea9fa991)> - took 2.019, 5.444, 0.082 ms]
[completed optimizing 0x376bbb4ab2c9 <JSFunction (sfi = 0x376bea9fa991)>]
[marking 0x376bed8b5e31 <JSFunction (sfi = 0x376be7dd1fc9)> for optimized recompilation, reason: not much type info but very hot, ICs with typeinfo: 6/30 (20%), generic ICs: 0/30 (0%)]
[compiling method 0x376bed8b5e31 <JSFunction (sfi = 0x376be7dd1fc9)> using TurboFan]
[optimizing 0x376bed8b5e31 <JSFunction (sfi = 0x376be7dd1fc9)> - took 0.119, 0.401, 0.007 ms]
[completed optimizing 0x376bed8b5e31 <JSFunction (sfi = 0x376be7dd1fc9)>]
[deoptimizing (DEOPT eager): begin 0x376be7d84569 <JSFunction emitReadable_ (sfi = 0x376b2a965709)> (opt #15) @1, FP to SP delta: 56, caller sp: 0x7fff5fbf5d00]
            ;;; deoptimize at <_stream_readable.js:520:10>, wrong map
  reading input frame emitReadable_ => bytecode_offset=0, args=2, height=4; inputs:
      0: 0x376be7d84569 ; [fp - 16] 0x376be7d84569 <JSFunction emitReadable_ (sfi = 0x376b2a965709)>
      1: 0x376b90f022d1 ; [fp + 24] 0x376b90f022d1 <undefined>
      2: 0x376b03409499 ; rdi 0x376b03409499 <Socket map = 0x376b00fb28d1>
      3: 0x376b9ea91041 ; [fp - 8] 0x376b9ea91041 <FixedArray[39]>
      4: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
      5: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
      6: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
      7: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
  translating interpreted frame emitReadable_ => bytecode_offset=0, height=32
    0x7fff5fbf5cf8: [top + 88] <- 0x376b90f022d1 ;  0x376b90f022d1 <undefined>  (input #1)
    0x7fff5fbf5cf0: [top + 80] <- 0x376b03409499 ;  0x376b03409499 <Socket map = 0x376b00fb28d1>  (input #2)
    -------------------------
    0x7fff5fbf5ce8: [top + 72] <- 0x173e474bd196 ;  caller's pc
    0x7fff5fbf5ce0: [top + 64] <- 0x7fff5fbf5d40 ;  caller's fp
    0x7fff5fbf5cd8: [top + 56] <- 0x376b9ea91041 ;  context    0x376b9ea91041 <FixedArray[39]>  (input #3)
    0x7fff5fbf5cd0: [top + 48] <- 0x376be7d84569 ;  function    0x376be7d84569 <JSFunction emitReadable_ (sfi = 0x376b2a965709)>  (input #0)
    0x7fff5fbf5cc8: [top + 40] <- 0x376bae33e271 ;  bytecode array 0x376bae33e271 <BytecodeArray[40]>  (input #0)
    0x7fff5fbf5cc0: [top + 32] <- 0x3900000000 ;  bytecode offset @ 0
  (input #0)
    -------------------------
    0x7fff5fbf5cb8: [top + 24] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #4)
    0x7fff5fbf5cb0: [top + 16] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf5ca8: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf5ca0: [top + 0] <- 0x376b90f02569 ;  accumulator 0x376b90f02569 <Odd Oddball: optimized_out>  (input #7)
[deoptimizing (eager): end 0x376be7d84569 <JSFunction emitReadable_ (sfi = 0x376b2a965709)> @1 => node=0, pc=0x173e474bd9c0, caller sp=0x7fff5fbf5d00, state=TOS_REGISTER, took 2.292 ms]
[removing optimized code for: 0x376be7d84569 <JSFunction emitReadable_ (sfi = 0x376b2a965709)>]
[deoptimizing (DEOPT eager): begin 0x376b2a969dd1 <JSFunction Readable.read (sfi = 0x376b2a9664d1)> (opt #13) @2, FP to SP delta: 64, caller sp: 0x7fff5fbf5c40]
            ;;; deoptimize at <_stream_readable.js:375:20>, wrong map
  reading input frame Readable.read => bytecode_offset=32, args=2, height=9; inputs:
      0: 0x376b2a969dd1 ; [fp - 16] 0x376b2a969dd1 <JSFunction Readable.read (sfi = 0x376b2a9664d1)>
      1: 0x376b03409499 ; rdi 0x376b03409499 <Socket map = 0x376b00fb28d1>
      2: 0x376bd2ed83c9 ; [fp - 40] 0x376bd2ed83c9 <Number nan>
      3: 0x376b9ea91041 ; [fp - 8] 0x376b9ea91041 <FixedArray[39]>
      4: 0x376b90f02569 ; (literal 8) 0x376b90f02569 <Odd Oddball: optimized_out>
      5: 0x376b90f02569 ; (literal 8) 0x376b90f02569 <Odd Oddball: optimized_out>
      6: 0x376b90f02569 ; (literal 8) 0x376b90f02569 <Odd Oddball: optimized_out>
      7: 0x376b90f02569 ; (literal 8) 0x376b90f02569 <Odd Oddball: optimized_out>
      8: 0x376b90f02569 ; (literal 8) 0x376b90f02569 <Odd Oddball: optimized_out>
      9: 0x376b90f02569 ; (literal 8) 0x376b90f02569 <Odd Oddball: optimized_out>
     10: 0x376b90f02569 ; (literal 8) 0x376b90f02569 <Odd Oddball: optimized_out>
     11: 0x376b90f02569 ; (literal 8) 0x376b90f02569 <Odd Oddball: optimized_out>
     12: 0x376b90f02569 ; (literal 8) 0x376b90f02569 <Odd Oddball: optimized_out>
  translating interpreted frame Readable.read => bytecode_offset=32, height=72
    0x7fff5fbf5c38: [top + 128] <- 0x376b03409499 ;  0x376b03409499 <Socket map = 0x376b00fb28d1>  (input #1)
    0x7fff5fbf5c30: [top + 120] <- 0x376bd2ed83c9 ;  0x376bd2ed83c9 <Number nan>  (input #2)
    -------------------------
    0x7fff5fbf5c28: [top + 112] <- 0x173e4740535f ;  caller's pc
    0x7fff5fbf5c20: [top + 104] <- 0x7fff5fbf5c58 ;  caller's fp
    0x7fff5fbf5c18: [top + 96] <- 0x376b9ea91041 ;  context    0x376b9ea91041 <FixedArray[39]>  (input #3)
    0x7fff5fbf5c10: [top + 88] <- 0x376b2a969dd1 ;  function    0x376b2a969dd1 <JSFunction Readable.read (sfi = 0x376b2a9664d1)>  (input #0)
    0x7fff5fbf5c08: [top + 80] <- 0x376bd5861281 ;  bytecode array 0x376bd5861281 <BytecodeArray[502]>  (input #0)
    0x7fff5fbf5c00: [top + 72] <- 0x5900000000 ;  bytecode offset @ 32
  (input #0)
    -------------------------
    0x7fff5fbf5bf8: [top + 64] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #4)
    0x7fff5fbf5bf0: [top + 56] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf5be8: [top + 48] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf5be0: [top + 40] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5bd8: [top + 32] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5bd0: [top + 24] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5bc8: [top + 16] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf5bc0: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf5bb8: [top + 0] <- 0x376b90f02569 ;  accumulator 0x376b90f02569 <Odd Oddball: optimized_out>  (input #12)
[deoptimizing (eager): end 0x376b2a969dd1 <JSFunction Readable.read (sfi = 0x376b2a9664d1)> @2 => node=32, pc=0x173e474bd9c0, caller sp=0x7fff5fbf5c40, state=TOS_REGISTER, took 2.605 ms]
[removing optimized code for: 0x376b2a969dd1 <JSFunction Readable.read (sfi = 0x376b2a9664d1)>]
[deoptimizing (DEOPT eager): begin 0x376b7fbbced9 <JSFunction once (sfi = 0x376b7fbbba51)> (opt #114) @1, FP to SP delta: 48, caller sp: 0x7fff5fbf5e68]
            ;;; deoptimize at <events.js:272:8>, wrong map
  reading input frame once => bytecode_offset=0, args=3, height=10; inputs:
      0: 0x376b7fbbced9 ; [fp - 16] 0x376b7fbbced9 <JSFunction once (sfi = 0x376b7fbbba51)>
      1: 0x376b03409499 ; r8 0x376b03409499 <Socket map = 0x376b00fb28d1>
      2: 0x376b7fbb6849 ; [fp + 24] 0x376b7fbb6849 <String[3]: end>
      3: 0x376bd2ed84c9 ; rdi 0x376bd2ed84c9 <JSFunction end (sfi = 0x376b8decedb1)>
      4: 0x376bb4916681 ; [fp - 8] 0x376bb4916681 <FixedArray[19]>
      5: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
      6: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
      7: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
      8: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
      9: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
     10: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
     11: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
     12: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
     13: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
     14: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
  translating interpreted frame once => bytecode_offset=0, height=80
    0x7fff5fbf5e60: [top + 144] <- 0x376b03409499 ;  0x376b03409499 <Socket map = 0x376b00fb28d1>  (input #1)
    0x7fff5fbf5e58: [top + 136] <- 0x376b7fbb6849 ;  0x376b7fbb6849 <String[3]: end>  (input #2)
    0x7fff5fbf5e50: [top + 128] <- 0x376bd2ed84c9 ;  0x376bd2ed84c9 <JSFunction end (sfi = 0x376b8decedb1)>  (input #3)
    -------------------------
    0x7fff5fbf5e48: [top + 120] <- 0x173e474bd196 ;  caller's pc
    0x7fff5fbf5e40: [top + 112] <- 0x7fff5fbf5ea8 ;  caller's fp
    0x7fff5fbf5e38: [top + 104] <- 0x376bb4916681 ;  context    0x376bb4916681 <FixedArray[19]>  (input #4)
    0x7fff5fbf5e30: [top + 96] <- 0x376b7fbbced9 ;  function    0x376b7fbbced9 <JSFunction once (sfi = 0x376b7fbbba51)>  (input #0)
    0x7fff5fbf5e28: [top + 88] <- 0x376bea9e8829 ;  bytecode array 0x376bea9e8829 <BytecodeArray[80]>  (input #0)
    0x7fff5fbf5e20: [top + 80] <- 0x3900000000 ;  bytecode offset @ 0
  (input #0)
    -------------------------
    0x7fff5fbf5e18: [top + 72] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf5e10: [top + 64] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf5e08: [top + 56] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5e00: [top + 48] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5df8: [top + 40] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5df0: [top + 32] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf5de8: [top + 24] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf5de0: [top + 16] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #12)
    0x7fff5fbf5dd8: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf5dd0: [top + 0] <- 0x376b90f02569 ;  accumulator 0x376b90f02569 <Odd Oddball: optimized_out>  (input #14)
[deoptimizing (eager): end 0x376b7fbbced9 <JSFunction once (sfi = 0x376b7fbbba51)> @1 => node=0, pc=0x173e474bd9c0, caller sp=0x7fff5fbf5e68, state=TOS_REGISTER, took 2.253 ms]
[removing optimized code for: 0x376b7fbbced9 <JSFunction once (sfi = 0x376b7fbbba51)>]
[deoptimizing (DEOPT soft): begin 0x376bcc7395b9 <JSFunction socketOnWrap (sfi = 0x376bbd13f7a9)> (opt #88) @20, FP to SP delta: 40, caller sp: 0x7fff5fbf5dd8]
            ;;; deoptimize at <events.js:215:16> inlined at <events.js:241:10> inlined at <_stream_readable.js:779:35> inlined at <_http_server.js:677:37>, Insufficient type feedback for generic named access
  reading input frame socketOnWrap => bytecode_offset=40, args=3, height=7; inputs:
      0: 0x376bcc7395b9 ; [fp - 16] 0x376bcc7395b9 <JSFunction socketOnWrap (sfi = 0x376bbd13f7a9)>
      1: 0x376b03409499 ; [fp + 32] 0x376b03409499 <Socket map = 0x376b00fb28d1>
      2: 0x376b7fbb6849 ; [fp + 24] 0x376b7fbb6849 <String[3]: end>
      3: 0x376bd2ed8551 ; [fp + 16] 0x376bd2ed8551 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>
      4: 0x376bcc72f8b9 ; [fp - 8] 0x376bcc72f8b9 <FixedArray[46]>
      5: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
      6: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
      7: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
      8: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
      9: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
     10: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
     11: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
  reading input frame Readable.on => bytecode_offset=34, args=3, height=8; inputs:
      0: 0x376b2a969ef1 ; (literal 7) 0x376b2a969ef1 <JSFunction Readable.on (sfi = 0x376b2a966771)>
      1: 0x376b03409499 ; [fp + 32] 0x376b03409499 <Socket map = 0x376b00fb28d1>
      2: 0x376b7fbb6849 ; [fp + 24] 0x376b7fbb6849 <String[3]: end>
      3: 0x376bd2ed8551 ; [fp + 16] 0x376bd2ed8551 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>
      4: 0x376b9ea91041 ; (literal 8) 0x376b9ea91041 <FixedArray[39]>
      5: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
      6: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
      7: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
      8: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
      9: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
     10: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
     11: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
     12: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
  reading input frame addListener => bytecode_offset=20, args=3, height=7; inputs:
      0: 0x376b7fbbce49 ; (literal 9) 0x376b7fbbce49 <JSFunction addListener (sfi = 0x376b7fbbb901)>
      1: 0x376b03409499 ; [fp + 32] 0x376b03409499 <Socket map = 0x376b00fb28d1>
      2: 0x376b7fbb6849 ; [fp + 24] 0x376b7fbb6849 <String[3]: end>
      3: 0x376bd2ed8551 ; [fp + 16] 0x376bd2ed8551 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>
      4: 0x376bb4916681 ; (literal 10) 0x376bb4916681 <FixedArray[19]>
      5: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
      6: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
      7: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
      8: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
      9: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
     10: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
     11: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
  reading input frame _addListener => bytecode_offset=259, args=5, height=11; inputs:
      0: 0x376bb494a489 ; (literal 11) 0x376bb494a489 <JSFunction _addListener (sfi = 0x376b7fbbb079)>
      1: 0x376b90f022d1 ; (literal 12) 0x376b90f022d1 <undefined>
      2: 0x376b03409499 ; [fp + 32] 0x376b03409499 <Socket map = 0x376b00fb28d1>
      3: 0x376b7fbb6849 ; [fp + 24] 0x376b7fbb6849 <String[3]: end>
      4: 0x376bd2ed8551 ; [fp + 16] 0x376bd2ed8551 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>
      5: 0x376b90f023e1 ; (literal 13) 0x376b90f023e1 <false>
      6: 0x376bb4916681 ; (literal 10) 0x376bb4916681 <FixedArray[19]>
      7: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
      8: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
      9: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
     10: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
     11: 0x376b0340eb71 ; rax 0x376b0340eb71 <JSArray[2]>
     12: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
     13: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
     14: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
     15: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
     16: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
     17: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
  translating interpreted frame socketOnWrap => bytecode_offset=40, height=48
    0x7fff5fbf5dd0: [top + 112] <- 0x376b03409499 ;  0x376b03409499 <Socket map = 0x376b00fb28d1>  (input #1)
    0x7fff5fbf5dc8: [top + 104] <- 0x376b7fbb6849 ;  0x376b7fbb6849 <String[3]: end>  (input #2)
    0x7fff5fbf5dc0: [top + 96] <- 0x376bd2ed8551 ;  0x376bd2ed8551 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>  (input #3)
    -------------------------
    0x7fff5fbf5db8: [top + 88] <- 0x173e474bd196 ;  caller's pc
    0x7fff5fbf5db0: [top + 80] <- 0x7fff5fbf5e40 ;  caller's fp
    0x7fff5fbf5da8: [top + 72] <- 0x376bcc72f8b9 ;  context    0x376bcc72f8b9 <FixedArray[46]>  (input #4)
    0x7fff5fbf5da0: [top + 64] <- 0x376bcc7395b9 ;  function    0x376bcc7395b9 <JSFunction socketOnWrap (sfi = 0x376bbd13f7a9)>  (input #0)
    0x7fff5fbf5d98: [top + 56] <- 0x376bd586d561 ;  bytecode array 0x376bd586d561 <BytecodeArray[114]>  (input #0)
    0x7fff5fbf5d90: [top + 48] <- 0x6100000000 ;  bytecode offset @ 40
  (input #0)
    -------------------------
    0x7fff5fbf5d88: [top + 40] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf5d80: [top + 32] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf5d78: [top + 24] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5d70: [top + 16] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5d68: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5d60: [top + 0] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #10)
  translating interpreted frame Readable.on => bytecode_offset=34, height=56
    0x7fff5fbf5d58: [top + 120] <- 0x376b03409499 ;  0x376b03409499 <Socket map = 0x376b00fb28d1>  (input #1)
    0x7fff5fbf5d50: [top + 112] <- 0x376b7fbb6849 ;  0x376b7fbb6849 <String[3]: end>  (input #2)
    0x7fff5fbf5d48: [top + 104] <- 0x376bd2ed8551 ;  0x376bd2ed8551 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>  (input #3)
    -------------------------
    0x7fff5fbf5d40: [top + 96] <- 0x173e474bd8c0 ;  caller's pc
    0x7fff5fbf5d38: [top + 88] <- 0x7fff5fbf5db0 ;  caller's fp
    0x7fff5fbf5d30: [top + 80] <- 0x376b9ea91041 ;  context    0x376b9ea91041 <FixedArray[39]>  (input #4)
    0x7fff5fbf5d28: [top + 72] <- 0x376b2a969ef1 ;  function    0x376b2a969ef1 <JSFunction Readable.on (sfi = 0x376b2a966771)>  (input #0)
    0x7fff5fbf5d20: [top + 64] <- 0x376bea9e8dc9 ;  bytecode array 0x376bea9e8dc9 <BytecodeArray[163]>  (input #0)
    0x7fff5fbf5d18: [top + 56] <- 0x5b00000000 ;  bytecode offset @ 34
  (input #0)
    -------------------------
    0x7fff5fbf5d10: [top + 48] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf5d08: [top + 40] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf5d00: [top + 32] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5cf8: [top + 24] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5cf0: [top + 16] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5ce8: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf5ce0: [top + 0] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #11)
  translating interpreted frame addListener => bytecode_offset=20, height=48
    0x7fff5fbf5cd8: [top + 112] <- 0x376b03409499 ;  0x376b03409499 <Socket map = 0x376b00fb28d1>  (input #1)
    0x7fff5fbf5cd0: [top + 104] <- 0x376b7fbb6849 ;  0x376b7fbb6849 <String[3]: end>  (input #2)
    0x7fff5fbf5cc8: [top + 96] <- 0x376bd2ed8551 ;  0x376bd2ed8551 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>  (input #3)
    -------------------------
    0x7fff5fbf5cc0: [top + 88] <- 0x173e474bd8c0 ;  caller's pc
    0x7fff5fbf5cb8: [top + 80] <- 0x7fff5fbf5d38 ;  caller's fp
    0x7fff5fbf5cb0: [top + 72] <- 0x376bb4916681 ;  context    0x376bb4916681 <FixedArray[19]>  (input #4)
    0x7fff5fbf5ca8: [top + 64] <- 0x376b7fbbce49 ;  function    0x376b7fbbce49 <JSFunction addListener (sfi = 0x376b7fbbb901)>  (input #0)
    0x7fff5fbf5ca0: [top + 56] <- 0x376b2a915171 ;  bytecode array 0x376b2a915171 <BytecodeArray[26]>  (input #0)
    0x7fff5fbf5c98: [top + 48] <- 0x4d00000000 ;  bytecode offset @ 20
  (input #0)
    -------------------------
    0x7fff5fbf5c90: [top + 40] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf5c88: [top + 32] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf5c80: [top + 24] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5c78: [top + 16] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5c70: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5c68: [top + 0] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #10)
  translating interpreted frame _addListener => bytecode_offset=259, height=88
    0x7fff5fbf5c60: [top + 168] <- 0x376b90f022d1 ;  0x376b90f022d1 <undefined>  (input #1)
    0x7fff5fbf5c58: [top + 160] <- 0x376b03409499 ;  0x376b03409499 <Socket map = 0x376b00fb28d1>  (input #2)
    0x7fff5fbf5c50: [top + 152] <- 0x376b7fbb6849 ;  0x376b7fbb6849 <String[3]: end>  (input #3)
    0x7fff5fbf5c48: [top + 144] <- 0x376bd2ed8551 ;  0x376bd2ed8551 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>  (input #4)
    0x7fff5fbf5c40: [top + 136] <- 0x376b90f023e1 ;  0x376b90f023e1 <false>  (input #5)
    -------------------------
    0x7fff5fbf5c38: [top + 128] <- 0x173e474bd8c0 ;  caller's pc
    0x7fff5fbf5c30: [top + 120] <- 0x7fff5fbf5cb8 ;  caller's fp
    0x7fff5fbf5c28: [top + 112] <- 0x376bb4916681 ;  context    0x376bb4916681 <FixedArray[19]>  (input #6)
    0x7fff5fbf5c20: [top + 104] <- 0x376bb494a489 ;  function    0x376bb494a489 <JSFunction _addListener (sfi = 0x376b7fbbb079)>  (input #0)
    0x7fff5fbf5c18: [top + 96] <- 0x376b2a915519 ;  bytecode array 0x376b2a915519 <BytecodeArray[445]>  (input #0)
    0x7fff5fbf5c10: [top + 88] <- 0x13c00000000 ;  bytecode offset @ 259
  (input #0)
    -------------------------
    0x7fff5fbf5c08: [top + 80] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5c00: [top + 72] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5bf8: [top + 64] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5bf0: [top + 56] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf5be8: [top + 48] <- 0x376b0340eb71 ;  0x376b0340eb71 <JSArray[2]>  (input #11)
    0x7fff5fbf5be0: [top + 40] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #12)
    0x7fff5fbf5bd8: [top + 32] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf5bd0: [top + 24] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #14)
    0x7fff5fbf5bc8: [top + 16] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #15)
    0x7fff5fbf5bc0: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #16)
    0x7fff5fbf5bb8: [top + 0] <- 0x376b90f02569 ;  accumulator 0x376b90f02569 <Odd Oddball: optimized_out>  (input #17)
[deoptimizing (soft): end 0x376bcc7395b9 <JSFunction socketOnWrap (sfi = 0x376bbd13f7a9)> @20 => node=259, pc=0x173e474bd9c0, caller sp=0x7fff5fbf5dd8, state=TOS_REGISTER, took 8.609 ms]
[removing optimized code for: 0x376bcc7395b9 <JSFunction socketOnWrap (sfi = 0x376bbd13f7a9)>]
[deoptimizing (DEOPT eager): begin 0x376be7d848c9 <JSFunction endReadableNT (sfi = 0x376b2a965f91)> (opt #48) @3, FP to SP delta: 56, caller sp: 0x7fff5fbf5f58]
            ;;; deoptimize at <_stream_readable.js:1100:21>, wrong map
  reading input frame endReadableNT => bytecode_offset=25, args=3, height=4; inputs:
      0: 0x376be7d848c9 ; [fp - 16] 0x376be7d848c9 <JSFunction endReadableNT (sfi = 0x376b2a965f91)>
      1: 0x376b90f022d1 ; [fp + 32] 0x376b90f022d1 <undefined>
      2: 0x376b03409aa1 ; rdi 0x376b03409aa1 <ReadableState map = 0x376b6a3c3021>
      3: 0x376b03409499 ; r8 0x376b03409499 <Socket map = 0x376b00fb28d1>
      4: 0x376b9ea91041 ; [fp - 8] 0x376b9ea91041 <FixedArray[39]>
      5: 0x376b90f02569 ; (literal 2) 0x376b90f02569 <Odd Oddball: optimized_out>
      6: 0x376b90f02569 ; (literal 2) 0x376b90f02569 <Odd Oddball: optimized_out>
      7: 0x376b90f02569 ; (literal 2) 0x376b90f02569 <Odd Oddball: optimized_out>
      8: 0x376b90f023e1 ; (literal 3) 0x376b90f023e1 <false>
  translating interpreted frame endReadableNT => bytecode_offset=25, height=32
    0x7fff5fbf5f50: [top + 96] <- 0x376b90f022d1 ;  0x376b90f022d1 <undefined>  (input #1)
    0x7fff5fbf5f48: [top + 88] <- 0x376b03409aa1 ;  0x376b03409aa1 <ReadableState map = 0x376b6a3c3021>  (input #2)
    0x7fff5fbf5f40: [top + 80] <- 0x376b03409499 ;  0x376b03409499 <Socket map = 0x376b00fb28d1>  (input #3)
    -------------------------
    0x7fff5fbf5f38: [top + 72] <- 0x173e4759254a ;  caller's pc
    0x7fff5fbf5f30: [top + 64] <- 0x7fff5fbf5f98 ;  caller's fp
    0x7fff5fbf5f28: [top + 56] <- 0x376b9ea91041 ;  context    0x376b9ea91041 <FixedArray[39]>  (input #4)
    0x7fff5fbf5f20: [top + 48] <- 0x376be7d848c9 ;  function    0x376be7d848c9 <JSFunction endReadableNT (sfi = 0x376b2a965f91)>  (input #0)
    0x7fff5fbf5f18: [top + 40] <- 0x376bae33ef79 ;  bytecode array 0x376bae33ef79 <BytecodeArray[46]>  (input #0)
    0x7fff5fbf5f10: [top + 32] <- 0x5200000000 ;  bytecode offset @ 25
  (input #0)
    -------------------------
    0x7fff5fbf5f08: [top + 24] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf5f00: [top + 16] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf5ef8: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5ef0: [top + 0] <- 0x376b90f023e1 ;  accumulator 0x376b90f023e1 <false>  (input #8)
[deoptimizing (eager): end 0x376be7d848c9 <JSFunction endReadableNT (sfi = 0x376b2a965f91)> @3 => node=25, pc=0x173e474bd9c0, caller sp=0x7fff5fbf5f58, state=TOS_REGISTER, took 1.863 ms]
[removing optimized code for: 0x376be7d848c9 <JSFunction endReadableNT (sfi = 0x376b2a965f91)>]
[deoptimizing (DEOPT eager): begin 0x376b7fbbce01 <JSFunction emit (sfi = 0x376b7fbbb859)> (opt #123) @16, FP to SP delta: 56, caller sp: 0x7fff5fbf5ef8]
            ;;; deoptimize at <events.js:163:23>, wrong map
  reading input frame emit => bytecode_offset=300, args=2, height=20; inputs:
      0: 0x376b7fbbce01 ; [fp - 16] 0x376b7fbbce01 <JSFunction emit (sfi = 0x376b7fbbb859)>
      1: 0x376b03409499 ; [fp + 24] 0x376b03409499 <Socket map = 0x376b00fb28d1>
      2: 0x376b7fbb6849 ; [fp + 16] 0x376b7fbb6849 <String[3]: end>
      3: 0x376bb4916681 ; [fp - 8] 0x376bb4916681 <FixedArray[19]>
      4: 0x300000000 ; [fp - 40] 3
      5: 0x376bd2ed8719 ; rdx 0x376bd2ed8719 <JSArray[3]>
      6: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
      7: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
      8: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
      9: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     10: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     11: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     12: 0x376b90f02201 ; [fp - 32] 0x376b90f02201 <null>
     13: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     14: 0x376b90f023e1 ; (literal 4) 0x376b90f023e1 <false>
     15: 0x00000000 ; (literal 6) 0
     16: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     17: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     18: captured object #0 (length = 4)
           0x376b6a382991 ; (literal 2) 0x376b6a382991 <Map(PACKED_ELEMENTS)>
           0x376b90f02241 ; (literal 3) 0x376b90f02241 <FixedArray[0]>
           arguments elements object #1 (is_rest = 1, length = 0)
           arguments length field (is_rest = 1, length = 0)
     19: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     20: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     21: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     22: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     23: 0x300000000 ; [fp - 40] 3
  translating interpreted frame emit => bytecode_offset=300, height=160
    0x7fff5fbf5ef0: [top + 216] <- 0x376b03409499 ;  0x376b03409499 <Socket map = 0x376b00fb28d1>  (input #1)
    0x7fff5fbf5ee8: [top + 208] <- 0x376b7fbb6849 ;  0x376b7fbb6849 <String[3]: end>  (input #2)
    -------------------------
    0x7fff5fbf5ee0: [top + 200] <- 0x173e474bd196 ;  caller's pc
    0x7fff5fbf5ed8: [top + 192] <- 0x7fff5fbf5f30 ;  caller's fp
    0x7fff5fbf5ed0: [top + 184] <- 0x376bb4916681 ;  context    0x376bb4916681 <FixedArray[19]>  (input #3)
    0x7fff5fbf5ec8: [top + 176] <- 0x376b7fbbce01 ;  function    0x376b7fbbce01 <JSFunction emit (sfi = 0x376b7fbbb859)>  (input #0)
    0x7fff5fbf5ec0: [top + 168] <- 0x376b2a915cf9 ;  bytecode array 0x376b2a915cf9 <BytecodeArray[350]>  (input #0)
    0x7fff5fbf5eb8: [top + 160] <- 0x16500000000 ;  bytecode offset @ 300
  (input #0)
    -------------------------
    0x7fff5fbf5eb0: [top + 152] <- 0x300000000 ;  3  (input #4)
    0x7fff5fbf5ea8: [top + 144] <- 0x376bd2ed8719 ;  0x376bd2ed8719 <JSArray[3]>  (input #5)
    0x7fff5fbf5ea0: [top + 136] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf5e98: [top + 128] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5e90: [top + 120] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5e88: [top + 112] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5e80: [top + 104] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf5e78: [top + 96] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf5e70: [top + 88] <- 0x376b90f02201 ;  0x376b90f02201 <null>  (input #12)
    0x7fff5fbf5e68: [top + 80] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf5e60: [top + 72] <- 0x376b90f023e1 ;  0x376b90f023e1 <false>  (input #14)
    0x7fff5fbf5e58: [top + 64] <- 0x00000000 ;  0  (input #15)
    0x7fff5fbf5e50: [top + 56] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #16)
    0x7fff5fbf5e48: [top + 48] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #17)
    0x7fff5fbf5e40: [top + 40] <- 0x376b90f02459 ;  0x376b90f02459 <Odd Oddball: arguments_marker>  (input #18)
    0x7fff5fbf5e38: [top + 32] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #19)
    0x7fff5fbf5e30: [top + 24] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #20)
    0x7fff5fbf5e28: [top + 16] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #21)
    0x7fff5fbf5e20: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #22)
    0x7fff5fbf5e18: [top + 0] <- 0x300000000 ;  accumulator 3  (input #23)
[deoptimizing (eager): end 0x376b7fbbce01 <JSFunction emit (sfi = 0x376b7fbbb859)> @16 => node=300, pc=0x173e474bd9c0, caller sp=0x7fff5fbf5ef8, state=TOS_REGISTER, took 3.020 ms]
Materialization [0x7fff5fbf5e40] <- 0x376bd2ed8761 ;  0x376bd2ed8761 <JSArray[0]>
[removing optimized code for: 0x376b7fbbce01 <JSFunction emit (sfi = 0x376b7fbbb859)>]
[deoptimizing (DEOPT soft): begin 0x376b7fbbcf69 <JSFunction removeListener (sfi = 0x376b7fbbbba1)> (opt #21) @10, FP to SP delta: 56, caller sp: 0x7fff5fbf5db8]
            ;;; deoptimize at <events.js:318:43>, Insufficient type feedback for generic keyed access
  reading input frame removeListener => bytecode_offset=209, args=3, height=13; inputs:
      0: 0x376b7fbbcf69 ; [fp - 16] 0x376b7fbbcf69 <JSFunction removeListener (sfi = 0x376b7fbbbba1)>
      1: 0x376b03409499 ; [fp + 32] 0x376b03409499 <Socket map = 0x376b00fb28d1>
      2: 0x376b7fbb6849 ; [fp + 24] 0x376b7fbb6849 <String[3]: end>
      3: 0x376b03414041 ; [fp + 16] 0x376b03414041 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>
      4: 0x376bb4916681 ; [fp - 8] 0x376bb4916681 <FixedArray[19]>
      5: 0x376b90f02569 ; (literal 2) 0x376b90f02569 <Odd Oddball: optimized_out>
      6: 0x376b0340eb71 ; rbx 0x376b0340eb71 <JSArray[3]>
      7: 0x376b03409b61 ; [fp - 32] 0x376b03409b61 <Object map = 0x376b6a3866c1>
      8: 0xffffffff00000000 ; (literal 4) -1
      9: 2 ; rdx 
     10: 0x376b90f022d1 ; (literal 3) 0x376b90f022d1 <undefined>
     11: 0x376b90f02569 ; (literal 2) 0x376b90f02569 <Odd Oddball: optimized_out>
     12: 0x376bd2ed8551 ; rax 0x376bd2ed8551 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>
     13: 0x376b90f02569 ; (literal 2) 0x376b90f02569 <Odd Oddball: optimized_out>
     14: 0x376b90f02569 ; (literal 2) 0x376b90f02569 <Odd Oddball: optimized_out>
     15: 0x376b90f02569 ; (literal 2) 0x376b90f02569 <Odd Oddball: optimized_out>
     16: 0x376b90f02569 ; (literal 2) 0x376b90f02569 <Odd Oddball: optimized_out>
     17: 0x376b03414041 ; [fp + 16] 0x376b03414041 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>
  translating interpreted frame removeListener => bytecode_offset=209, height=104
    0x7fff5fbf5db0: [top + 168] <- 0x376b03409499 ;  0x376b03409499 <Socket map = 0x376b00fb28d1>  (input #1)
    0x7fff5fbf5da8: [top + 160] <- 0x376b7fbb6849 ;  0x376b7fbb6849 <String[3]: end>  (input #2)
    0x7fff5fbf5da0: [top + 152] <- 0x376b03414041 ;  0x376b03414041 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>  (input #3)
    -------------------------
    0x7fff5fbf5d98: [top + 144] <- 0x173e474bd196 ;  caller's pc
    0x7fff5fbf5d90: [top + 136] <- 0x7fff5fbf5e08 ;  caller's fp
    0x7fff5fbf5d88: [top + 128] <- 0x376bb4916681 ;  context    0x376bb4916681 <FixedArray[19]>  (input #4)
    0x7fff5fbf5d80: [top + 120] <- 0x376b7fbbcf69 ;  function    0x376b7fbbcf69 <JSFunction removeListener (sfi = 0x376b7fbbbba1)>  (input #0)
    0x7fff5fbf5d78: [top + 112] <- 0x376bd5863811 ;  bytecode array 0x376bd5863811 <BytecodeArray[382]>  (input #0)
    0x7fff5fbf5d70: [top + 104] <- 0x10a00000000 ;  bytecode offset @ 209
  (input #0)
    -------------------------
    0x7fff5fbf5d68: [top + 96] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf5d60: [top + 88] <- 0x376b0340eb71 ;  0x376b0340eb71 <JSArray[3]>  (input #6)
    0x7fff5fbf5d58: [top + 80] <- 0x376b03409b61 ;  0x376b03409b61 <Object map = 0x376b6a3866c1>  (input #7)
    0x7fff5fbf5d50: [top + 72] <- 0xffffffff00000000 ;  -1  (input #8)
    0x7fff5fbf5d48: [top + 64] <- 0x200000000 ;  2  (input #9)
    0x7fff5fbf5d40: [top + 56] <- 0x376b90f022d1 ;  0x376b90f022d1 <undefined>  (input #10)
    0x7fff5fbf5d38: [top + 48] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf5d30: [top + 40] <- 0x376bd2ed8551 ;  0x376bd2ed8551 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>  (input #12)
    0x7fff5fbf5d28: [top + 32] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf5d20: [top + 24] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #14)
    0x7fff5fbf5d18: [top + 16] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #15)
    0x7fff5fbf5d10: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #16)
    0x7fff5fbf5d08: [top + 0] <- 0x376b03414041 ;  accumulator 0x376b03414041 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>  (input #17)
[deoptimizing (soft): end 0x376b7fbbcf69 <JSFunction removeListener (sfi = 0x376b7fbbbba1)> @10 => node=209, pc=0x173e474bd9c0, caller sp=0x7fff5fbf5db8, state=TOS_REGISTER, took 3.331 ms]
[removing optimized code for: 0x376b7fbbcf69 <JSFunction removeListener (sfi = 0x376b7fbbbba1)>]
[deoptimizing (DEOPT soft): begin 0x376b9ea99721 <JSFunction get (sfi = 0x376b2a96e671)> (opt #26) @1, FP to SP delta: 16, caller sp: 0x7fff5fbf5c40]
            ;;; deoptimize at <_stream_duplex.js:123:50>, Insufficient type feedback for generic named access
  reading input frame get => bytecode_offset=27, args=1, height=2; inputs:
      0: 0x376b9ea99721 ; [fp - 16] 0x376b9ea99721 <JSFunction get (sfi = 0x376b2a96e671)>
      1: 0x376b03409499 ; rax 0x376b03409499 <Socket map = 0x376b00fb28d1>
      2: 0x376b9ea997b1 ; [fp - 8] 0x376b9ea997b1 <FixedArray[9]>
      3: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
      4: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
  translating interpreted frame get => bytecode_offset=27, height=16
    0x7fff5fbf5c38: [top + 64] <- 0x376b03409499 ;  0x376b03409499 <Socket map = 0x376b00fb28d1>  (input #1)
    -------------------------
    0x7fff5fbf5c30: [top + 56] <- 0x173e474cf3a4 ;  caller's pc
    0x7fff5fbf5c28: [top + 48] <- 0x7fff5fbf5c80 ;  caller's fp
    0x7fff5fbf5c20: [top + 40] <- 0x376b9ea997b1 ;  context    0x376b9ea997b1 <FixedArray[9]>  (input #2)
    0x7fff5fbf5c18: [top + 32] <- 0x376b9ea99721 ;  function    0x376b9ea99721 <JSFunction get (sfi = 0x376b2a96e671)>  (input #0)
    0x7fff5fbf5c10: [top + 24] <- 0x376bae335209 ;  bytecode array 0x376bae335209 <BytecodeArray[38]>  (input #0)
    0x7fff5fbf5c08: [top + 16] <- 0x5400000000 ;  bytecode offset @ 27
  (input #0)
    -------------------------
    0x7fff5fbf5c00: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #3)
    0x7fff5fbf5bf8: [top + 0] <- 0x376b90f02569 ;  accumulator 0x376b90f02569 <Odd Oddball: optimized_out>  (input #4)
[deoptimizing (soft): end 0x376b9ea99721 <JSFunction get (sfi = 0x376b2a96e671)> @1 => node=27, pc=0x173e474bd9c0, caller sp=0x7fff5fbf5c40, state=TOS_REGISTER, took 0.956 ms]
[removing optimized code for: 0x376b9ea99721 <JSFunction get (sfi = 0x376b2a96e671)>]
[deoptimizing (DEOPT soft): begin 0x376b2a969ef1 <JSFunction Readable.on (sfi = 0x376b2a966771)> (opt #33) @16, FP to SP delta: 40, caller sp: 0x7fff5fbf5ce0]
            ;;; deoptimize at <events.js:215:16> inlined at <events.js:241:10> inlined at <_stream_readable.js:779:35>, Insufficient type feedback for generic named access
  reading input frame Readable.on => bytecode_offset=34, args=3, height=8; inputs:
      0: 0x376b2a969ef1 ; [fp - 16] 0x376b2a969ef1 <JSFunction Readable.on (sfi = 0x376b2a966771)>
      1: 0x376b0340ee01 ; [fp + 32] 0x376b0340ee01 <Socket map = 0x376b00fb28d1>
      2: 0x376b7fbb6849 ; [fp + 24] 0x376b7fbb6849 <String[3]: end>
      3: 0x376bd2ee67f9 ; [fp + 16] 0x376bd2ee67f9 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>
      4: 0x376b9ea91041 ; [fp - 8] 0x376b9ea91041 <FixedArray[39]>
      5: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
      6: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
      7: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
      8: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
      9: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
     10: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
     11: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
     12: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
  reading input frame addListener => bytecode_offset=20, args=3, height=7; inputs:
      0: 0x376b7fbbce49 ; (literal 6) 0x376b7fbbce49 <JSFunction addListener (sfi = 0x376b7fbbb901)>
      1: 0x376b0340ee01 ; [fp + 32] 0x376b0340ee01 <Socket map = 0x376b00fb28d1>
      2: 0x376b7fbb6849 ; [fp + 24] 0x376b7fbb6849 <String[3]: end>
      3: 0x376bd2ee67f9 ; [fp + 16] 0x376bd2ee67f9 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>
      4: 0x376bb4916681 ; (literal 7) 0x376bb4916681 <FixedArray[19]>
      5: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
      6: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
      7: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
      8: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
      9: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
     10: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
     11: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
  reading input frame _addListener => bytecode_offset=259, args=5, height=11; inputs:
      0: 0x376bb494a489 ; (literal 8) 0x376bb494a489 <JSFunction _addListener (sfi = 0x376b7fbbb079)>
      1: 0x376b90f022d1 ; (literal 9) 0x376b90f022d1 <undefined>
      2: 0x376b0340ee01 ; [fp + 32] 0x376b0340ee01 <Socket map = 0x376b00fb28d1>
      3: 0x376b7fbb6849 ; [fp + 24] 0x376b7fbb6849 <String[3]: end>
      4: 0x376bd2ee67f9 ; [fp + 16] 0x376bd2ee67f9 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>
      5: 0x376b90f023e1 ; (literal 10) 0x376b90f023e1 <false>
      6: 0x376bb4916681 ; (literal 7) 0x376bb4916681 <FixedArray[19]>
      7: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
      8: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
      9: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
     10: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
     11: 0x376b034186b1 ; rax 0x376b034186b1 <JSArray[2]>
     12: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
     13: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
     14: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
     15: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
     16: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
     17: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
  translating interpreted frame Readable.on => bytecode_offset=34, height=56
    0x7fff5fbf5cd8: [top + 120] <- 0x376b0340ee01 ;  0x376b0340ee01 <Socket map = 0x376b00fb28d1>  (input #1)
    0x7fff5fbf5cd0: [top + 112] <- 0x376b7fbb6849 ;  0x376b7fbb6849 <String[3]: end>  (input #2)
    0x7fff5fbf5cc8: [top + 104] <- 0x376bd2ee67f9 ;  0x376bd2ee67f9 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>  (input #3)
    -------------------------
    0x7fff5fbf5cc0: [top + 96] <- 0x173e474bd196 ;  caller's pc
    0x7fff5fbf5cb8: [top + 88] <- 0x7fff5fbf5d30 ;  caller's fp
    0x7fff5fbf5cb0: [top + 80] <- 0x376b9ea91041 ;  context    0x376b9ea91041 <FixedArray[39]>  (input #4)
    0x7fff5fbf5ca8: [top + 72] <- 0x376b2a969ef1 ;  function    0x376b2a969ef1 <JSFunction Readable.on (sfi = 0x376b2a966771)>  (input #0)
    0x7fff5fbf5ca0: [top + 64] <- 0x376bea9e8dc9 ;  bytecode array 0x376bea9e8dc9 <BytecodeArray[163]>  (input #0)
    0x7fff5fbf5c98: [top + 56] <- 0x5b00000000 ;  bytecode offset @ 34
  (input #0)
    -------------------------
    0x7fff5fbf5c90: [top + 48] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf5c88: [top + 40] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf5c80: [top + 32] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5c78: [top + 24] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5c70: [top + 16] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5c68: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf5c60: [top + 0] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #11)
  translating interpreted frame addListener => bytecode_offset=20, height=48
    0x7fff5fbf5c58: [top + 112] <- 0x376b0340ee01 ;  0x376b0340ee01 <Socket map = 0x376b00fb28d1>  (input #1)
    0x7fff5fbf5c50: [top + 104] <- 0x376b7fbb6849 ;  0x376b7fbb6849 <String[3]: end>  (input #2)
    0x7fff5fbf5c48: [top + 96] <- 0x376bd2ee67f9 ;  0x376bd2ee67f9 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>  (input #3)
    -------------------------
    0x7fff5fbf5c40: [top + 88] <- 0x173e474bd8c0 ;  caller's pc
    0x7fff5fbf5c38: [top + 80] <- 0x7fff5fbf5cb8 ;  caller's fp
    0x7fff5fbf5c30: [top + 72] <- 0x376bb4916681 ;  context    0x376bb4916681 <FixedArray[19]>  (input #4)
    0x7fff5fbf5c28: [top + 64] <- 0x376b7fbbce49 ;  function    0x376b7fbbce49 <JSFunction addListener (sfi = 0x376b7fbbb901)>  (input #0)
    0x7fff5fbf5c20: [top + 56] <- 0x376b2a915171 ;  bytecode array 0x376b2a915171 <BytecodeArray[26]>  (input #0)
    0x7fff5fbf5c18: [top + 48] <- 0x4d00000000 ;  bytecode offset @ 20
  (input #0)
    -------------------------
    0x7fff5fbf5c10: [top + 40] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf5c08: [top + 32] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf5c00: [top + 24] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5bf8: [top + 16] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5bf0: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5be8: [top + 0] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #10)
  translating interpreted frame _addListener => bytecode_offset=259, height=88
    0x7fff5fbf5be0: [top + 168] <- 0x376b90f022d1 ;  0x376b90f022d1 <undefined>  (input #1)
    0x7fff5fbf5bd8: [top + 160] <- 0x376b0340ee01 ;  0x376b0340ee01 <Socket map = 0x376b00fb28d1>  (input #2)
    0x7fff5fbf5bd0: [top + 152] <- 0x376b7fbb6849 ;  0x376b7fbb6849 <String[3]: end>  (input #3)
    0x7fff5fbf5bc8: [top + 144] <- 0x376bd2ee67f9 ;  0x376bd2ee67f9 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>  (input #4)
    0x7fff5fbf5bc0: [top + 136] <- 0x376b90f023e1 ;  0x376b90f023e1 <false>  (input #5)
    -------------------------
    0x7fff5fbf5bb8: [top + 128] <- 0x173e474bd8c0 ;  caller's pc
    0x7fff5fbf5bb0: [top + 120] <- 0x7fff5fbf5c38 ;  caller's fp
    0x7fff5fbf5ba8: [top + 112] <- 0x376bb4916681 ;  context    0x376bb4916681 <FixedArray[19]>  (input #6)
    0x7fff5fbf5ba0: [top + 104] <- 0x376bb494a489 ;  function    0x376bb494a489 <JSFunction _addListener (sfi = 0x376b7fbbb079)>  (input #0)
    0x7fff5fbf5b98: [top + 96] <- 0x376b2a915519 ;  bytecode array 0x376b2a915519 <BytecodeArray[445]>  (input #0)
    0x7fff5fbf5b90: [top + 88] <- 0x13c00000000 ;  bytecode offset @ 259
  (input #0)
    -------------------------
    0x7fff5fbf5b88: [top + 80] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5b80: [top + 72] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5b78: [top + 64] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5b70: [top + 56] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf5b68: [top + 48] <- 0x376b034186b1 ;  0x376b034186b1 <JSArray[2]>  (input #11)
    0x7fff5fbf5b60: [top + 40] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #12)
    0x7fff5fbf5b58: [top + 32] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf5b50: [top + 24] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #14)
    0x7fff5fbf5b48: [top + 16] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #15)
    0x7fff5fbf5b40: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #16)
    0x7fff5fbf5b38: [top + 0] <- 0x376b90f02569 ;  accumulator 0x376b90f02569 <Odd Oddball: optimized_out>  (input #17)
[deoptimizing (soft): end 0x376b2a969ef1 <JSFunction Readable.on (sfi = 0x376b2a966771)> @16 => node=259, pc=0x173e474bd9c0, caller sp=0x7fff5fbf5ce0, state=TOS_REGISTER, took 7.061 ms]
[removing optimized code for: 0x376b2a969ef1 <JSFunction Readable.on (sfi = 0x376b2a966771)>]
[deoptimizing (DEOPT soft): begin 0x376b7fbbce49 <JSFunction addListener (sfi = 0x376b7fbbb901)> (opt #7) @15, FP to SP delta: 40, caller sp: 0x7fff5fbf5c60]
            ;;; deoptimize at <events.js:215:16> inlined at <events.js:241:10>, Insufficient type feedback for generic named access
  reading input frame addListener => bytecode_offset=20, args=3, height=7; inputs:
      0: 0x376b7fbbce49 ; [fp - 16] 0x376b7fbbce49 <JSFunction addListener (sfi = 0x376b7fbbb901)>
      1: 0x376b03414381 ; [fp + 32] 0x376b03414381 <Socket map = 0x376b00fb28d1>
      2: 0x376b7fbb6849 ; [fp + 24] 0x376b7fbb6849 <String[3]: end>
      3: 0x376bd2eedcc9 ; [fp + 16] 0x376bd2eedcc9 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>
      4: 0x376bb4916681 ; [fp - 8] 0x376bb4916681 <FixedArray[19]>
      5: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
      6: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
      7: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
      8: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
      9: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
     10: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
     11: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
  reading input frame _addListener => bytecode_offset=259, args=5, height=11; inputs:
      0: 0x376bb494a489 ; (literal 5) 0x376bb494a489 <JSFunction _addListener (sfi = 0x376b7fbbb079)>
      1: 0x376b90f022d1 ; (literal 6) 0x376b90f022d1 <undefined>
      2: 0x376b03414381 ; [fp + 32] 0x376b03414381 <Socket map = 0x376b00fb28d1>
      3: 0x376b7fbb6849 ; [fp + 24] 0x376b7fbb6849 <String[3]: end>
      4: 0x376bd2eedcc9 ; [fp + 16] 0x376bd2eedcc9 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>
      5: 0x376b90f023e1 ; (literal 7) 0x376b90f023e1 <false>
      6: 0x376bb4916681 ; (literal 8) 0x376bb4916681 <FixedArray[19]>
      7: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
      8: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
      9: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
     10: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
     11: 0x376b0341d061 ; rax 0x376b0341d061 <JSArray[2]>
     12: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
     13: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
     14: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
     15: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
     16: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
     17: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
  translating interpreted frame addListener => bytecode_offset=20, height=48
    0x7fff5fbf5c58: [top + 112] <- 0x376b03414381 ;  0x376b03414381 <Socket map = 0x376b00fb28d1>  (input #1)
    0x7fff5fbf5c50: [top + 104] <- 0x376b7fbb6849 ;  0x376b7fbb6849 <String[3]: end>  (input #2)
    0x7fff5fbf5c48: [top + 96] <- 0x376bd2eedcc9 ;  0x376bd2eedcc9 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>  (input #3)
    -------------------------
    0x7fff5fbf5c40: [top + 88] <- 0x173e474bd196 ;  caller's pc
    0x7fff5fbf5c38: [top + 80] <- 0x7fff5fbf5cb8 ;  caller's fp
    0x7fff5fbf5c30: [top + 72] <- 0x376bb4916681 ;  context    0x376bb4916681 <FixedArray[19]>  (input #4)
    0x7fff5fbf5c28: [top + 64] <- 0x376b7fbbce49 ;  function    0x376b7fbbce49 <JSFunction addListener (sfi = 0x376b7fbbb901)>  (input #0)
    0x7fff5fbf5c20: [top + 56] <- 0x376b2a915171 ;  bytecode array 0x376b2a915171 <BytecodeArray[26]>  (input #0)
    0x7fff5fbf5c18: [top + 48] <- 0x4d00000000 ;  bytecode offset @ 20
  (input #0)
    -------------------------
    0x7fff5fbf5c10: [top + 40] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf5c08: [top + 32] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf5c00: [top + 24] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5bf8: [top + 16] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5bf0: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5be8: [top + 0] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #10)
  translating interpreted frame _addListener => bytecode_offset=259, height=88
    0x7fff5fbf5be0: [top + 168] <- 0x376b90f022d1 ;  0x376b90f022d1 <undefined>  (input #1)
    0x7fff5fbf5bd8: [top + 160] <- 0x376b03414381 ;  0x376b03414381 <Socket map = 0x376b00fb28d1>  (input #2)
    0x7fff5fbf5bd0: [top + 152] <- 0x376b7fbb6849 ;  0x376b7fbb6849 <String[3]: end>  (input #3)
    0x7fff5fbf5bc8: [top + 144] <- 0x376bd2eedcc9 ;  0x376bd2eedcc9 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>  (input #4)
    0x7fff5fbf5bc0: [top + 136] <- 0x376b90f023e1 ;  0x376b90f023e1 <false>  (input #5)
    -------------------------
    0x7fff5fbf5bb8: [top + 128] <- 0x173e474bd8c0 ;  caller's pc
    0x7fff5fbf5bb0: [top + 120] <- 0x7fff5fbf5c38 ;  caller's fp
    0x7fff5fbf5ba8: [top + 112] <- 0x376bb4916681 ;  context    0x376bb4916681 <FixedArray[19]>  (input #6)
    0x7fff5fbf5ba0: [top + 104] <- 0x376bb494a489 ;  function    0x376bb494a489 <JSFunction _addListener (sfi = 0x376b7fbbb079)>  (input #0)
    0x7fff5fbf5b98: [top + 96] <- 0x376b2a915519 ;  bytecode array 0x376b2a915519 <BytecodeArray[445]>  (input #0)
    0x7fff5fbf5b90: [top + 88] <- 0x13c00000000 ;  bytecode offset @ 259
  (input #0)
    -------------------------
    0x7fff5fbf5b88: [top + 80] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5b80: [top + 72] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5b78: [top + 64] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5b70: [top + 56] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf5b68: [top + 48] <- 0x376b0341d061 ;  0x376b0341d061 <JSArray[2]>  (input #11)
    0x7fff5fbf5b60: [top + 40] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #12)
    0x7fff5fbf5b58: [top + 32] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf5b50: [top + 24] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #14)
    0x7fff5fbf5b48: [top + 16] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #15)
    0x7fff5fbf5b40: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #16)
    0x7fff5fbf5b38: [top + 0] <- 0x376b90f02569 ;  accumulator 0x376b90f02569 <Odd Oddball: optimized_out>  (input #17)
[deoptimizing (soft): end 0x376b7fbbce49 <JSFunction addListener (sfi = 0x376b7fbbb901)> @15 => node=259, pc=0x173e474bd9c0, caller sp=0x7fff5fbf5c60, state=TOS_REGISTER, took 5.966 ms]
[removing optimized code for: 0x376b7fbbce49 <JSFunction addListener (sfi = 0x376b7fbbb901)>]
[deoptimizing (DEOPT soft): begin 0x376bb494a489 <JSFunction _addListener (sfi = 0x376b7fbbb079)> (opt #103) @8, FP to SP delta: 40, caller sp: 0x7fff5fbf5be8]
            ;;; deoptimize at <events.js:215:16>, Insufficient type feedback for generic named access
  reading input frame _addListener => bytecode_offset=259, args=5, height=11; inputs:
      0: 0x376bb494a489 ; [fp - 16] 0x376bb494a489 <JSFunction _addListener (sfi = 0x376b7fbbb079)>
      1: 0x376b90f022d1 ; [fp + 48] 0x376b90f022d1 <undefined>
      2: 0x376b034191f9 ; [fp + 40] 0x376b034191f9 <Socket map = 0x376b00fb28d1>
      3: 0x376b7fbb6849 ; [fp + 32] 0x376b7fbb6849 <String[3]: end>
      4: 0x376bd2ef5029 ; [fp + 24] 0x376bd2ef5029 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>
      5: 0x376b90f023e1 ; r8 0x376b90f023e1 <false>
      6: 0x376bb4916681 ; [fp - 8] 0x376bb4916681 <FixedArray[19]>
      7: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
      8: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
      9: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     10: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     11: 0x376b034211a1 ; rdx 0x376b034211a1 <JSArray[2]>
     12: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     13: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     14: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     15: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     16: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
     17: 0x376b90f02569 ; (literal 1) 0x376b90f02569 <Odd Oddball: optimized_out>
  translating interpreted frame _addListener => bytecode_offset=259, height=88
    0x7fff5fbf5be0: [top + 168] <- 0x376b90f022d1 ;  0x376b90f022d1 <undefined>  (input #1)
    0x7fff5fbf5bd8: [top + 160] <- 0x376b034191f9 ;  0x376b034191f9 <Socket map = 0x376b00fb28d1>  (input #2)
    0x7fff5fbf5bd0: [top + 152] <- 0x376b7fbb6849 ;  0x376b7fbb6849 <String[3]: end>  (input #3)
    0x7fff5fbf5bc8: [top + 144] <- 0x376bd2ef5029 ;  0x376bd2ef5029 <JSBoundFunction (BoundTargetFunction 0x376bea9a9e59)>  (input #4)
    0x7fff5fbf5bc0: [top + 136] <- 0x376b90f023e1 ;  0x376b90f023e1 <false>  (input #5)
    -------------------------
    0x7fff5fbf5bb8: [top + 128] <- 0x173e474bd196 ;  caller's pc
    0x7fff5fbf5bb0: [top + 120] <- 0x7fff5fbf5c38 ;  caller's fp
    0x7fff5fbf5ba8: [top + 112] <- 0x376bb4916681 ;  context    0x376bb4916681 <FixedArray[19]>  (input #6)
    0x7fff5fbf5ba0: [top + 104] <- 0x376bb494a489 ;  function    0x376bb494a489 <JSFunction _addListener (sfi = 0x376b7fbbb079)>  (input #0)
    0x7fff5fbf5b98: [top + 96] <- 0x376b2a915519 ;  bytecode array 0x376b2a915519 <BytecodeArray[445]>  (input #0)
    0x7fff5fbf5b90: [top + 88] <- 0x13c00000000 ;  bytecode offset @ 259
  (input #0)
    -------------------------
    0x7fff5fbf5b88: [top + 80] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5b80: [top + 72] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5b78: [top + 64] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5b70: [top + 56] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf5b68: [top + 48] <- 0x376b034211a1 ;  0x376b034211a1 <JSArray[2]>  (input #11)
    0x7fff5fbf5b60: [top + 40] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #12)
    0x7fff5fbf5b58: [top + 32] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf5b50: [top + 24] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #14)
    0x7fff5fbf5b48: [top + 16] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #15)
    0x7fff5fbf5b40: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #16)
    0x7fff5fbf5b38: [top + 0] <- 0x376b90f02569 ;  accumulator 0x376b90f02569 <Odd Oddball: optimized_out>  (input #17)
[deoptimizing (soft): end 0x376bb494a489 <JSFunction _addListener (sfi = 0x376b7fbbb079)> @8 => node=259, pc=0x173e474bd9c0, caller sp=0x7fff5fbf5be8, state=TOS_REGISTER, took 3.240 ms]
[removing optimized code for: 0x376bb494a489 <JSFunction _addListener (sfi = 0x376b7fbbb079)>]
[marking dependent code 0x173e475f2601 (opt #88) for deoptimization, reason: field-owner]
[deoptimize marked code in all contexts]
[deoptimizing (DEOPT eager): begin 0x376b2a96dc11 <JSFunction Writable.write (sfi = 0x376b2a96be19)> (opt #71) @20, FP to SP delta: 80, caller sp: 0x7fff5fbf57f8]
            ;;; deoptimize at <_stream_writable.js:265:20>, wrong map
  reading input frame Writable.write => bytecode_offset=0, args=4, height=11; inputs:
      0: 0x376b2a96dc11 ; [fp - 16] 0x376b2a96dc11 <JSFunction Writable.write (sfi = 0x376b2a96be19)>
      1: 0x376b9eaae4b1 ; [fp + 40] 0x376b9eaae4b1 <WriteStream map = 0x376b6a3c3c81>
      2: 0x376b1dec0f11 ; [fp + 32] 0x376b1dec0f11 <String[13]\: count 178262\n>
      3: 0x376b58f77211 ; [fp + 24] 0x376b58f77211 <JSFunction (sfi = 0x376bea9eb7b1)>
      4: 0x376b90f022d1 ; [fp + 16] 0x376b90f022d1 <undefined>
      5: 0x376b9ea97ac9 ; [fp - 8] 0x376b9ea97ac9 <FixedArray[28]>
      6: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
      7: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
      8: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
      9: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
     10: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
     11: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
     12: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
     13: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
     14: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
     15: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
     16: 0x376b90f02569 ; (literal 6) 0x376b90f02569 <Odd Oddball: optimized_out>
  translating interpreted frame Writable.write => bytecode_offset=0, height=88
    0x7fff5fbf57f0: [top + 160] <- 0x376b9eaae4b1 ;  0x376b9eaae4b1 <WriteStream map = 0x376b6a3c3c81>  (input #1)
    0x7fff5fbf57e8: [top + 152] <- 0x376b1dec0f11 ;  0x376b1dec0f11 <String[13]\: count 178262\n>  (input #2)
    0x7fff5fbf57e0: [top + 144] <- 0x376b58f77211 ;  0x376b58f77211 <JSFunction (sfi = 0x376bea9eb7b1)>  (input #3)
    0x7fff5fbf57d8: [top + 136] <- 0x376b90f022d1 ;  0x376b90f022d1 <undefined>  (input #4)
    -------------------------
    0x7fff5fbf57d0: [top + 128] <- 0x173e4740535f ;  caller's pc
    0x7fff5fbf57c8: [top + 120] <- 0x7fff5fbf5810 ;  caller's fp
    0x7fff5fbf57c0: [top + 112] <- 0x376b9ea97ac9 ;  context    0x376b9ea97ac9 <FixedArray[28]>  (input #5)
    0x7fff5fbf57b8: [top + 104] <- 0x376b2a96dc11 ;  function    0x376b2a96dc11 <JSFunction Writable.write (sfi = 0x376b2a96be19)>  (input #0)
    0x7fff5fbf57b0: [top + 96] <- 0x376bae335469 ;  bytecode array 0x376bae335469 <BytecodeArray[218]>  (input #0)
    0x7fff5fbf57a8: [top + 88] <- 0x3900000000 ;  bytecode offset @ 0
  (input #0)
    -------------------------
    0x7fff5fbf57a0: [top + 80] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf5798: [top + 72] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5790: [top + 64] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5788: [top + 56] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5780: [top + 48] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf5778: [top + 40] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf5770: [top + 32] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #12)
    0x7fff5fbf5768: [top + 24] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf5760: [top + 16] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #14)
    0x7fff5fbf5758: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #15)
    0x7fff5fbf5750: [top + 0] <- 0x376b90f02569 ;  accumulator 0x376b90f02569 <Odd Oddball: optimized_out>  (input #16)
[deoptimizing (eager): end 0x376b2a96dc11 <JSFunction Writable.write (sfi = 0x376b2a96be19)> @20 => node=0, pc=0x173e474bd9c0, caller sp=0x7fff5fbf57f8, state=TOS_REGISTER, took 3.838 ms]
[removing optimized code for: 0x376b2a96dc11 <JSFunction Writable.write (sfi = 0x376b2a96be19)>]
[deoptimizing (DEOPT eager): begin 0x376bea9dbdc1 <JSFunction Socket._writeGeneric (sfi = 0x376bea9c7341)> (opt #57) @61, FP to SP delta: 56, caller sp: 0x7fff5fbf5578]
            ;;; deoptimize at <net.js:711:12>, wrong map
  reading input frame Socket._writeGeneric => bytecode_offset=20, args=5, height=15; inputs:
      0: 0x376bea9dbdc1 ; [fp - 16] 0x376bea9dbdc1 <JSFunction Socket._writeGeneric (sfi = 0x376bea9c7341)>
      1: 0x376b9eaae4b1 ; [fp + 48] 0x376b9eaae4b1 <WriteStream map = 0x376b6a3c3c81>
      2: 0x376b90f023e1 ; [fp + 40] 0x376b90f023e1 <false>
      3: 0x376b1dec0f11 ; [fp + 32] 0x376b1dec0f11 <String[13]\: count 178262\n>
      4: 0x376b7fbb6809 ; [fp + 24] 0x376b7fbb6809 <String[4]: utf8>
      5: 0x376be7d85ed1 ; [fp + 16] 0x376be7d85ed1 <JSBoundFunction (BoundTargetFunction 0x376be7d83e69)>
      6: 0x376b1dec11c9 ; [fp - 24] 0x376b1dec11c9 <FixedArray[8]>
      7: 0x376b90f02569 ; (literal 9) 0x376b90f02569 <Odd Oddball: optimized_out>
      8: 0x376b90f02569 ; (literal 9) 0x376b90f02569 <Odd Oddball: optimized_out>
      9: 0x376b90f02569 ; (literal 9) 0x376b90f02569 <Odd Oddball: optimized_out>
     10: 0x376b90f02569 ; (literal 9) 0x376b90f02569 <Odd Oddball: optimized_out>
     11: 0x376b90f02569 ; (literal 9) 0x376b90f02569 <Odd Oddball: optimized_out>
     12: 0x376b90f02569 ; (literal 9) 0x376b90f02569 <Odd Oddball: optimized_out>
     13: 0x376b90f02569 ; (literal 9) 0x376b90f02569 <Odd Oddball: optimized_out>
     14: 0x376b58f51ef1 ; [fp - 8] 0x376b58f51ef1 <FixedArray[70]>
     15: 0x376b90f02569 ; (literal 9) 0x376b90f02569 <Odd Oddball: optimized_out>
     16: 0x376b90f02569 ; (literal 9) 0x376b90f02569 <Odd Oddball: optimized_out>
     17: 0x376b90f02569 ; (literal 9) 0x376b90f02569 <Odd Oddball: optimized_out>
     18: 0x376b90f02569 ; (literal 9) 0x376b90f02569 <Odd Oddball: optimized_out>
     19: 0x376b90f02569 ; (literal 9) 0x376b90f02569 <Odd Oddball: optimized_out>
     20: 0x376b90f02569 ; (literal 9) 0x376b90f02569 <Odd Oddball: optimized_out>
     21: 0x376b90f02569 ; (literal 9) 0x376b90f02569 <Odd Oddball: optimized_out>
  translating interpreted frame Socket._writeGeneric => bytecode_offset=20, height=120
    0x7fff5fbf5570: [top + 200] <- 0x376b9eaae4b1 ;  0x376b9eaae4b1 <WriteStream map = 0x376b6a3c3c81>  (input #1)
    0x7fff5fbf5568: [top + 192] <- 0x376b90f023e1 ;  0x376b90f023e1 <false>  (input #2)
    0x7fff5fbf5560: [top + 184] <- 0x376b1dec0f11 ;  0x376b1dec0f11 <String[13]\: count 178262\n>  (input #3)
    0x7fff5fbf5558: [top + 176] <- 0x376b7fbb6809 ;  0x376b7fbb6809 <String[4]: utf8>  (input #4)
    0x7fff5fbf5550: [top + 168] <- 0x376be7d85ed1 ;  0x376be7d85ed1 <JSBoundFunction (BoundTargetFunction 0x376be7d83e69)>  (input #5)
    -------------------------
    0x7fff5fbf5548: [top + 160] <- 0x173e474bd196 ;  caller's pc
    0x7fff5fbf5540: [top + 152] <- 0x7fff5fbf55c8 ;  caller's fp
    0x7fff5fbf5538: [top + 144] <- 0x376b1dec11c9 ;  context    0x376b1dec11c9 <FixedArray[8]>  (input #6)
    0x7fff5fbf5530: [top + 136] <- 0x376bea9dbdc1 ;  function    0x376bea9dbdc1 <JSFunction Socket._writeGeneric (sfi = 0x376bea9c7341)>  (input #0)
    0x7fff5fbf5528: [top + 128] <- 0x376bae33b3e1 ;  bytecode array 0x376bae33b3e1 <BytecodeArray[532]>  (input #0)
    0x7fff5fbf5520: [top + 120] <- 0x4d00000000 ;  bytecode offset @ 20
  (input #0)
    -------------------------
    0x7fff5fbf5518: [top + 112] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5510: [top + 104] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5508: [top + 96] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5500: [top + 88] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf54f8: [top + 80] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf54f0: [top + 72] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #12)
    0x7fff5fbf54e8: [top + 64] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf54e0: [top + 56] <- 0x376b58f51ef1 ;  0x376b58f51ef1 <FixedArray[70]>  (input #14)
    0x7fff5fbf54d8: [top + 48] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #15)
    0x7fff5fbf54d0: [top + 40] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #16)
    0x7fff5fbf54c8: [top + 32] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #17)
    0x7fff5fbf54c0: [top + 24] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #18)
    0x7fff5fbf54b8: [top + 16] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #19)
    0x7fff5fbf54b0: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #20)
    0x7fff5fbf54a8: [top + 0] <- 0x376b90f02569 ;  accumulator 0x376b90f02569 <Odd Oddball: optimized_out>  (input #21)
[deoptimizing (eager): end 0x376bea9dbdc1 <JSFunction Socket._writeGeneric (sfi = 0x376bea9c7341)> @61 => node=20, pc=0x173e474bd9c0, caller sp=0x7fff5fbf5578, state=TOS_REGISTER, took 4.095 ms]
[removing optimized code for: 0x376bea9dbdc1 <JSFunction Socket._writeGeneric (sfi = 0x376bea9c7341)>]
[deoptimizing (DEOPT eager): begin 0x376bea9db609 <JSFunction _unrefTimer (sfi = 0x376bea9c64d1)> (opt #40) @1, FP to SP delta: 40, caller sp: 0x7fff5fbf54b0]
            ;;; deoptimize at <timers.js:167:22> inlined at <timers.js:157:3> inlined at <net.js:274:12>, wrong map
  reading input frame _unrefTimer => bytecode_offset=13, args=1, height=5; inputs:
      0: 0x376bea9db609 ; [fp - 16] 0x376bea9db609 <JSFunction _unrefTimer (sfi = 0x376bea9c64d1)>
      1: 0x376b9eaae4b1 ; [fp + 16] 0x376b9eaae4b1 <WriteStream map = 0x376b6a3c3c81>
      2: 0x376b58f51ef1 ; [fp - 8] 0x376b58f51ef1 <FixedArray[70]>
      3: 0x376b9eaae4b1 ; rax 0x376b9eaae4b1 <WriteStream map = 0x376b6a3c3c81>
      4: 0x376b90f02569 ; (literal 7) 0x376b90f02569 <Odd Oddball: optimized_out>
      5: 0x376b90f02569 ; (literal 7) 0x376b90f02569 <Odd Oddball: optimized_out>
      6: 0x376b90f02569 ; (literal 7) 0x376b90f02569 <Odd Oddball: optimized_out>
      7: 0x376b90f02569 ; (literal 7) 0x376b90f02569 <Odd Oddball: optimized_out>
  translating interpreted frame _unrefTimer => bytecode_offset=13, height=40
    0x7fff5fbf54a8: [top + 88] <- 0x376b9eaae4b1 ;  0x376b9eaae4b1 <WriteStream map = 0x376b6a3c3c81>  (input #1)
    -------------------------
    0x7fff5fbf54a0: [top + 80] <- 0x173e474bd196 ;  caller's pc
    0x7fff5fbf5498: [top + 72] <- 0x7fff5fbf5540 ;  caller's fp
    0x7fff5fbf5490: [top + 64] <- 0x376b58f51ef1 ;  context    0x376b58f51ef1 <FixedArray[70]>  (input #2)
    0x7fff5fbf5488: [top + 56] <- 0x376bea9db609 ;  function    0x376bea9db609 <JSFunction _unrefTimer (sfi = 0x376bea9c64d1)>  (input #0)
    0x7fff5fbf5480: [top + 48] <- 0x376bae339711 ;  bytecode array 0x376bae339711 <BytecodeArray[42]>  (input #0)
    0x7fff5fbf5478: [top + 40] <- 0x4600000000 ;  bytecode offset @ 13
  (input #0)
    -------------------------
    0x7fff5fbf5470: [top + 32] <- 0x376b9eaae4b1 ;  0x376b9eaae4b1 <WriteStream map = 0x376b6a3c3c81>  (input #3)
    0x7fff5fbf5468: [top + 24] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #4)
    0x7fff5fbf5460: [top + 16] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf5458: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf5450: [top + 0] <- 0x376b90f02569 ;  accumulator 0x376b90f02569 <Odd Oddball: optimized_out>  (input #7)
[deoptimizing (eager): end 0x376bea9db609 <JSFunction _unrefTimer (sfi = 0x376bea9c64d1)> @1 => node=13, pc=0x173e474bd9c0, caller sp=0x7fff5fbf54b0, state=TOS_REGISTER, took 1.703 ms]
[removing optimized code for: 0x376bea9db609 <JSFunction _unrefTimer (sfi = 0x376bea9c64d1)>]
[deoptimizing (DEOPT eager): begin 0x376bea9a6711 <JSFunction insert (sfi = 0x376b2a9353a9)> (opt #35) @1, FP to SP delta: 40, caller sp: 0x7fff5fbf5400]
            ;;; deoptimize at <timers.js:167:22>, wrong map
  reading input frame insert => bytecode_offset=0, args=3, height=9; inputs:
      0: 0x376bea9a6711 ; [fp - 16] 0x376bea9a6711 <JSFunction insert (sfi = 0x376b2a9353a9)>
      1: 0x376b90f022d1 ; [fp + 32] 0x376b90f022d1 <undefined>
      2: 0x376b9eaae4b1 ; rax 0x376b9eaae4b1 <WriteStream map = 0x376b6a3c3c81>
      3: 0x376b90f02371 ; [fp + 16] 0x376b90f02371 <true>
      4: 0x376bb4971de9 ; [fp - 8] 0x376bb4971de9 <FixedArray[46]>
      5: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
      6: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
      7: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
      8: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
      9: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
     10: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
     11: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
     12: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
     13: 0x376b90f02569 ; (literal 5) 0x376b90f02569 <Odd Oddball: optimized_out>
  translating interpreted frame insert => bytecode_offset=0, height=72
    0x7fff5fbf53f8: [top + 136] <- 0x376b90f022d1 ;  0x376b90f022d1 <undefined>  (input #1)
    0x7fff5fbf53f0: [top + 128] <- 0x376b9eaae4b1 ;  0x376b9eaae4b1 <WriteStream map = 0x376b6a3c3c81>  (input #2)
    0x7fff5fbf53e8: [top + 120] <- 0x376b90f02371 ;  0x376b90f02371 <true>  (input #3)
    -------------------------
    0x7fff5fbf53e0: [top + 112] <- 0x173e474bd196 ;  caller's pc
    0x7fff5fbf53d8: [top + 104] <- 0x7fff5fbf5438 ;  caller's fp
    0x7fff5fbf53d0: [top + 96] <- 0x376bb4971de9 ;  context    0x376bb4971de9 <FixedArray[46]>  (input #4)
    0x7fff5fbf53c8: [top + 88] <- 0x376bea9a6711 ;  function    0x376bea9a6711 <JSFunction insert (sfi = 0x376b2a9353a9)>  (input #0)
    0x7fff5fbf53c0: [top + 80] <- 0x376bd58647d9 ;  bytecode array 0x376bd58647d9 <BytecodeArray[281]>  (input #0)
    0x7fff5fbf53b8: [top + 72] <- 0x3900000000 ;  bytecode offset @ 0
  (input #0)
    -------------------------
    0x7fff5fbf53b0: [top + 64] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf53a8: [top + 56] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf53a0: [top + 48] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5398: [top + 40] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5390: [top + 32] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5388: [top + 24] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf5380: [top + 16] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf5378: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #12)
    0x7fff5fbf5370: [top + 0] <- 0x376b90f02569 ;  accumulator 0x376b90f02569 <Odd Oddball: optimized_out>  (input #13)
[deoptimizing (eager): end 0x376bea9a6711 <JSFunction insert (sfi = 0x376b2a9353a9)> @1 => node=0, pc=0x173e474bd9c0, caller sp=0x7fff5fbf5400, state=TOS_REGISTER, took 2.180 ms]
[removing optimized code for: 0x376bea9a6711 <JSFunction insert (sfi = 0x376b2a9353a9)>]
[deoptimizing (DEOPT eager): begin 0x376be7d83e69 <JSFunction onwrite (sfi = 0x376b2a96b441)> (opt #11) @20, FP to SP delta: 88, caller sp: 0x7fff5fbf5478]
            ;;; deoptimize at <_stream_writable.js:443:22>, wrong map
  reading input frame onwrite => bytecode_offset=0, args=3, height=12; inputs:
      0: 0x376be7d83e69 ; [fp - 16] 0x376be7d83e69 <JSFunction onwrite (sfi = 0x376b2a96b441)>
      1: 0x376b90f022d1 ; [fp + 32] 0x376b90f022d1 <undefined>
      2: 0x376b9eaae4b1 ; [fp + 24] 0x376b9eaae4b1 <WriteStream map = 0x376b6a3c3c81>
      3: 0x376b90f022d1 ; [fp + 16] 0x376b90f022d1 <undefined>
      4: 0x376b9ea97ac9 ; [fp - 8] 0x376b9ea97ac9 <FixedArray[28]>
      5: 0x376b90f02569 ; (literal 7) 0x376b90f02569 <Odd Oddball: optimized_out>
      6: 0x376b90f02569 ; (literal 7) 0x376b90f02569 <Odd Oddball: optimized_out>
      7: 0x376b90f02569 ; (literal 7) 0x376b90f02569 <Odd Oddball: optimized_out>
      8: 0x376b90f02569 ; (literal 7) 0x376b90f02569 <Odd Oddball: optimized_out>
      9: 0x376b90f02569 ; (literal 7) 0x376b90f02569 <Odd Oddball: optimized_out>
     10: 0x376b90f02569 ; (literal 7) 0x376b90f02569 <Odd Oddball: optimized_out>
     11: 0x376b90f02569 ; (literal 7) 0x376b90f02569 <Odd Oddball: optimized_out>
     12: 0x376b90f02569 ; (literal 7) 0x376b90f02569 <Odd Oddball: optimized_out>
     13: 0x376b90f02569 ; (literal 7) 0x376b90f02569 <Odd Oddball: optimized_out>
     14: 0x376b90f02569 ; (literal 7) 0x376b90f02569 <Odd Oddball: optimized_out>
     15: 0x376b90f02569 ; (literal 7) 0x376b90f02569 <Odd Oddball: optimized_out>
     16: 0x376b90f02569 ; (literal 7) 0x376b90f02569 <Odd Oddball: optimized_out>
  translating interpreted frame onwrite => bytecode_offset=0, height=96
    0x7fff5fbf5470: [top + 160] <- 0x376b90f022d1 ;  0x376b90f022d1 <undefined>  (input #1)
    0x7fff5fbf5468: [top + 152] <- 0x376b9eaae4b1 ;  0x376b9eaae4b1 <WriteStream map = 0x376b6a3c3c81>  (input #2)
    0x7fff5fbf5460: [top + 144] <- 0x376b90f022d1 ;  0x376b90f022d1 <undefined>  (input #3)
    -------------------------
    0x7fff5fbf5458: [top + 136] <- 0x173e4740535f ;  caller's pc
    0x7fff5fbf5450: [top + 128] <- 0x7fff5fbf5490 ;  caller's fp
    0x7fff5fbf5448: [top + 120] <- 0x376b9ea97ac9 ;  context    0x376b9ea97ac9 <FixedArray[28]>  (input #4)
    0x7fff5fbf5440: [top + 112] <- 0x376be7d83e69 ;  function    0x376be7d83e69 <JSFunction onwrite (sfi = 0x376b2a96b441)>  (input #0)
    0x7fff5fbf5438: [top + 104] <- 0x376bae33c0d1 ;  bytecode array 0x376bae33c0d1 <BytecodeArray[157]>  (input #0)
    0x7fff5fbf5430: [top + 96] <- 0x3900000000 ;  bytecode offset @ 0
  (input #0)
    -------------------------
    0x7fff5fbf5428: [top + 88] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #5)
    0x7fff5fbf5420: [top + 80] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf5418: [top + 72] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5410: [top + 64] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5408: [top + 56] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #9)
    0x7fff5fbf5400: [top + 48] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf53f8: [top + 40] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf53f0: [top + 32] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #12)
    0x7fff5fbf53e8: [top + 24] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf53e0: [top + 16] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #14)
    0x7fff5fbf53d8: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #15)
    0x7fff5fbf53d0: [top + 0] <- 0x376b90f02569 ;  accumulator 0x376b90f02569 <Odd Oddball: optimized_out>  (input #16)
[deoptimizing (eager): end 0x376be7d83e69 <JSFunction onwrite (sfi = 0x376b2a96b441)> @20 => node=0, pc=0x173e474bd9c0, caller sp=0x7fff5fbf5478, state=TOS_REGISTER, took 2.523 ms]
[removing optimized code for: 0x376be7d83e69 <JSFunction onwrite (sfi = 0x376b2a96b441)>]
[deoptimizing (DEOPT soft): begin 0x376bea9a31a1 <JSFunction internalNextTick (sfi = 0x376b2a9199c1)> (opt #74) @9, FP to SP delta: 48, caller sp: 0x7fff5fbf5d70]
            ;;; deoptimize at <internal/process/next_tick.js:240:24>, Insufficient type feedback for call
  reading input frame internalNextTick => bytecode_offset=274, args=3, height=12; inputs:
      0: 0x376bea9a31a1 ; [fp - 16] 0x376bea9a31a1 <JSFunction internalNextTick (sfi = 0x376b2a9199c1)>
      1: 0x376b90f022d1 ; [fp + 32] 0x376b90f022d1 <undefined>
      2: 0x376b90f02201 ; rdx 0x376b90f02201 <null>
      3: 0x376b9eabd5f9 ; r11 0x376b9eabd5f9 <JSFunction emitCloseNT (sfi = 0x376bea9c6429)>
      4: 0x376bea99a191 ; [fp - 8] 0x376bea99a191 <FixedArray[28]>
      5: 0x376b1dec1bb9 ; rbx 0x376b1dec1bb9 <JSArray[1]>
      6: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
      7: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
      8: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
      9: 0x376bea99f411 ; (literal 17) 0x376bea99f411 <JSFunction getDefaultTriggerAsyncId (sfi = 0x376b2a91b729)>
     10: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
     11: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
     12: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
     13: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
     14: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
     15: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
     16: 0x376b90f02569 ; (literal 4) 0x376b90f02569 <Odd Oddball: optimized_out>
  translating interpreted frame internalNextTick => bytecode_offset=274, height=96
    0x7fff5fbf5d68: [top + 160] <- 0x376b90f022d1 ;  0x376b90f022d1 <undefined>  (input #1)
    0x7fff5fbf5d60: [top + 152] <- 0x376b90f02201 ;  0x376b90f02201 <null>  (input #2)
    0x7fff5fbf5d58: [top + 144] <- 0x376b9eabd5f9 ;  0x376b9eabd5f9 <JSFunction emitCloseNT (sfi = 0x376bea9c6429)>  (input #3)
    -------------------------
    0x7fff5fbf5d50: [top + 136] <- 0x173e4740535f ;  caller's pc
    0x7fff5fbf5d48: [top + 128] <- 0x7fff5fbf5d88 ;  caller's fp
    0x7fff5fbf5d40: [top + 120] <- 0x376bea99a191 ;  context    0x376bea99a191 <FixedArray[28]>  (input #4)
    0x7fff5fbf5d38: [top + 112] <- 0x376bea9a31a1 ;  function    0x376bea9a31a1 <JSFunction internalNextTick (sfi = 0x376b2a9199c1)>  (input #0)
    0x7fff5fbf5d30: [top + 104] <- 0x376bd585d339 ;  bytecode array 0x376bd585d339 <BytecodeArray[364]>  (input #0)
    0x7fff5fbf5d28: [top + 96] <- 0x14b00000000 ;  bytecode offset @ 274
  (input #0)
    -------------------------
    0x7fff5fbf5d20: [top + 88] <- 0x376b1dec1bb9 ;  0x376b1dec1bb9 <JSArray[1]>  (input #5)
    0x7fff5fbf5d18: [top + 80] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #6)
    0x7fff5fbf5d10: [top + 72] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #7)
    0x7fff5fbf5d08: [top + 64] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #8)
    0x7fff5fbf5d00: [top + 56] <- 0x376bea99f411 ;  0x376bea99f411 <JSFunction getDefaultTriggerAsyncId (sfi = 0x376b2a91b729)>  (input #9)
    0x7fff5fbf5cf8: [top + 48] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #10)
    0x7fff5fbf5cf0: [top + 40] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #11)
    0x7fff5fbf5ce8: [top + 32] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #12)
    0x7fff5fbf5ce0: [top + 24] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #13)
    0x7fff5fbf5cd8: [top + 16] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #14)
    0x7fff5fbf5cd0: [top + 8] <- 0x376b90f02569 ;  0x376b90f02569 <Odd Oddball: optimized_out>  (input #15)
    0x7fff5fbf5cc8: [top + 0] <- 0x376b90f02569 ;  accumulator 0x376b90f02569 <Odd Oddball: optimized_out>  (input #16)
[deoptimizing (soft): end 0x376bea9a31a1 <JSFunction internalNextTick (sfi = 0x376b2a9199c1)> @9 => node=274, pc=0x173e474bd9c0, caller sp=0x7fff5fbf5d70, state=TOS_REGISTER, took 2.743 ms]
[removing optimized code for: 0x376bea9a31a1 <JSFunction internalNextTick (sfi = 0x376b2a9199c1)>]
